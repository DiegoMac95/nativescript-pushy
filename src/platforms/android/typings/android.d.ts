/// <reference path="android-declarations.d.ts"/>

declare module me {
	export module pushy {
		export module sdk {
			export class BuildConfig {
				public static class: java.lang.Class<me.pushy.sdk.BuildConfig>;
				public static DEBUG: boolean;
				public static APPLICATION_ID: string;
				public static BUILD_TYPE: string;
				public static FLAVOR: string;
				public static VERSION_CODE: number;
				public static VERSION_NAME: string;
				public constructor();
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export class Pushy {
				public static class: java.lang.Class<me.pushy.sdk.Pushy>;
				public static subscribe(param0: native.Array<string>, param1: globalAndroid.content.Context): void;
				public static unsubscribe(param0: string, param1: globalAndroid.content.Context): void;
				public static setAppId(param0: string, param1: globalAndroid.content.Context): void;
				public static setEnterpriseCertificate(param0: string, param1: globalAndroid.content.Context): void;
				public static setHeartbeatInterval(param0: number, param1: globalAndroid.content.Context): void;
				public static setEnterpriseConfig(param0: string, param1: string, param2: globalAndroid.content.Context): void;
				public static subscribe(param0: string, param1: globalAndroid.content.Context): void;
				public static togglePermissionVerification(param0: boolean, param1: globalAndroid.content.Context): void;
				public static setProxyEndpoint(param0: string, param1: globalAndroid.content.Context): void;
				public static setJobServiceInterval(param0: number, param1: globalAndroid.content.Context): void;
				public static isConnected(): boolean;
				public static toggleExternalStoragePersistence(param0: boolean, param1: globalAndroid.content.Context): void;
				public constructor();
				public static listen(param0: globalAndroid.content.Context): void;
				public static unsubscribe(param0: native.Array<string>, param1: globalAndroid.content.Context): void;
				public static toggleDirectConnectivity(param0: boolean, param1: globalAndroid.content.Context): void;
				public static register(param0: globalAndroid.content.Context): string;
				public static getDeviceCredentials(param0: globalAndroid.content.Context): me.pushy.sdk.model.PushyDeviceCredentials;
				public static toggleWifiPolicyCompliance(param0: boolean, param1: globalAndroid.content.Context): void;
				public static setDeviceCredentials(param0: me.pushy.sdk.model.PushyDeviceCredentials, param1: globalAndroid.content.Context): void;
				public static toggleNotifications(param0: boolean, param1: globalAndroid.content.Context): void;
				public static unregister(param0: globalAndroid.content.Context): void;
				public static isRegistered(param0: globalAndroid.content.Context): boolean;
				public static setNotificationChannel(param0: any, param1: globalAndroid.content.Context): void;
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export class R {
				public static class: java.lang.Class<me.pushy.sdk.R>;
				public constructor();
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module config {
				export class PushyAPI {
					public static class: java.lang.Class<me.pushy.sdk.config.PushyAPI>;
					public static ENDPOINT: string;
					public static TIMEOUT: number;
					public constructor();
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module config {
				export class PushyBroadcast {
					public static class: java.lang.Class<me.pushy.sdk.config.PushyBroadcast>;
					public static ACTION: string;
					public constructor();
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module config {
				export class PushyLogging {
					public static class: java.lang.Class<me.pushy.sdk.config.PushyLogging>;
					public static TAG: string;
					public constructor();
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module config {
				export class PushyMQTT {
					public static class: java.lang.Class<me.pushy.sdk.config.PushyMQTT>;
					public static ENDPOINT: string;
					public static DIRECT_ENDPOINT: string;
					public static INITIAL_RETRY_INTERVAL: number;
					public static MAXIMUM_RETRY_INTERVAL: number;
					public static MQTT_QUALITY_OF_SERVICE: number;
					public static MQTT_DEFAULT_KEEP_ALIVE: number;
					public static MQTT_RETAINED_PUBLISH: boolean;
					public static MQTT_ACK_TIMEOUT: number;
					public static MQTT_CONNECT_TIMEOUT: number;
					public static MQTT_JOB_ID: number;
					public static MQTT_DEFAULT_JOB_SERVICE_INTERVAL: number;
					public static MQTT_JOB_TASK_INTERVAL_PADDING: number;
					public constructor();
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module config {
				export class PushyNotificationChannel {
					public static class: java.lang.Class<me.pushy.sdk.config.PushyNotificationChannel>;
					public static CHANNEL_ID: string;
					public static CHANNEL_NAME: string;
					public static CHANNEL_IMPORTANCE: number;
					public constructor();
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module config {
				export class PushyPermissions {
					public static class: java.lang.Class<me.pushy.sdk.config.PushyPermissions>;
					public static REQUIRED_MANIFEST_PERMISSIONS: native.Array<string>;
					public constructor();
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module config {
				export class PushyPreferenceKeys {
					public static class: java.lang.Class<me.pushy.sdk.config.PushyPreferenceKeys>;
					public static APP_ID: string;
					public static DEVICE_TOKEN: string;
					public static DEVICE_AUTH_KEY: string;
					public static KEEPALIVE_INTERVAL: string;
					public static JOBSERVICE_INTERVAL: string;
					public static PERMISSION_ENFORCEMENT: string;
					public static NOTIFICATIONS_ENABLED: string;
					public static DIRECT_CONNECTIVITY: string;
					public static WIFI_POLICY_COMPLIANCE: string;
					public static ENTERPRISE_API_ENDPOINT: string;
					public static ENTERPRISE_MQTT_ENDPOINT: string;
					public static PROXY_ENDPOINT: string;
					public static EXTERNAL_STORAGE_PERSISTENCE: string;
					public static ENTERPRISE_CERTIFICATE: string;
					public static ENTERPRISE_KEY_SUFFIX: string;
					public constructor();
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module config {
				export class PushySDK {
					public static class: java.lang.Class<me.pushy.sdk.config.PushySDK>;
					public static VERSION_CODE: number;
					public static PLATFORM_CODE: string;
					public constructor();
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module config {
				export class PushyStorage {
					public static class: java.lang.Class<me.pushy.sdk.config.PushyStorage>;
					public static EXTERNAL_STORAGE_APP_ID_FILE: string;
					public static EXTERNAL_STORAGE_TOKEN_FILE: string;
					public static EXTERNAL_STORAGE_AUTH_KEY_FILE: string;
					public static EXTERNAL_STORAGE_FILE_ENTERPRISE_PREFIX: string;
					public static EXTERNAL_STORAGE_DIRECTORY: string;
					public constructor();
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JacksonAnnotation {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JacksonAnnotation>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JacksonAnnotation interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JacksonAnnotationValue<A>  extends java.lang.Object {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JacksonAnnotationValue<any>>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JacksonAnnotationValue<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								valueFor(): java.lang.Class<A>;
							});
							public constructor();
							public valueFor(): java.lang.Class<A>;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JacksonAnnotationsInside {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JacksonAnnotationsInside>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JacksonAnnotationsInside interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JacksonInject {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JacksonInject>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JacksonInject interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): string;
								useInput(): me.pushy.sdk.lib.jackson.annotation.OptBoolean;
							});
							public constructor();
							public useInput(): me.pushy.sdk.lib.jackson.annotation.OptBoolean;
							public value(): string;
						}
						export module JacksonInject {
							export class Value extends java.lang.Object {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JacksonInject.Value>;
								public static EMPTY: me.pushy.sdk.lib.jackson.annotation.JacksonInject.Value;
								public _id: any;
								public _useInput: java.lang.Boolean;
								public toString(): string;
								public valueFor(): java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JacksonInject>;
								public static forId(param0: any): me.pushy.sdk.lib.jackson.annotation.JacksonInject.Value;
								public getId(): any;
								public willUseInput(param0: boolean): boolean;
								public equals(param0: any): boolean;
								public constructor(param0: any, param1: java.lang.Boolean);
								public static from(param0: me.pushy.sdk.lib.jackson.annotation.JacksonInject): me.pushy.sdk.lib.jackson.annotation.JacksonInject.Value;
								public withId(param0: any): me.pushy.sdk.lib.jackson.annotation.JacksonInject.Value;
								public valueFor(): java.lang.Class<any>;
								public hasId(): boolean;
								public static empty(): me.pushy.sdk.lib.jackson.annotation.JacksonInject.Value;
								public hashCode(): number;
								public withUseInput(param0: java.lang.Boolean): me.pushy.sdk.lib.jackson.annotation.JacksonInject.Value;
								public static construct(param0: any, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.annotation.JacksonInject.Value;
								public getUseInput(): java.lang.Boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonAlias {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonAlias>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonAlias interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): native.Array<string>;
							});
							public constructor();
							public value(): native.Array<string>;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonAnyGetter {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonAnyGetter>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonAnyGetter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								enabled(): boolean;
							});
							public constructor();
							public enabled(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonAnySetter {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonAnySetter>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonAnySetter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								enabled(): boolean;
							});
							public constructor();
							public enabled(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonAutoDetect {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getterVisibility(): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
								isGetterVisibility(): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
								setterVisibility(): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
								creatorVisibility(): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
								fieldVisibility(): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
							});
							public constructor();
							public setterVisibility(): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
							public getterVisibility(): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
							public isGetterVisibility(): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
							public fieldVisibility(): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
							public creatorVisibility(): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
						}
						export module JsonAutoDetect {
							export class Value extends java.lang.Object {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value>;
								public static DEFAULT: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value;
								public static NO_OVERRIDES: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value;
								public _fieldVisibility: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
								public _getterVisibility: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
								public _isGetterVisibility: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
								public _setterVisibility: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
								public _creatorVisibility: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
								public toString(): string;
								public valueFor(): java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect>;
								public equals(param0: any): boolean;
								public getSetterVisibility(): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
								public static merge(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value, param1: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value;
								public withOverrides(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value;
								public withIsGetterVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value;
								public valueFor(): java.lang.Class<any>;
								public getGetterVisibility(): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
								public static construct(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility, param1: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility, param2: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility, param3: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility, param4: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value;
								public getFieldVisibility(): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
								public getIsGetterVisibility(): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
								public static defaultVisibility(): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value;
								public static noOverrides(): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value;
								public withFieldVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value;
								public static from(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value;
								public withCreatorVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value;
								public getCreatorVisibility(): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
								public readResolve(): any;
								public withSetterVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value;
								public withGetterVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value;
								public hashCode(): number;
								public static construct(param0: me.pushy.sdk.lib.jackson.annotation.PropertyAccessor, param1: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value;
							}
							export class Visibility {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility>;
								public static ANY: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
								public static NON_PRIVATE: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
								public static PROTECTED_AND_PUBLIC: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
								public static PUBLIC_ONLY: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
								public static NONE: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
								public static DEFAULT: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
								public static values(): native.Array<me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility>;
								public static valueOf(param0: string): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
								public isVisible(param0: java.lang.reflect.Member): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonBackReference {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonBackReference>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonBackReference interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): string;
							});
							public constructor();
							public value(): string;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonClassDescription {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonClassDescription>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonClassDescription interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): string;
							});
							public constructor();
							public value(): string;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonCreator {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonCreator>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonCreator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								mode(): me.pushy.sdk.lib.jackson.annotation.JsonCreator.Mode;
							});
							public constructor();
							public mode(): me.pushy.sdk.lib.jackson.annotation.JsonCreator.Mode;
						}
						export module JsonCreator {
							export class Mode {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonCreator.Mode>;
								public static DEFAULT: me.pushy.sdk.lib.jackson.annotation.JsonCreator.Mode;
								public static DELEGATING: me.pushy.sdk.lib.jackson.annotation.JsonCreator.Mode;
								public static PROPERTIES: me.pushy.sdk.lib.jackson.annotation.JsonCreator.Mode;
								public static DISABLED: me.pushy.sdk.lib.jackson.annotation.JsonCreator.Mode;
								public static values(): native.Array<me.pushy.sdk.lib.jackson.annotation.JsonCreator.Mode>;
								public static valueOf(param0: string): me.pushy.sdk.lib.jackson.annotation.JsonCreator.Mode;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonEnumDefaultValue {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonEnumDefaultValue>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonEnumDefaultValue interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonFilter {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonFilter>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonFilter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): string;
							});
							public constructor();
							public value(): string;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonFormat {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonFormat>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonFormat interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								pattern(): string;
								shape(): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape;
								locale(): string;
								timezone(): string;
								lenient(): me.pushy.sdk.lib.jackson.annotation.OptBoolean;
								with(): native.Array<me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature>;
								without(): native.Array<me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature>;
							});
							public constructor();
							public static DEFAULT_TIMEZONE: string;
							public static DEFAULT_LOCALE: string;
							public lenient(): me.pushy.sdk.lib.jackson.annotation.OptBoolean;
							public pattern(): string;
							public with(): native.Array<me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature>;
							public locale(): string;
							public timezone(): string;
							public without(): native.Array<me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature>;
							public shape(): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape;
						}
						export module JsonFormat {
							export class Feature {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature>;
								public static ACCEPT_SINGLE_VALUE_AS_ARRAY: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature;
								public static ACCEPT_CASE_INSENSITIVE_PROPERTIES: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature;
								public static WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature;
								public static WRITE_DATES_WITH_ZONE_ID: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature;
								public static WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature;
								public static WRITE_SORTED_MAP_ENTRIES: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature;
								public static ADJUST_DATES_TO_CONTEXT_TIME_ZONE: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature;
								public static values(): native.Array<me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature>;
								public static valueOf(param0: string): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature;
							}
							export class Features {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonFormat.Features>;
								public static construct(param0: native.Array<me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature>, param1: native.Array<me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Features;
								public with(param0: native.Array<me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Features;
								public without(param0: native.Array<me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Features;
								public withOverrides(param0: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Features): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Features;
								public equals(param0: any): boolean;
								public static empty(): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Features;
								public hashCode(): number;
								public static construct(param0: me.pushy.sdk.lib.jackson.annotation.JsonFormat): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Features;
								public get(param0: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature): java.lang.Boolean;
							}
							export class Shape {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape>;
								public static ANY: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape;
								public static NATURAL: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape;
								public static SCALAR: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape;
								public static ARRAY: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape;
								public static OBJECT: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape;
								public static NUMBER: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape;
								public static NUMBER_FLOAT: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape;
								public static NUMBER_INT: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape;
								public static STRING: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape;
								public static BOOLEAN: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape;
								public isStructured(): boolean;
								public static values(): native.Array<me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape>;
								public isNumeric(): boolean;
								public static valueOf(param0: string): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape;
							}
							export class Value extends java.lang.Object {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value>;
								public static from(param0: me.pushy.sdk.lib.jackson.annotation.JsonFormat): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public isLenient(): boolean;
								public static forPattern(param0: string): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public withShape(param0: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public toString(): string;
								public hasShape(): boolean;
								public static mergeAll(param0: native.Array<me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public hasLocale(): boolean;
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape, param2: java.util.Locale, param3: string, param4: java.util.TimeZone, param5: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Features, param6: java.lang.Boolean);
								public hasLenient(): boolean;
								public getFeatures(): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Features;
								public equals(param0: any): boolean;
								public withPattern(param0: string): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public valueFor(): java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonFormat>;
								public getTimeZone(): java.util.TimeZone;
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape, param2: java.util.Locale, param3: string, param4: java.util.TimeZone, param5: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Features);
								public timeZoneAsString(): string;
								public withOverrides(param0: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public static merge(param0: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value, param1: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public withTimeZone(param0: java.util.TimeZone): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public getPattern(): string;
								public withFeature(param0: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public getLocale(): java.util.Locale;
								public static forLeniency(param0: boolean): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape, param2: string, param3: string, param4: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Features, param5: java.lang.Boolean);
								public static empty(): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public constructor(param0: me.pushy.sdk.lib.jackson.annotation.JsonFormat);
								public withLenient(param0: java.lang.Boolean): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public hasPattern(): boolean;
								public constructor();
								public getFeature(param0: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature): java.lang.Boolean;
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape, param2: java.util.Locale, param3: java.util.TimeZone, param4: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Features);
								public withoutFeature(param0: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public getShape(): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape;
								public valueFor(): java.lang.Class<any>;
								public withLocale(param0: java.util.Locale): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public hasTimeZone(): boolean;
								public getLenient(): java.lang.Boolean;
								public static forShape(param0: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape, param2: string, param3: string, param4: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Features);
								public hashCode(): number;
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape, param2: java.util.Locale, param3: java.util.TimeZone, param4: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Features, param5: java.lang.Boolean);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonGetter {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonGetter>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonGetter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): string;
							});
							public constructor();
							public value(): string;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonIdentityInfo {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonIdentityInfo>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonIdentityInfo interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								property(): string;
								generator(): java.lang.Class<any>;
								resolver(): java.lang.Class<any>;
								scope(): java.lang.Class<any>;
							});
							public constructor();
							public scope(): java.lang.Class<any>;
							public property(): string;
							public generator(): java.lang.Class<any>;
							public resolver(): java.lang.Class<any>;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonIdentityReference {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonIdentityReference>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonIdentityReference interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								alwaysAsId(): boolean;
							});
							public constructor();
							public alwaysAsId(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonIgnore {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonIgnore>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonIgnore interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): boolean;
							});
							public constructor();
							public value(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonIgnoreProperties {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): native.Array<string>;
								ignoreUnknown(): boolean;
								allowGetters(): boolean;
								allowSetters(): boolean;
							});
							public constructor();
							public allowSetters(): boolean;
							public value(): native.Array<string>;
							public ignoreUnknown(): boolean;
							public allowGetters(): boolean;
						}
						export module JsonIgnoreProperties {
							export class Value extends java.lang.Object {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value>;
								public static EMPTY: me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public _ignored: java.util.Set<string>;
								public _ignoreUnknown: boolean;
								public _allowGetters: boolean;
								public _allowSetters: boolean;
								public _merge: boolean;
								public withIgnored(param0: java.util.Set<string>): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public toString(): string;
								public static from(param0: me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public static forIgnoreUnknown(param0: boolean): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public withIgnored(param0: native.Array<string>): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public getIgnoreUnknown(): boolean;
								public equals(param0: any): boolean;
								public withoutMerge(): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public static forIgnoredProperties(param0: java.util.Set<string>): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public findIgnoredForDeserialization(): java.util.Set<string>;
								public getAllowGetters(): boolean;
								public withoutIgnored(): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public withIgnoreUnknown(): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public static empty(): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public static mergeAll(param0: native.Array<me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value>): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public withoutIgnoreUnknown(): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public static merge(param0: me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value, param1: me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public getAllowSetters(): boolean;
								public static forIgnoredProperties(param0: native.Array<string>): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public valueFor(): java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties>;
								public valueFor(): java.lang.Class<any>;
								public withOverrides(param0: me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public constructor(param0: java.util.Set<string>, param1: boolean, param2: boolean, param3: boolean, param4: boolean);
								public withMerge(): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public getIgnored(): java.util.Set<string>;
								public findIgnoredForSerialization(): java.util.Set<string>;
								public static construct(param0: java.util.Set<string>, param1: boolean, param2: boolean, param3: boolean, param4: boolean): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public readResolve(): any;
								public getMerge(): boolean;
								public withoutAllowGetters(): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public withoutAllowSetters(): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public hashCode(): number;
								public withAllowGetters(): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public withAllowSetters(): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonIgnoreType {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonIgnoreType>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonIgnoreType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): boolean;
							});
							public constructor();
							public value(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonInclude {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonInclude>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonInclude interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
								content(): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
								valueFilter(): java.lang.Class<any>;
								contentFilter(): java.lang.Class<any>;
							});
							public constructor();
							public value(): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
							public valueFilter(): java.lang.Class<any>;
							public content(): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
							public contentFilter(): java.lang.Class<any>;
						}
						export module JsonInclude {
							export class Include {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include>;
								public static ALWAYS: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
								public static NON_NULL: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
								public static NON_ABSENT: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
								public static NON_EMPTY: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
								public static NON_DEFAULT: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
								public static CUSTOM: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
								public static USE_DEFAULTS: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
								public static values(): native.Array<me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include>;
								public static valueOf(param0: string): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
							}
							export class Value extends java.lang.Object {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value>;
								public static EMPTY: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public _valueInclusion: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
								public _contentInclusion: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
								public _valueFilter: java.lang.Class<any>;
								public _contentFilter: java.lang.Class<any>;
								public static empty(): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public static mergeAll(param0: native.Array<me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public toString(): string;
								public static construct(param0: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include, param1: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public withValueInclusion(param0: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public static construct(param0: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include, param1: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include, param2: java.lang.Class<any>, param3: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public withContentFilter(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public equals(param0: any): boolean;
								public withContentInclusion(param0: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public withOverrides(param0: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public getValueFilter(): java.lang.Class<any>;
								public valueFor(): java.lang.Class<any>;
								public withValueFilter(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public constructor(param0: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include, param1: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include, param2: java.lang.Class<any>, param3: java.lang.Class<any>);
								public getContentFilter(): java.lang.Class<any>;
								public static from(param0: me.pushy.sdk.lib.jackson.annotation.JsonInclude): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public static merge(param0: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value, param1: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public readResolve(): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.annotation.JsonInclude);
								public hashCode(): number;
								public getContentInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
								public valueFor(): java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonInclude>;
								public getValueInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonManagedReference {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonManagedReference>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonManagedReference interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): string;
							});
							public constructor();
							public value(): string;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonMerge {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonMerge>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonMerge interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): me.pushy.sdk.lib.jackson.annotation.OptBoolean;
							});
							public constructor();
							public value(): me.pushy.sdk.lib.jackson.annotation.OptBoolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonProperty {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonProperty>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonProperty interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): string;
								required(): boolean;
								index(): number;
								defaultValue(): string;
								access(): me.pushy.sdk.lib.jackson.annotation.JsonProperty.Access;
							});
							public constructor();
							public static USE_DEFAULT_NAME: string;
							public static INDEX_UNKNOWN: number;
							public index(): number;
							public access(): me.pushy.sdk.lib.jackson.annotation.JsonProperty.Access;
							public value(): string;
							public required(): boolean;
							public defaultValue(): string;
						}
						export module JsonProperty {
							export class Access {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonProperty.Access>;
								public static AUTO: me.pushy.sdk.lib.jackson.annotation.JsonProperty.Access;
								public static READ_ONLY: me.pushy.sdk.lib.jackson.annotation.JsonProperty.Access;
								public static WRITE_ONLY: me.pushy.sdk.lib.jackson.annotation.JsonProperty.Access;
								public static READ_WRITE: me.pushy.sdk.lib.jackson.annotation.JsonProperty.Access;
								public static values(): native.Array<me.pushy.sdk.lib.jackson.annotation.JsonProperty.Access>;
								public static valueOf(param0: string): me.pushy.sdk.lib.jackson.annotation.JsonProperty.Access;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonPropertyDescription {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonPropertyDescription>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonPropertyDescription interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): string;
							});
							public constructor();
							public value(): string;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonPropertyOrder {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonPropertyOrder>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonPropertyOrder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): native.Array<string>;
								alphabetic(): boolean;
							});
							public constructor();
							public alphabetic(): boolean;
							public value(): native.Array<string>;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonRawValue {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonRawValue>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonRawValue interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): boolean;
							});
							public constructor();
							public value(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonRootName {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonRootName>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonRootName interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): string;
								namespace(): string;
							});
							public constructor();
							public namespace(): string;
							public value(): string;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonSetter {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonSetter>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonSetter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): string;
								nulls(): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls;
								contentNulls(): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls;
							});
							public constructor();
							public value(): string;
							public nulls(): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls;
							public contentNulls(): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls;
						}
						export module JsonSetter {
							export class Nulls {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls>;
								public static SET: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls;
								public static SKIP: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls;
								public static FAIL: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls;
								public static AS_EMPTY: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls;
								public static DEFAULT: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls;
								public static values(): native.Array<me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls>;
								public static valueOf(param0: string): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls;
							}
							export class Value extends java.lang.Object {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value>;
								public static EMPTY: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value;
								public nonDefaultValueNulls(): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls;
								public toString(): string;
								public static construct(param0: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls, param1: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value;
								public getValueNulls(): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls;
								public static forValueNulls(param0: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value;
								public equals(param0: any): boolean;
								public getContentNulls(): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls;
								public static forValueNulls(param0: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls, param1: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value;
								public valueFor(): java.lang.Class<any>;
								public nonDefaultContentNulls(): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls;
								public static from(param0: me.pushy.sdk.lib.jackson.annotation.JsonSetter): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value;
								public withOverrides(param0: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value;
								public valueFor(): java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonSetter>;
								public withValueNulls(param0: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value;
								public withValueNulls(param0: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls, param1: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value;
								public readResolve(): any;
								public withContentNulls(param0: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value;
								public static empty(): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value;
								public static forContentNulls(param0: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value;
								public hashCode(): number;
								public static merge(param0: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value, param1: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value;
								public constructor(param0: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls, param1: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonSubTypes {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonSubTypes>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonSubTypes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): native.Array<me.pushy.sdk.lib.jackson.annotation.JsonSubTypes.Type>;
							});
							public constructor();
							public value(): native.Array<me.pushy.sdk.lib.jackson.annotation.JsonSubTypes.Type>;
						}
						export module JsonSubTypes {
							export class Type {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonSubTypes.Type>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonSubTypes$Type interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									value(): java.lang.Class<any>;
									name(): string;
								});
								public constructor();
								public name(): string;
								public value(): java.lang.Class<any>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonTypeId {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonTypeId>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonTypeId interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonTypeInfo {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								use(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id;
								include(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
								property(): string;
								defaultImpl(): java.lang.Class<any>;
								visible(): boolean;
							});
							public constructor();
							public use(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id;
							public include(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
							public property(): string;
							public defaultImpl(): java.lang.Class<any>;
							public visible(): boolean;
						}
						export module JsonTypeInfo {
							export class As {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As>;
								public static PROPERTY: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
								public static WRAPPER_OBJECT: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
								public static WRAPPER_ARRAY: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
								public static EXTERNAL_PROPERTY: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
								public static EXISTING_PROPERTY: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
								public static values(): native.Array<me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As>;
								public static valueOf(param0: string): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
							}
							export class Id {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id>;
								public static NONE: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id;
								public static CLASS: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id;
								public static MINIMAL_CLASS: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id;
								public static NAME: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id;
								public static CUSTOM: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id;
								public static valueOf(param0: string): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id;
								public getDefaultPropertyName(): string;
								public static values(): native.Array<me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id>;
							}
							export abstract class None {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.None>;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonTypeName {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonTypeName>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonTypeName interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): string;
							});
							public constructor();
							public value(): string;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonUnwrapped {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonUnwrapped>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonUnwrapped interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								enabled(): boolean;
								prefix(): string;
								suffix(): string;
							});
							public constructor();
							public prefix(): string;
							public suffix(): string;
							public enabled(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonValue {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonValue>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonValue interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): boolean;
							});
							public constructor();
							public value(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class JsonView {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.JsonView>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.JsonView interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								value(): native.Array<java.lang.Class<any>>;
							});
							public constructor();
							public value(): native.Array<java.lang.Class<any>>;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export abstract class ObjectIdGenerator<T>  extends java.io.Serializable {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>>;
							public constructor();
							public getScope(): java.lang.Class<any>;
							public newForSerialization(param0: any): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>;
							public generateId(param0: any): any;
							public key(param0: any): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator.IdKey;
							public canUseFor(param0: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>): boolean;
							public forScope(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>;
							public isValidReferencePropertyName(param0: string, param1: any): boolean;
							public maySerializeAsObject(): boolean;
						}
						export module ObjectIdGenerator {
							export class IdKey {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator.IdKey>;
								public type: java.lang.Class<any>;
								public scope: java.lang.Class<any>;
								public key: any;
								public toString(): string;
								public equals(param0: any): boolean;
								public hashCode(): number;
								public constructor(param0: java.lang.Class<any>, param1: java.lang.Class<any>, param2: any);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class ObjectIdGenerators {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerators>;
							public constructor();
						}
						export module ObjectIdGenerators {
							export abstract class Base<T>  extends me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any> {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerators.Base<any>>;
								public _scope: java.lang.Class<any>;
								public canUseFor(param0: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>): boolean;
								public getScope(): java.lang.Class<any>;
								public constructor();
								public generateId(param0: any): any;
								public constructor(param0: java.lang.Class<any>);
							}
							export class IntSequenceGenerator extends me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerators.Base<java.lang.Integer> {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerators.IntSequenceGenerator>;
								public _nextValue: number;
								public forScope(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>;
								public key(param0: any): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator.IdKey;
								public newForSerialization(param0: any): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<java.lang.Integer>;
								public constructor(param0: java.lang.Class<any>, param1: number);
								public constructor();
								public generateId(param0: any): any;
								public constructor(param0: java.lang.Class<any>);
								public initialValue(): number;
								public newForSerialization(param0: any): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>;
								public forScope(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<java.lang.Integer>;
								public generateId(param0: any): java.lang.Integer;
							}
							export abstract class None extends me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any> {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerators.None>;
								public constructor();
							}
							export abstract class PropertyGenerator extends me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerators.Base<any> {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerators.PropertyGenerator>;
								public constructor();
								public constructor(param0: java.lang.Class<any>);
							}
							export class StringIdGenerator extends me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerators.Base<string> {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerators.StringIdGenerator>;
								public forScope(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>;
								public newForSerialization(param0: any): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<string>;
								public canUseFor(param0: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>): boolean;
								public key(param0: any): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator.IdKey;
								public constructor();
								public forScope(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<string>;
								public generateId(param0: any): any;
								public generateId(param0: any): string;
								public constructor(param0: java.lang.Class<any>);
								public newForSerialization(param0: any): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>;
							}
							export class UUIDGenerator extends me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerators.Base<java.util.UUID> {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerators.UUIDGenerator>;
								public forScope(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>;
								public newForSerialization(param0: any): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<java.util.UUID>;
								public canUseFor(param0: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>): boolean;
								public key(param0: any): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator.IdKey;
								public forScope(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<java.util.UUID>;
								public generateId(param0: any): java.util.UUID;
								public constructor();
								public generateId(param0: any): any;
								public constructor(param0: java.lang.Class<any>);
								public newForSerialization(param0: any): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class ObjectIdResolver {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.ObjectIdResolver>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.annotation.ObjectIdResolver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								bindItem(param0: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator.IdKey, param1: any): void;
								resolveId(param0: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator.IdKey): any;
								newForDeserialization(param0: any): me.pushy.sdk.lib.jackson.annotation.ObjectIdResolver;
								canUseFor(param0: me.pushy.sdk.lib.jackson.annotation.ObjectIdResolver): boolean;
							});
							public constructor();
							public resolveId(param0: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator.IdKey): any;
							public bindItem(param0: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator.IdKey, param1: any): void;
							public newForDeserialization(param0: any): me.pushy.sdk.lib.jackson.annotation.ObjectIdResolver;
							public canUseFor(param0: me.pushy.sdk.lib.jackson.annotation.ObjectIdResolver): boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class OptBoolean {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.OptBoolean>;
							public static TRUE: me.pushy.sdk.lib.jackson.annotation.OptBoolean;
							public static FALSE: me.pushy.sdk.lib.jackson.annotation.OptBoolean;
							public static DEFAULT: me.pushy.sdk.lib.jackson.annotation.OptBoolean;
							public static fromBoolean(param0: java.lang.Boolean): me.pushy.sdk.lib.jackson.annotation.OptBoolean;
							public static values(): native.Array<me.pushy.sdk.lib.jackson.annotation.OptBoolean>;
							public static valueOf(param0: string): me.pushy.sdk.lib.jackson.annotation.OptBoolean;
							public static equals(param0: java.lang.Boolean, param1: java.lang.Boolean): boolean;
							public asPrimitive(): boolean;
							public asBoolean(): java.lang.Boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class PropertyAccessor {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.PropertyAccessor>;
							public static GETTER: me.pushy.sdk.lib.jackson.annotation.PropertyAccessor;
							public static SETTER: me.pushy.sdk.lib.jackson.annotation.PropertyAccessor;
							public static CREATOR: me.pushy.sdk.lib.jackson.annotation.PropertyAccessor;
							public static FIELD: me.pushy.sdk.lib.jackson.annotation.PropertyAccessor;
							public static IS_GETTER: me.pushy.sdk.lib.jackson.annotation.PropertyAccessor;
							public static NONE: me.pushy.sdk.lib.jackson.annotation.PropertyAccessor;
							public static ALL: me.pushy.sdk.lib.jackson.annotation.PropertyAccessor;
							public static values(): native.Array<me.pushy.sdk.lib.jackson.annotation.PropertyAccessor>;
							public fieldEnabled(): boolean;
							public isGetterEnabled(): boolean;
							public static valueOf(param0: string): me.pushy.sdk.lib.jackson.annotation.PropertyAccessor;
							public creatorEnabled(): boolean;
							public getterEnabled(): boolean;
							public setterEnabled(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module annotation {
						export class SimpleObjectIdResolver extends me.pushy.sdk.lib.jackson.annotation.ObjectIdResolver {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.annotation.SimpleObjectIdResolver>;
							public _items: java.util.Map<me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator.IdKey,any>;
							public constructor();
							public resolveId(param0: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator.IdKey): any;
							public bindItem(param0: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator.IdKey, param1: any): void;
							public newForDeserialization(param0: any): me.pushy.sdk.lib.jackson.annotation.ObjectIdResolver;
							public canUseFor(param0: me.pushy.sdk.lib.jackson.annotation.ObjectIdResolver): boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export class Base64Variant {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.Base64Variant>;
							public static BASE64_VALUE_INVALID: number;
							public static BASE64_VALUE_PADDING: number;
							public hashCode(): number;
							public getPaddingChar(): string;
							public encodeBase64Chunk(param0: number, param1: native.Array<number>, param2: number): number;
							public toString(): string;
							public _reportBase64EOF(): void;
							public _reportInvalidBase64(param0: string, param1: number, param2: string): void;
							public encodeBase64BitsAsChar(param0: number): string;
							public encodeBase64BitsAsByte(param0: number): number;
							public decodeBase64Char(param0: string): number;
							public constructor(param0: string, param1: string, param2: boolean, param3: string, param4: number);
							public getPaddingByte(): number;
							public constructor(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: string, param2: number);
							public encodeBase64Chunk(param0: number, param1: native.Array<string>, param2: number): number;
							public decodeBase64Byte(param0: number): number;
							public encodeBase64Partial(param0: number, param1: number, param2: native.Array<number>, param3: number): number;
							public constructor(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: string, param2: boolean, param3: string, param4: number);
							public encode(param0: native.Array<number>): string;
							public getMaxLineLength(): number;
							public decode(param0: string): native.Array<number>;
							public readResolve(): any;
							public usesPaddingChar(param0: number): boolean;
							public encodeBase64Partial(param0: number, param1: number, param2: native.Array<string>, param3: number): number;
							public usesPaddingChar(param0: string): boolean;
							public getName(): string;
							public decodeBase64Char(param0: number): number;
							public encode(param0: native.Array<number>, param1: boolean): string;
							public decode(param0: string, param1: me.pushy.sdk.lib.jackson.core.util.ByteArrayBuilder): void;
							public usesPadding(): boolean;
							public equals(param0: any): boolean;
							public encodeBase64Partial(param0: java.lang.StringBuilder, param1: number, param2: number): void;
							public encodeBase64Chunk(param0: java.lang.StringBuilder, param1: number): void;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export class Base64Variants {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.Base64Variants>;
							public static MIME: me.pushy.sdk.lib.jackson.core.Base64Variant;
							public static MIME_NO_LINEFEEDS: me.pushy.sdk.lib.jackson.core.Base64Variant;
							public static PEM: me.pushy.sdk.lib.jackson.core.Base64Variant;
							public static MODIFIED_FOR_URL: me.pushy.sdk.lib.jackson.core.Base64Variant;
							public constructor();
							public static getDefaultVariant(): me.pushy.sdk.lib.jackson.core.Base64Variant;
							public static valueOf(param0: string): me.pushy.sdk.lib.jackson.core.Base64Variant;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export class FormatFeature {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.FormatFeature>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.core.FormatFeature interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								enabledByDefault(): boolean;
								getMask(): number;
								enabledIn(param0: number): boolean;
							});
							public constructor();
							public getMask(): number;
							public enabledIn(param0: number): boolean;
							public enabledByDefault(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export class FormatSchema {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.FormatSchema>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.core.FormatSchema interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getSchemaType(): string;
							});
							public constructor();
							public getSchemaType(): string;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export class JsonEncoding {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.JsonEncoding>;
							public static UTF8: me.pushy.sdk.lib.jackson.core.JsonEncoding;
							public static UTF16_BE: me.pushy.sdk.lib.jackson.core.JsonEncoding;
							public static UTF16_LE: me.pushy.sdk.lib.jackson.core.JsonEncoding;
							public static UTF32_BE: me.pushy.sdk.lib.jackson.core.JsonEncoding;
							public static UTF32_LE: me.pushy.sdk.lib.jackson.core.JsonEncoding;
							public static values(): native.Array<me.pushy.sdk.lib.jackson.core.JsonEncoding>;
							public static valueOf(param0: string): me.pushy.sdk.lib.jackson.core.JsonEncoding;
							public isBigEndian(): boolean;
							public bits(): number;
							public getJavaName(): string;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export class JsonFactory extends me.pushy.sdk.lib.jackson.core.Versioned {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.JsonFactory>;
							public static FORMAT_NAME_JSON: string;
							public static DEFAULT_FACTORY_FEATURE_FLAGS: number;
							public static DEFAULT_PARSER_FEATURE_FLAGS: number;
							public static DEFAULT_GENERATOR_FEATURE_FLAGS: number;
							public static _recyclerRef: java.lang.ThreadLocal<java.lang.ref.SoftReference<me.pushy.sdk.lib.jackson.core.util.BufferRecycler>>;
							public _rootCharSymbols: me.pushy.sdk.lib.jackson.core.sym.CharsToNameCanonicalizer;
							public _byteSymbolCanonicalizer: me.pushy.sdk.lib.jackson.core.sym.ByteQuadsCanonicalizer;
							public _objectCodec: me.pushy.sdk.lib.jackson.core.ObjectCodec;
							public _factoryFeatures: number;
							public _parserFeatures: number;
							public _generatorFeatures: number;
							public _characterEscapes: me.pushy.sdk.lib.jackson.core.io.CharacterEscapes;
							public _inputDecorator: me.pushy.sdk.lib.jackson.core.io.InputDecorator;
							public _outputDecorator: me.pushy.sdk.lib.jackson.core.io.OutputDecorator;
							public _rootValueSeparator: me.pushy.sdk.lib.jackson.core.SerializableString;
							public configure(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature, param1: boolean): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public configure(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature, param1: boolean): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public _decorate(param0: java.io.Writer, param1: me.pushy.sdk.lib.jackson.core.io.IOContext): java.io.Writer;
							public requiresPropertyOrdering(): boolean;
							public _createParser(param0: java.io.Reader, param1: me.pushy.sdk.lib.jackson.core.io.IOContext): me.pushy.sdk.lib.jackson.core.JsonParser;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonFactory.Feature): boolean;
							public createParser(param0: string): me.pushy.sdk.lib.jackson.core.JsonParser;
							public createParser(param0: native.Array<number>): me.pushy.sdk.lib.jackson.core.JsonParser;
							public _decorate(param0: java.io.InputStream, param1: me.pushy.sdk.lib.jackson.core.io.IOContext): java.io.InputStream;
							public enable(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public hasJSONFormat(param0: me.pushy.sdk.lib.jackson.core.format.InputAccessor): me.pushy.sdk.lib.jackson.core.format.MatchStrength;
							public canHandleBinaryNatively(): boolean;
							public createGenerator(param0: java.io.File, param1: me.pushy.sdk.lib.jackson.core.JsonEncoding): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public enable(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public _createParser(param0: java.io.DataInput, param1: me.pushy.sdk.lib.jackson.core.io.IOContext): me.pushy.sdk.lib.jackson.core.JsonParser;
							public _createDataOutputWrapper(param0: java.io.DataOutput): java.io.OutputStream;
							public _getBufferRecycler(): me.pushy.sdk.lib.jackson.core.util.BufferRecycler;
							public createParser(param0: java.io.InputStream): me.pushy.sdk.lib.jackson.core.JsonParser;
							public _decorate(param0: java.io.DataInput, param1: me.pushy.sdk.lib.jackson.core.io.IOContext): java.io.DataInput;
							public _createWriter(param0: java.io.OutputStream, param1: me.pushy.sdk.lib.jackson.core.JsonEncoding, param2: me.pushy.sdk.lib.jackson.core.io.IOContext): java.io.Writer;
							public getFormatName(): string;
							public createGenerator(param0: java.io.DataOutput): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public createJsonParser(param0: native.Array<number>): me.pushy.sdk.lib.jackson.core.JsonParser;
							public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonFactory, param1: me.pushy.sdk.lib.jackson.core.ObjectCodec);
							public _createGenerator(param0: java.io.Writer, param1: me.pushy.sdk.lib.jackson.core.io.IOContext): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public setInputDecorator(param0: me.pushy.sdk.lib.jackson.core.io.InputDecorator): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public getOutputDecorator(): me.pushy.sdk.lib.jackson.core.io.OutputDecorator;
							public canUseCharArrays(): boolean;
							public createJsonParser(param0: java.net.URL): me.pushy.sdk.lib.jackson.core.JsonParser;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature): boolean;
							public hasFormat(param0: me.pushy.sdk.lib.jackson.core.format.InputAccessor): me.pushy.sdk.lib.jackson.core.format.MatchStrength;
							public setCodec(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public createJsonParser(param0: java.io.File): me.pushy.sdk.lib.jackson.core.JsonParser;
							public getFormatWriteFeatureType(): java.lang.Class<any>;
							public createGenerator(param0: java.io.DataOutput, param1: me.pushy.sdk.lib.jackson.core.JsonEncoding): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public getFormatReadFeatureType(): java.lang.Class<any>;
							public createJsonGenerator(param0: java.io.OutputStream): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public setCharacterEscapes(param0: me.pushy.sdk.lib.jackson.core.io.CharacterEscapes): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public createParser(param0: java.io.Reader): me.pushy.sdk.lib.jackson.core.JsonParser;
							public createGenerator(param0: java.io.OutputStream, param1: me.pushy.sdk.lib.jackson.core.JsonEncoding): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public configure(param0: me.pushy.sdk.lib.jackson.core.JsonFactory.Feature, param1: boolean): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): boolean;
							public createParser(param0: native.Array<string>): me.pushy.sdk.lib.jackson.core.JsonParser;
							public getRootValueSeparator(): string;
							public createJsonGenerator(param0: java.io.OutputStream, param1: me.pushy.sdk.lib.jackson.core.JsonEncoding): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public createParser(param0: native.Array<string>, param1: number, param2: number): me.pushy.sdk.lib.jackson.core.JsonParser;
							public disable(param0: me.pushy.sdk.lib.jackson.core.JsonFactory.Feature): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public _decorate(param0: java.io.Reader, param1: me.pushy.sdk.lib.jackson.core.io.IOContext): java.io.Reader;
							public _createParser(param0: native.Array<string>, param1: number, param2: number, param3: me.pushy.sdk.lib.jackson.core.io.IOContext, param4: boolean): me.pushy.sdk.lib.jackson.core.JsonParser;
							public getCharacterEscapes(): me.pushy.sdk.lib.jackson.core.io.CharacterEscapes;
							public createParser(param0: native.Array<number>, param1: number, param2: number): me.pushy.sdk.lib.jackson.core.JsonParser;
							public createGenerator(param0: java.io.OutputStream): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public createJsonParser(param0: java.io.Reader): me.pushy.sdk.lib.jackson.core.JsonParser;
							public _createParser(param0: native.Array<number>, param1: number, param2: number, param3: me.pushy.sdk.lib.jackson.core.io.IOContext): me.pushy.sdk.lib.jackson.core.JsonParser;
							public createJsonParser(param0: string): me.pushy.sdk.lib.jackson.core.JsonParser;
							public constructor(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec);
							public createJsonGenerator(param0: java.io.Writer): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public constructor();
							public disable(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public createJsonParser(param0: java.io.InputStream): me.pushy.sdk.lib.jackson.core.JsonParser;
							public _createParser(param0: java.io.InputStream, param1: me.pushy.sdk.lib.jackson.core.io.IOContext): me.pushy.sdk.lib.jackson.core.JsonParser;
							public _decorate(param0: java.io.OutputStream, param1: me.pushy.sdk.lib.jackson.core.io.IOContext): java.io.OutputStream;
							public createParser(param0: java.net.URL): me.pushy.sdk.lib.jackson.core.JsonParser;
							public createJsonParser(param0: native.Array<number>, param1: number, param2: number): me.pushy.sdk.lib.jackson.core.JsonParser;
							public createGenerator(param0: java.io.Writer): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public disable(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public _createUTF8Generator(param0: java.io.OutputStream, param1: me.pushy.sdk.lib.jackson.core.io.IOContext): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public getInputDecorator(): me.pushy.sdk.lib.jackson.core.io.InputDecorator;
							public setRootValueSeparator(param0: string): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public getCodec(): me.pushy.sdk.lib.jackson.core.ObjectCodec;
							public createParser(param0: java.io.File): me.pushy.sdk.lib.jackson.core.JsonParser;
							public setOutputDecorator(param0: me.pushy.sdk.lib.jackson.core.io.OutputDecorator): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public readResolve(): any;
							public enable(param0: me.pushy.sdk.lib.jackson.core.JsonFactory.Feature): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public _createContext(param0: any, param1: boolean): me.pushy.sdk.lib.jackson.core.io.IOContext;
							public _optimizedStreamFromURL(param0: java.net.URL): java.io.InputStream;
							public createParser(param0: java.io.DataInput): me.pushy.sdk.lib.jackson.core.JsonParser;
							public _checkInvalidCopy(param0: java.lang.Class<any>): void;
							public canUseSchema(param0: me.pushy.sdk.lib.jackson.core.FormatSchema): boolean;
							public version(): me.pushy.sdk.lib.jackson.core.Version;
							public copy(): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public requiresCustomCodec(): boolean;
						}
						export module JsonFactory {
							export class Feature {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.JsonFactory.Feature>;
								public static INTERN_FIELD_NAMES: me.pushy.sdk.lib.jackson.core.JsonFactory.Feature;
								public static CANONICALIZE_FIELD_NAMES: me.pushy.sdk.lib.jackson.core.JsonFactory.Feature;
								public static FAIL_ON_SYMBOL_HASH_OVERFLOW: me.pushy.sdk.lib.jackson.core.JsonFactory.Feature;
								public static USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING: me.pushy.sdk.lib.jackson.core.JsonFactory.Feature;
								public static valueOf(param0: string): me.pushy.sdk.lib.jackson.core.JsonFactory.Feature;
								public static values(): native.Array<me.pushy.sdk.lib.jackson.core.JsonFactory.Feature>;
								public static collectDefaults(): number;
								public enabledByDefault(): boolean;
								public enabledIn(param0: number): boolean;
								public getMask(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export class JsonGenerationException extends me.pushy.sdk.lib.jackson.core.JsonProcessingException {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.JsonGenerationException>;
							public _processor: me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public constructor(param0: java.lang.Throwable, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator);
							public constructor(param0: string, param1: java.lang.Throwable, param2: me.pushy.sdk.lib.jackson.core.JsonGenerator);
							public getProcessor(): any;
							public constructor(param0: string);
							public constructor(param0: java.lang.Throwable);
							public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator);
							public getProcessor(): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation);
							public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation, param2: java.lang.Throwable);
							public constructor(param0: string, param1: java.lang.Throwable);
							public withGenerator(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): me.pushy.sdk.lib.jackson.core.JsonGenerationException;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export abstract class JsonGenerator extends me.pushy.sdk.lib.jackson.core.Versioned {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.JsonGenerator>;
							public _cfgPrettyPrinter: me.pushy.sdk.lib.jackson.core.PrettyPrinter;
							public writeRaw(param0: native.Array<string>, param1: number, param2: number): void;
							public setCharacterEscapes(param0: me.pushy.sdk.lib.jackson.core.io.CharacterEscapes): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public canWriteTypeId(): boolean;
							public close(): void;
							public writeRawValue(param0: string): void;
							public writeString(param0: java.io.Reader, param1: number): void;
							public writeTypeId(param0: any): void;
							public writeBinary(param0: native.Array<number>): void;
							public writeBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: native.Array<number>, param2: number, param3: number): void;
							public writeFieldId(param0: number): void;
							public setFeatureMask(param0: number): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public writeBooleanField(param0: string, param1: boolean): void;
							public writeNumber(param0: string): void;
							public writeNull(): void;
							public _reportUnsupportedOperation(): void;
							public writeOmittedField(param0: string): void;
							public writeRawValue(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
							public _throwInternal(): void;
							public canWriteBinaryNatively(): boolean;
							public setHighestNonEscapedChar(param0: number): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public writeBinary(param0: native.Array<number>, param1: number, param2: number): void;
							public getOutputTarget(): any;
							public writeNumber(param0: number): void;
							public writeBoolean(param0: boolean): void;
							public writeEmbeddedObject(param0: any): void;
							public copyCurrentEvent(param0: me.pushy.sdk.lib.jackson.core.JsonParser): void;
							public writeString(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
							public writeUTF8String(param0: native.Array<number>, param1: number, param2: number): void;
							public setPrettyPrinter(param0: me.pushy.sdk.lib.jackson.core.PrettyPrinter): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public overrideStdFeatures(param0: number, param1: number): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public writeRaw(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
							public _writeSimpleObject(param0: any): void;
							public writeStartArray(param0: number): void;
							public writeStartArray(): void;
							public setCodec(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public writeNumber(param0: java.math.BigDecimal): void;
							public _verifyOffsets(param0: number, param1: number, param2: number): void;
							public writeRawUTF8String(param0: native.Array<number>, param1: number, param2: number): void;
							public getSchema(): me.pushy.sdk.lib.jackson.core.FormatSchema;
							public setRootValueSeparator(param0: me.pushy.sdk.lib.jackson.core.SerializableString): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public writeTree(param0: me.pushy.sdk.lib.jackson.core.TreeNode): void;
							public writeStartObject(param0: any): void;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): boolean;
							public writeFieldName(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
							public canWriteFormattedNumbers(): boolean;
							public writeObject(param0: any): void;
							public writeStartObject(): void;
							public writeObjectField(param0: string, param1: any): void;
							public writeBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.InputStream, param2: number): number;
							public writeString(param0: string): void;
							public writeRawValue(param0: string, param1: number, param2: number): void;
							public writeObjectRef(param0: any): void;
							public writeBinaryField(param0: string, param1: native.Array<number>): void;
							public setSchema(param0: me.pushy.sdk.lib.jackson.core.FormatSchema): void;
							public getCharacterEscapes(): me.pushy.sdk.lib.jackson.core.io.CharacterEscapes;
							public getOutputBuffered(): number;
							public writeEndArray(): void;
							public copyCurrentStructure(param0: me.pushy.sdk.lib.jackson.core.JsonParser): void;
							public writeNumber(param0: java.math.BigInteger): void;
							public writeNumberField(param0: string, param1: java.math.BigDecimal): void;
							public writeStringField(param0: string, param1: string): void;
							public getOutputContext(): me.pushy.sdk.lib.jackson.core.JsonStreamContext;
							public getPrettyPrinter(): me.pushy.sdk.lib.jackson.core.PrettyPrinter;
							public writeObjectFieldStart(param0: string): void;
							public enable(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public writeFieldName(param0: string): void;
							public constructor();
							public useDefaultPrettyPrinter(): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public getFeatureMask(): number;
							public writeEndObject(): void;
							public getCodec(): me.pushy.sdk.lib.jackson.core.ObjectCodec;
							public writeArrayFieldStart(param0: string): void;
							public writeRawValue(param0: native.Array<string>, param1: number, param2: number): void;
							public isClosed(): boolean;
							public writeRaw(param0: string): void;
							public getFormatFeatures(): number;
							public canOmitFields(): boolean;
							public writeObjectId(param0: any): void;
							public disable(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public configure(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature, param1: boolean): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public getCurrentValue(): any;
							public _reportError(param0: string): void;
							public canWriteObjectId(): boolean;
							public writeRaw(param0: string, param1: number, param2: number): void;
							public version(): me.pushy.sdk.lib.jackson.core.Version;
							public canUseSchema(param0: me.pushy.sdk.lib.jackson.core.FormatSchema): boolean;
							public writeArray(param0: native.Array<number>, param1: number, param2: number): void;
							public writeNullField(param0: string): void;
							public writeNumberField(param0: string, param1: number): void;
							public flush(): void;
							public writeString(param0: native.Array<string>, param1: number, param2: number): void;
							public getHighestEscapedChar(): number;
							public setCurrentValue(param0: any): void;
							public writeBinary(param0: java.io.InputStream, param1: number): number;
							public overrideFormatFeatures(param0: number, param1: number): me.pushy.sdk.lib.jackson.core.JsonGenerator;
						}
						export module JsonGenerator {
							export class Feature {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature>;
								public static AUTO_CLOSE_TARGET: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature;
								public static AUTO_CLOSE_JSON_CONTENT: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature;
								public static FLUSH_PASSED_TO_STREAM: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature;
								public static QUOTE_FIELD_NAMES: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature;
								public static QUOTE_NON_NUMERIC_NUMBERS: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature;
								public static WRITE_NUMBERS_AS_STRINGS: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature;
								public static WRITE_BIGDECIMAL_AS_PLAIN: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature;
								public static ESCAPE_NON_ASCII: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature;
								public static STRICT_DUPLICATE_DETECTION: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature;
								public static IGNORE_UNKNOWN: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature;
								public static collectDefaults(): number;
								public enabledByDefault(): boolean;
								public static valueOf(param0: string): me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature;
								public static values(): native.Array<me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature>;
								public enabledIn(param0: number): boolean;
								public getMask(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export class JsonLocation {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.JsonLocation>;
							public static MAX_CONTENT_SNIPPET: number;
							public static NA: me.pushy.sdk.lib.jackson.core.JsonLocation;
							public _totalBytes: number;
							public _totalChars: number;
							public _lineNr: number;
							public _columnNr: number;
							public sourceDescription(): string;
							public getCharOffset(): number;
							public hashCode(): number;
							public getSourceRef(): any;
							public getColumnNr(): number;
							public getByteOffset(): number;
							public toString(): string;
							public constructor(param0: any, param1: number, param2: number, param3: number);
							public getLineNr(): number;
							public equals(param0: any): boolean;
							public _appendSourceDesc(param0: java.lang.StringBuilder): java.lang.StringBuilder;
							public constructor(param0: any, param1: number, param2: number, param3: number, param4: number);
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export class JsonParseException extends me.pushy.sdk.lib.jackson.core.JsonProcessingException {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.JsonParseException>;
							public _processor: me.pushy.sdk.lib.jackson.core.JsonParser;
							public _requestPayload: me.pushy.sdk.lib.jackson.core.util.RequestPayload;
							public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation, param3: java.lang.Throwable);
							public constructor(param0: java.lang.Throwable);
							public withRequestPayload(param0: me.pushy.sdk.lib.jackson.core.util.RequestPayload): me.pushy.sdk.lib.jackson.core.JsonParseException;
							public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation);
							public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: java.lang.Throwable);
							public getProcessor(): me.pushy.sdk.lib.jackson.core.JsonParser;
							public constructor(param0: string, param1: java.lang.Throwable);
							public getRequestPayload(): me.pushy.sdk.lib.jackson.core.util.RequestPayload;
							public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string);
							public getProcessor(): any;
							public constructor(param0: string);
							public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation);
							public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation, param2: java.lang.Throwable);
							public getMessage(): string;
							public withParser(param0: me.pushy.sdk.lib.jackson.core.JsonParser): me.pushy.sdk.lib.jackson.core.JsonParseException;
							public getRequestPayloadAsString(): string;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export abstract class JsonParser extends me.pushy.sdk.lib.jackson.core.Versioned {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.JsonParser>;
							public _features: number;
							public _requestPayload: me.pushy.sdk.lib.jackson.core.util.RequestPayload;
							public close(): void;
							public nextToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
							public setCodec(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): void;
							public overrideCurrentName(param0: string): void;
							public enable(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature): me.pushy.sdk.lib.jackson.core.JsonParser;
							public hasCurrentToken(): boolean;
							public getValueAsLong(param0: number): number;
							public nextBooleanValue(): java.lang.Boolean;
							public _reportUnsupportedOperation(): void;
							public setFeatureMask(param0: number): me.pushy.sdk.lib.jackson.core.JsonParser;
							public nextTextValue(): string;
							public getValueAsBoolean(): boolean;
							public getTypeId(): any;
							public getText(): string;
							public getCurrentLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
							public readBinaryValue(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.OutputStream): number;
							public getValueAsInt(param0: number): number;
							public constructor(param0: number);
							public nextValue(): me.pushy.sdk.lib.jackson.core.JsonToken;
							public getValueAsInt(): number;
							public getTokenLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
							public skipChildren(): me.pushy.sdk.lib.jackson.core.JsonParser;
							public readValuesAs(param0: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): java.util.Iterator;
							public getIntValue(): number;
							public getShortValue(): number;
							public setRequestPayloadOnError(param0: string): void;
							public _constructError(param0: string): me.pushy.sdk.lib.jackson.core.JsonParseException;
							public hasTokenId(param0: number): boolean;
							public getLongValue(): number;
							public overrideFormatFeatures(param0: number, param1: number): me.pushy.sdk.lib.jackson.core.JsonParser;
							public getText(param0: java.io.Writer): number;
							public getValueAsLong(): number;
							public constructor();
							public getFeatureMask(): number;
							public configure(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature, param1: boolean): me.pushy.sdk.lib.jackson.core.JsonParser;
							public getNumberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
							public nextFieldName(): string;
							public isClosed(): boolean;
							public getFormatFeatures(): number;
							public getEmbeddedObject(): any;
							public releaseBuffered(param0: java.io.OutputStream): number;
							public finishToken(): void;
							public readValueAs(param0: java.lang.Class): any;
							public getFloatValue(): number;
							public getDoubleValue(): number;
							public getCurrentValue(): any;
							public setRequestPayloadOnError(param0: native.Array<number>, param1: string): void;
							public getBooleanValue(): boolean;
							public getValueAsDouble(param0: number): number;
							public getTextCharacters(): native.Array<string>;
							public getInputSource(): any;
							public getValueAsDouble(): number;
							public nextIntValue(param0: number): number;
							public getParsingContext(): me.pushy.sdk.lib.jackson.core.JsonStreamContext;
							public overrideStdFeatures(param0: number, param1: number): me.pushy.sdk.lib.jackson.core.JsonParser;
							public getObjectId(): any;
							public getByteValue(): number;
							public readValueAsTree(): me.pushy.sdk.lib.jackson.core.TreeNode;
							public readValuesAs(param0: java.lang.Class): java.util.Iterator;
							public getCurrentToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature): boolean;
							public getNumberValue(): java.lang.Number;
							public getValueAsString(): string;
							public getCurrentName(): string;
							public getValueAsBoolean(param0: boolean): boolean;
							public getSchema(): me.pushy.sdk.lib.jackson.core.FormatSchema;
							public hasToken(param0: me.pushy.sdk.lib.jackson.core.JsonToken): boolean;
							public readBinaryValue(param0: java.io.OutputStream): number;
							public disable(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature): me.pushy.sdk.lib.jackson.core.JsonParser;
							public getValueAsString(param0: string): string;
							public clearCurrentToken(): void;
							public getLastClearedToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
							public getBinaryValue(): native.Array<number>;
							public isNaN(): boolean;
							public setSchema(param0: me.pushy.sdk.lib.jackson.core.FormatSchema): void;
							public hasTextCharacters(): boolean;
							public nextFieldName(param0: me.pushy.sdk.lib.jackson.core.SerializableString): boolean;
							public getDecimalValue(): java.math.BigDecimal;
							public isExpectedStartObjectToken(): boolean;
							public nextLongValue(param0: number): number;
							public _codec(): me.pushy.sdk.lib.jackson.core.ObjectCodec;
							public getBinaryValue(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): native.Array<number>;
							public canReadObjectId(): boolean;
							public readValueAs(param0: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): any;
							public getTextOffset(): number;
							public isExpectedStartArrayToken(): boolean;
							public getCodec(): me.pushy.sdk.lib.jackson.core.ObjectCodec;
							public releaseBuffered(param0: java.io.Writer): number;
							public getBigIntegerValue(): java.math.BigInteger;
							public currentTokenId(): number;
							public getCurrentTokenId(): number;
							public getTextLength(): number;
							public canReadTypeId(): boolean;
							public canUseSchema(param0: me.pushy.sdk.lib.jackson.core.FormatSchema): boolean;
							public version(): me.pushy.sdk.lib.jackson.core.Version;
							public currentToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
							public setCurrentValue(param0: any): void;
							public requiresCustomCodec(): boolean;
							public setRequestPayloadOnError(param0: me.pushy.sdk.lib.jackson.core.util.RequestPayload): void;
						}
						export module JsonParser {
							export class Feature {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.JsonParser.Feature>;
								public static AUTO_CLOSE_SOURCE: me.pushy.sdk.lib.jackson.core.JsonParser.Feature;
								public static ALLOW_COMMENTS: me.pushy.sdk.lib.jackson.core.JsonParser.Feature;
								public static ALLOW_YAML_COMMENTS: me.pushy.sdk.lib.jackson.core.JsonParser.Feature;
								public static ALLOW_UNQUOTED_FIELD_NAMES: me.pushy.sdk.lib.jackson.core.JsonParser.Feature;
								public static ALLOW_SINGLE_QUOTES: me.pushy.sdk.lib.jackson.core.JsonParser.Feature;
								public static ALLOW_UNQUOTED_CONTROL_CHARS: me.pushy.sdk.lib.jackson.core.JsonParser.Feature;
								public static ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER: me.pushy.sdk.lib.jackson.core.JsonParser.Feature;
								public static ALLOW_NUMERIC_LEADING_ZEROS: me.pushy.sdk.lib.jackson.core.JsonParser.Feature;
								public static ALLOW_NON_NUMERIC_NUMBERS: me.pushy.sdk.lib.jackson.core.JsonParser.Feature;
								public static ALLOW_MISSING_VALUES: me.pushy.sdk.lib.jackson.core.JsonParser.Feature;
								public static ALLOW_TRAILING_COMMA: me.pushy.sdk.lib.jackson.core.JsonParser.Feature;
								public static STRICT_DUPLICATE_DETECTION: me.pushy.sdk.lib.jackson.core.JsonParser.Feature;
								public static IGNORE_UNDEFINED: me.pushy.sdk.lib.jackson.core.JsonParser.Feature;
								public static INCLUDE_SOURCE_IN_LOCATION: me.pushy.sdk.lib.jackson.core.JsonParser.Feature;
								public static collectDefaults(): number;
								public static values(): native.Array<me.pushy.sdk.lib.jackson.core.JsonParser.Feature>;
								public enabledByDefault(): boolean;
								public enabledIn(param0: number): boolean;
								public getMask(): number;
								public static valueOf(param0: string): me.pushy.sdk.lib.jackson.core.JsonParser.Feature;
							}
							export class NumberType {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.JsonParser.NumberType>;
								public static INT: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public static LONG: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public static BIG_INTEGER: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public static FLOAT: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public static DOUBLE: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public static BIG_DECIMAL: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public static valueOf(param0: string): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public static values(): native.Array<me.pushy.sdk.lib.jackson.core.JsonParser.NumberType>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export class JsonPointer {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.JsonPointer>;
							public static SEPARATOR: string;
							public static EMPTY: me.pushy.sdk.lib.jackson.core.JsonPointer;
							public _nextSegment: me.pushy.sdk.lib.jackson.core.JsonPointer;
							public _head: me.pushy.sdk.lib.jackson.core.JsonPointer;
							public _asString: string;
							public _matchingPropertyName: string;
							public _matchingElementIndex: number;
							public static forPath(param0: me.pushy.sdk.lib.jackson.core.JsonStreamContext, param1: boolean): me.pushy.sdk.lib.jackson.core.JsonPointer;
							public static compile(param0: string): me.pushy.sdk.lib.jackson.core.JsonPointer;
							public matchProperty(param0: string): me.pushy.sdk.lib.jackson.core.JsonPointer;
							public hashCode(): number;
							public last(): me.pushy.sdk.lib.jackson.core.JsonPointer;
							public matchesElement(param0: number): boolean;
							public toString(): string;
							public static _parseTail(param0: string): me.pushy.sdk.lib.jackson.core.JsonPointer;
							public mayMatchProperty(): boolean;
							public append(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.JsonPointer;
							public matches(): boolean;
							public getMatchingIndex(): number;
							public static _parseQuotedTail(param0: string, param1: number): me.pushy.sdk.lib.jackson.core.JsonPointer;
							public constructor(param0: string, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonPointer);
							public constructor();
							public matchElement(param0: number): me.pushy.sdk.lib.jackson.core.JsonPointer;
							public head(): me.pushy.sdk.lib.jackson.core.JsonPointer;
							public mayMatchElement(): boolean;
							public tail(): me.pushy.sdk.lib.jackson.core.JsonPointer;
							public _constructHead(param0: number, param1: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.JsonPointer;
							public static valueOf(param0: string): me.pushy.sdk.lib.jackson.core.JsonPointer;
							public matchesProperty(param0: string): boolean;
							public _constructHead(): me.pushy.sdk.lib.jackson.core.JsonPointer;
							public getMatchingProperty(): string;
							public equals(param0: any): boolean;
							public constructor(param0: string, param1: string, param2: number, param3: me.pushy.sdk.lib.jackson.core.JsonPointer);
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export class JsonProcessingException {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.JsonProcessingException>;
							public _location: me.pushy.sdk.lib.jackson.core.JsonLocation;
							public getOriginalMessage(): string;
							public getProcessor(): any;
							public constructor(param0: string);
							public constructor(param0: java.lang.Throwable);
							public clearLocation(): void;
							public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation);
							public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation, param2: java.lang.Throwable);
							public toString(): string;
							public getMessageSuffix(): string;
							public constructor(param0: string, param1: java.lang.Throwable);
							public getMessage(): string;
							public getLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export abstract class JsonStreamContext {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.JsonStreamContext>;
							public static TYPE_ROOT: number;
							public static TYPE_ARRAY: number;
							public static TYPE_OBJECT: number;
							public _type: number;
							public _index: number;
							public constructor();
							public typeDesc(): string;
							public getTypeDesc(): string;
							public pathAsPointer(): me.pushy.sdk.lib.jackson.core.JsonPointer;
							public inArray(): boolean;
							public getEntryCount(): number;
							public getParent(): me.pushy.sdk.lib.jackson.core.JsonStreamContext;
							public getCurrentIndex(): number;
							public getCurrentName(): string;
							public getCurrentValue(): any;
							public hasCurrentIndex(): boolean;
							public pathAsPointer(param0: boolean): me.pushy.sdk.lib.jackson.core.JsonPointer;
							public inRoot(): boolean;
							public hasCurrentName(): boolean;
							public inObject(): boolean;
							public setCurrentValue(param0: any): void;
							public hasPathSegment(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export class JsonToken {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.JsonToken>;
							public static NOT_AVAILABLE: me.pushy.sdk.lib.jackson.core.JsonToken;
							public static START_OBJECT: me.pushy.sdk.lib.jackson.core.JsonToken;
							public static END_OBJECT: me.pushy.sdk.lib.jackson.core.JsonToken;
							public static START_ARRAY: me.pushy.sdk.lib.jackson.core.JsonToken;
							public static END_ARRAY: me.pushy.sdk.lib.jackson.core.JsonToken;
							public static FIELD_NAME: me.pushy.sdk.lib.jackson.core.JsonToken;
							public static VALUE_EMBEDDED_OBJECT: me.pushy.sdk.lib.jackson.core.JsonToken;
							public static VALUE_STRING: me.pushy.sdk.lib.jackson.core.JsonToken;
							public static VALUE_NUMBER_INT: me.pushy.sdk.lib.jackson.core.JsonToken;
							public static VALUE_NUMBER_FLOAT: me.pushy.sdk.lib.jackson.core.JsonToken;
							public static VALUE_TRUE: me.pushy.sdk.lib.jackson.core.JsonToken;
							public static VALUE_FALSE: me.pushy.sdk.lib.jackson.core.JsonToken;
							public static VALUE_NULL: me.pushy.sdk.lib.jackson.core.JsonToken;
							public static values(): native.Array<me.pushy.sdk.lib.jackson.core.JsonToken>;
							public id(): number;
							public isStructEnd(): boolean;
							public asCharArray(): native.Array<string>;
							public isStructStart(): boolean;
							public isBoolean(): boolean;
							public asString(): string;
							public asByteArray(): native.Array<number>;
							public isNumeric(): boolean;
							public isScalarValue(): boolean;
							public static valueOf(param0: string): me.pushy.sdk.lib.jackson.core.JsonToken;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export class JsonTokenId {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.JsonTokenId>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.core.JsonTokenId interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
							public static ID_NOT_AVAILABLE: number;
							public static ID_FALSE: number;
							public static ID_TRUE: number;
							public static ID_FIELD_NAME: number;
							public static ID_START_ARRAY: number;
							public static ID_END_ARRAY: number;
							public static ID_END_OBJECT: number;
							public static ID_NULL: number;
							public static ID_NO_TOKEN: number;
							public static ID_NUMBER_FLOAT: number;
							public static ID_STRING: number;
							public static ID_EMBEDDED_OBJECT: number;
							public static ID_START_OBJECT: number;
							public static ID_NUMBER_INT: number;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export class JsonpCharacterEscapes extends me.pushy.sdk.lib.jackson.core.io.CharacterEscapes {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.JsonpCharacterEscapes>;
							public constructor();
							public getEscapeSequence(param0: number): me.pushy.sdk.lib.jackson.core.SerializableString;
							public static instance(): me.pushy.sdk.lib.jackson.core.JsonpCharacterEscapes;
							public getEscapeCodesForAscii(): native.Array<number>;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export abstract class ObjectCodec extends me.pushy.sdk.lib.jackson.core.TreeCodec implements me.pushy.sdk.lib.jackson.core.Versioned {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.ObjectCodec>;
							public constructor();
							public writeValue(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: any): void;
							public readValues(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): java.util.Iterator;
							public treeToValue(param0: me.pushy.sdk.lib.jackson.core.TreeNode, param1: java.lang.Class): any;
							public getJsonFactory(): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public createObjectNode(): me.pushy.sdk.lib.jackson.core.TreeNode;
							public createArrayNode(): me.pushy.sdk.lib.jackson.core.TreeNode;
							public readValues(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.core.type.ResolvedType): java.util.Iterator;
							public getFactory(): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public readValues(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: java.lang.Class): java.util.Iterator;
							public readTree(param0: me.pushy.sdk.lib.jackson.core.JsonParser): me.pushy.sdk.lib.jackson.core.TreeNode;
							public treeAsTokens(param0: me.pushy.sdk.lib.jackson.core.TreeNode): me.pushy.sdk.lib.jackson.core.JsonParser;
							public version(): me.pushy.sdk.lib.jackson.core.Version;
							public readValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): any;
							public readValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.core.type.ResolvedType): any;
							public writeTree(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.core.TreeNode): void;
							public readValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: java.lang.Class): any;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export class PrettyPrinter {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.PrettyPrinter>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.core.PrettyPrinter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								writeRootValueSeparator(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								writeStartObject(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								writeEndObject(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: number): void;
								writeObjectEntrySeparator(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								writeObjectFieldValueSeparator(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								writeStartArray(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								writeEndArray(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: number): void;
								writeArrayValueSeparator(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								beforeArrayValues(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								beforeObjectEntries(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
							});
							public constructor();
							public writeArrayValueSeparator(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
							public writeStartObject(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
							public writeStartArray(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
							public writeObjectEntrySeparator(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
							public beforeArrayValues(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
							public writeObjectFieldValueSeparator(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
							public beforeObjectEntries(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
							public writeEndObject(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: number): void;
							public writeEndArray(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: number): void;
							public writeRootValueSeparator(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export class SerializableString {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.SerializableString>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.core.SerializableString interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getValue(): string;
								charLength(): number;
								asQuotedChars(): native.Array<string>;
								asUnquotedUTF8(): native.Array<number>;
								asQuotedUTF8(): native.Array<number>;
								appendQuotedUTF8(param0: native.Array<number>, param1: number): number;
								appendQuoted(param0: native.Array<string>, param1: number): number;
								appendUnquotedUTF8(param0: native.Array<number>, param1: number): number;
								appendUnquoted(param0: native.Array<string>, param1: number): number;
								writeQuotedUTF8(param0: java.io.OutputStream): number;
								writeUnquotedUTF8(param0: java.io.OutputStream): number;
								putQuotedUTF8(param0: java.nio.ByteBuffer): number;
								putUnquotedUTF8(param0: java.nio.ByteBuffer): number;
							});
							public constructor();
							public asQuotedChars(): native.Array<string>;
							public asUnquotedUTF8(): native.Array<number>;
							public putUnquotedUTF8(param0: java.nio.ByteBuffer): number;
							public appendUnquoted(param0: native.Array<string>, param1: number): number;
							public getValue(): string;
							public asQuotedUTF8(): native.Array<number>;
							public appendQuoted(param0: native.Array<string>, param1: number): number;
							public writeQuotedUTF8(param0: java.io.OutputStream): number;
							public charLength(): number;
							public appendUnquotedUTF8(param0: native.Array<number>, param1: number): number;
							public writeUnquotedUTF8(param0: java.io.OutputStream): number;
							public appendQuotedUTF8(param0: native.Array<number>, param1: number): number;
							public putQuotedUTF8(param0: java.nio.ByteBuffer): number;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export abstract class TreeCodec {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.TreeCodec>;
							public constructor();
							public createArrayNode(): me.pushy.sdk.lib.jackson.core.TreeNode;
							public createObjectNode(): me.pushy.sdk.lib.jackson.core.TreeNode;
							public readTree(param0: me.pushy.sdk.lib.jackson.core.JsonParser): me.pushy.sdk.lib.jackson.core.TreeNode;
							public treeAsTokens(param0: me.pushy.sdk.lib.jackson.core.TreeNode): me.pushy.sdk.lib.jackson.core.JsonParser;
							public writeTree(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.core.TreeNode): void;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export class TreeNode {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.TreeNode>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.core.TreeNode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								size(): number;
								isValueNode(): boolean;
								isContainerNode(): boolean;
								isMissingNode(): boolean;
								isArray(): boolean;
								isObject(): boolean;
								get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								fieldNames(): java.util.Iterator<string>;
								at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
								at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
								traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
							});
							public constructor();
							public size(): number;
							public traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
							public fieldNames(): java.util.Iterator<string>;
							public traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
							public get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
							public isValueNode(): boolean;
							public at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
							public isContainerNode(): boolean;
							public get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
							public asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
							public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
							public isMissingNode(): boolean;
							public isObject(): boolean;
							public path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
							public numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
							public path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
							public isArray(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export class Version extends java.lang.Object {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.Version>;
							public _majorVersion: number;
							public _minorVersion: number;
							public _patchLevel: number;
							public _groupId: string;
							public _artifactId: string;
							public _snapshotInfo: string;
							public getGroupId(): string;
							public compareTo(param0: me.pushy.sdk.lib.jackson.core.Version): number;
							public getArtifactId(): string;
							public hashCode(): number;
							public isSnapshot(): boolean;
							public getMinorVersion(): number;
							public toString(): string;
							public isUnknownVersion(): boolean;
							public getPatchLevel(): number;
							public getMajorVersion(): number;
							public constructor(param0: number, param1: number, param2: number, param3: string);
							public isUknownVersion(): boolean;
							public toFullString(): string;
							public static unknownVersion(): me.pushy.sdk.lib.jackson.core.Version;
							public equals(param0: any): boolean;
							public constructor(param0: number, param1: number, param2: number, param3: string, param4: string, param5: string);
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export class Versioned {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.Versioned>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.core.Versioned interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								version(): me.pushy.sdk.lib.jackson.core.Version;
							});
							public constructor();
							public version(): me.pushy.sdk.lib.jackson.core.Version;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module base {
							export abstract class GeneratorBase extends me.pushy.sdk.lib.jackson.core.JsonGenerator {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.base.GeneratorBase>;
								public static SURR1_FIRST: number;
								public static SURR1_LAST: number;
								public static SURR2_FIRST: number;
								public static SURR2_LAST: number;
								public static DERIVED_FEATURES_MASK: number;
								public static WRITE_BINARY: string;
								public static WRITE_BOOLEAN: string;
								public static WRITE_NULL: string;
								public static WRITE_NUMBER: string;
								public static WRITE_RAW: string;
								public static WRITE_STRING: string;
								public static MAX_BIG_DECIMAL_SCALE: number;
								public _objectCodec: me.pushy.sdk.lib.jackson.core.ObjectCodec;
								public _features: number;
								public _cfgNumbersAsStrings: boolean;
								public _writeContext: me.pushy.sdk.lib.jackson.core.json.JsonWriteContext;
								public _closed: boolean;
								public getOutputContext(): me.pushy.sdk.lib.jackson.core.JsonStreamContext;
								public writeBinary(param0: java.io.InputStream, param1: number): number;
								public writeBinary(param0: native.Array<number>): void;
								public setFeatureMask(param0: number): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public overrideStdFeatures(param0: number, param1: number): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public writeStartObject(): void;
								public writeRawValue(param0: string, param1: number, param2: number): void;
								public writeBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.InputStream, param2: number): number;
								public writeString(param0: string): void;
								public useDefaultPrettyPrinter(): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public flush(): void;
								public constructor(param0: number, param1: me.pushy.sdk.lib.jackson.core.ObjectCodec);
								public enable(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public constructor(param0: number, param1: me.pushy.sdk.lib.jackson.core.ObjectCodec, param2: me.pushy.sdk.lib.jackson.core.json.JsonWriteContext);
								public getCodec(): me.pushy.sdk.lib.jackson.core.ObjectCodec;
								public getFeatureMask(): number;
								public writeRawValue(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public writeBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: native.Array<number>, param2: number, param3: number): void;
								public writeBinary(param0: native.Array<number>, param1: number, param2: number): void;
								public _constructDefaultPrettyPrinter(): me.pushy.sdk.lib.jackson.core.PrettyPrinter;
								public writeFieldName(param0: string): void;
								public writeString(param0: java.io.Reader, param1: number): void;
								public getCurrentValue(): any;
								public constructor();
								public setCurrentValue(param0: any): void;
								public setCodec(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public writeStartObject(param0: any): void;
								public writeRawValue(param0: string): void;
								public writeObject(param0: any): void;
								public writeString(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public _checkStdFeatureChanges(param0: number, param1: number): void;
								public writeTree(param0: me.pushy.sdk.lib.jackson.core.TreeNode): void;
								public isClosed(): boolean;
								public _decodeSurrogate(param0: number, param1: number): number;
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public writeRawValue(param0: native.Array<string>, param1: number, param2: number): void;
								public writeFieldName(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public writeString(param0: native.Array<string>, param1: number, param2: number): void;
								public _asString(param0: java.math.BigDecimal): string;
								public isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): boolean;
								public close(): void;
								public disable(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public _releaseBuffers(): void;
								public _verifyValueWrite(param0: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module base {
							export abstract class ParserBase extends me.pushy.sdk.lib.jackson.core.base.ParserMinimalBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.base.ParserBase>;
								public _ioContext: me.pushy.sdk.lib.jackson.core.io.IOContext;
								public _closed: boolean;
								public _inputPtr: number;
								public _inputEnd: number;
								public _currInputProcessed: number;
								public _currInputRow: number;
								public _currInputRowStart: number;
								public _tokenInputTotal: number;
								public _tokenInputRow: number;
								public _tokenInputCol: number;
								public _parsingContext: me.pushy.sdk.lib.jackson.core.json.JsonReadContext;
								public _nextToken: me.pushy.sdk.lib.jackson.core.JsonToken;
								public _textBuffer: me.pushy.sdk.lib.jackson.core.util.TextBuffer;
								public _nameCopyBuffer: native.Array<string>;
								public _nameCopied: boolean;
								public _byteArrayBuilder: me.pushy.sdk.lib.jackson.core.util.ByteArrayBuilder;
								public _binaryValue: native.Array<number>;
								public _numTypesValid: number;
								public _numberInt: number;
								public _numberLong: number;
								public _numberDouble: number;
								public _numberBigInt: java.math.BigInteger;
								public _numberBigDecimal: java.math.BigDecimal;
								public _numberNegative: boolean;
								public _intLength: number;
								public _fractLength: number;
								public _expLength: number;
								public getBinaryValue(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): native.Array<number>;
								public _handleEOF(): void;
								public resetFloat(param0: boolean, param1: number, param2: number, param3: number): me.pushy.sdk.lib.jackson.core.JsonToken;
								public getDecimalValue(): java.math.BigDecimal;
								public convertNumberToBigInteger(): void;
								public getLongValue(): number;
								public getTokenColumnNr(): number;
								public resetInt(param0: boolean, param1: number): me.pushy.sdk.lib.jackson.core.JsonToken;
								public disable(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature): me.pushy.sdk.lib.jackson.core.JsonParser;
								public enable(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature): me.pushy.sdk.lib.jackson.core.JsonParser;
								public _decodeBase64Escape(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: number, param2: number): number;
								public getDoubleValue(): number;
								public _finishString(): void;
								public reportInvalidBase64Char(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: number, param2: number): java.lang.IllegalArgumentException;
								public constructor();
								public _parseIntValue(): number;
								public getParsingContext(): me.pushy.sdk.lib.jackson.core.json.JsonReadContext;
								public getIntValue(): number;
								public convertNumberToBigDecimal(): void;
								public constructor(param0: number);
								public getNumberValue(): java.lang.Number;
								public _checkStdFeatureChanges(param0: number, param1: number): void;
								public getParsingContext(): me.pushy.sdk.lib.jackson.core.JsonStreamContext;
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public close(): void;
								public getCurrentLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
								public getNumberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public getTokenLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
								public getTokenLineNr(): number;
								public _eofAsNextChar(): number;
								public setFeatureMask(param0: number): me.pushy.sdk.lib.jackson.core.JsonParser;
								public reportInvalidBase64Char(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: number, param2: number, param3: string): java.lang.IllegalArgumentException;
								public _decodeEscaped(): string;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: number);
								public overrideCurrentName(param0: string): void;
								public _closeInput(): void;
								public _getByteArrayBuilder(): me.pushy.sdk.lib.jackson.core.util.ByteArrayBuilder;
								public convertNumberToLong(): void;
								public loadMore(): boolean;
								public getFloatValue(): number;
								public _parseNumericValue(param0: number): void;
								public _decodeBase64Escape(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: string, param2: number): number;
								public loadMoreGuaranteed(): void;
								public getCurrentName(): string;
								public getTokenCharacterOffset(): number;
								public convertNumberToDouble(): void;
								public reset(param0: boolean, param1: number, param2: number, param3: number): me.pushy.sdk.lib.jackson.core.JsonToken;
								public getCurrentValue(): any;
								public getBinaryValue(): native.Array<number>;
								public hasTextCharacters(): boolean;
								public setCurrentValue(param0: any): void;
								public _reportMismatchedEndMarker(param0: number, param1: string): void;
								public resetAsNaN(param0: string, param1: number): me.pushy.sdk.lib.jackson.core.JsonToken;
								public convertNumberToInt(): void;
								public _getSourceReference(): any;
								public isNaN(): boolean;
								public isClosed(): boolean;
								public overrideStdFeatures(param0: number, param1: number): me.pushy.sdk.lib.jackson.core.JsonParser;
								public getBigIntegerValue(): java.math.BigInteger;
								public _releaseBuffers(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module base {
							export abstract class ParserMinimalBase extends me.pushy.sdk.lib.jackson.core.JsonParser {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.base.ParserMinimalBase>;
								public static INT_TAB: number;
								public static INT_LF: number;
								public static INT_CR: number;
								public static INT_SPACE: number;
								public static INT_LBRACKET: number;
								public static INT_RBRACKET: number;
								public static INT_LCURLY: number;
								public static INT_RCURLY: number;
								public static INT_QUOTE: number;
								public static INT_BACKSLASH: number;
								public static INT_SLASH: number;
								public static INT_COLON: number;
								public static INT_COMMA: number;
								public static INT_HASH: number;
								public static INT_0: number;
								public static INT_9: number;
								public static INT_MINUS: number;
								public static INT_PLUS: number;
								public static INT_PERIOD: number;
								public static INT_e: number;
								public static INT_E: number;
								public static CHAR_NULL: string;
								public static NR_UNKNOWN: number;
								public static NR_INT: number;
								public static NR_LONG: number;
								public static NR_BIGINT: number;
								public static NR_DOUBLE: number;
								public static NR_BIGDECIMAL: number;
								public static NR_FLOAT: number;
								public static BI_MIN_INT: java.math.BigInteger;
								public static BI_MAX_INT: java.math.BigInteger;
								public static BI_MIN_LONG: java.math.BigInteger;
								public static BI_MAX_LONG: java.math.BigInteger;
								public static BD_MIN_LONG: java.math.BigDecimal;
								public static BD_MAX_LONG: java.math.BigDecimal;
								public static BD_MIN_INT: java.math.BigDecimal;
								public static BD_MAX_INT: java.math.BigDecimal;
								public static MIN_INT_L: number;
								public static MAX_INT_L: number;
								public static MIN_LONG_D: number;
								public static MAX_LONG_D: number;
								public static MIN_INT_D: number;
								public static MAX_INT_D: number;
								public static MAX_ERROR_TOKEN_LENGTH: number;
								public _currToken: me.pushy.sdk.lib.jackson.core.JsonToken;
								public _lastClearedToken: me.pushy.sdk.lib.jackson.core.JsonToken;
								public _handleEOF(): void;
								public getBinaryValue(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): native.Array<number>;
								public nextToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public _wrapError(param0: string, param1: java.lang.Throwable): void;
								public hasCurrentToken(): boolean;
								public getValueAsInt(): number;
								public _reportError(param0: string, param1: any, param2: any): void;
								public getCurrentTokenId(): number;
								public currentTokenId(): number;
								public getText(param0: java.io.Writer): number;
								public getValueAsDouble(): number;
								public reportOverflowLong(): void;
								public _reportUnexpectedChar(param0: number, param1: string): void;
								public _reportError(param0: string, param1: any): void;
								public isExpectedStartObjectToken(): boolean;
								public getTextOffset(): number;
								public getValueAsInt(param0: number): number;
								public getValueAsLong(param0: number): number;
								public clearCurrentToken(): void;
								public _constructError(param0: string, param1: java.lang.Throwable): me.pushy.sdk.lib.jackson.core.JsonParseException;
								public currentToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public constructor();
								public _reportInvalidEOF(): void;
								public getValueAsBoolean(): boolean;
								public skipChildren(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public _throwInvalidSpace(param0: number): void;
								public constructor(param0: number);
								public _decodeBase64(param0: string, param1: me.pushy.sdk.lib.jackson.core.util.ByteArrayBuilder, param2: me.pushy.sdk.lib.jackson.core.Base64Variant): void;
								public getParsingContext(): me.pushy.sdk.lib.jackson.core.JsonStreamContext;
								public getTextLength(): number;
								public _hasTextualNull(param0: string): boolean;
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public getCurrentToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public static _ascii(param0: native.Array<number>): string;
								public getValueAsDouble(param0: number): number;
								public _throwUnquotedSpace(param0: number, param1: string): void;
								public close(): void;
								public reportOverflowInt(): void;
								public _reportInvalidEOF(param0: string): void;
								public _constructError(param0: string): me.pushy.sdk.lib.jackson.core.JsonParseException;
								public static _asciiBytes(param0: string): native.Array<number>;
								public reportInvalidNumber(param0: string): void;
								public overrideCurrentName(param0: string): void;
								public getText(): string;
								public static _getCharDesc(param0: number): string;
								public _throwInternal(): void;
								public getValueAsString(): string;
								public _reportMissingRootWS(param0: number): void;
								public getCurrentName(): string;
								public isExpectedStartArrayToken(): boolean;
								public _reportInvalidEOF(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonToken): void;
								public _reportInvalidEOFInValue(): void;
								public getBinaryValue(): native.Array<number>;
								public hasTextCharacters(): boolean;
								public hasToken(param0: me.pushy.sdk.lib.jackson.core.JsonToken): boolean;
								public nextValue(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public getValueAsBoolean(param0: boolean): boolean;
								public _reportInvalidEOFInValue(param0: me.pushy.sdk.lib.jackson.core.JsonToken): void;
								public getValueAsString(param0: string): string;
								public getLastClearedToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public _handleUnrecognizedCharacterEscape(param0: string): string;
								public isClosed(): boolean;
								public getValueAsLong(): number;
								public reportUnexpectedNumberChar(param0: number, param1: string): void;
								public _reportError(param0: string): void;
								public getTextCharacters(): native.Array<string>;
								public hasTokenId(param0: number): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module filter {
							export class FilteringGeneratorDelegate extends me.pushy.sdk.lib.jackson.core.util.JsonGeneratorDelegate {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.filter.FilteringGeneratorDelegate>;
								public rootFilter: me.pushy.sdk.lib.jackson.core.filter.TokenFilter;
								public _allowMultipleMatches: boolean;
								public _includePath: boolean;
								public _includeImmediateParent: boolean;
								public _filterContext: me.pushy.sdk.lib.jackson.core.filter.TokenFilterContext;
								public _itemFilter: me.pushy.sdk.lib.jackson.core.filter.TokenFilter;
								public _matchCount: number;
								public writeBinary(param0: java.io.InputStream, param1: number): number;
								public writeStartObject(): void;
								public writeString(param0: string): void;
								public writeRawValue(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public writeNumber(param0: java.math.BigDecimal): void;
								public writeRaw(param0: native.Array<string>, param1: number, param2: number): void;
								public writeRaw(param0: string, param1: number, param2: number): void;
								public writeFieldName(param0: string): void;
								public constructor();
								public writeNumber(param0: string): void;
								public writeRawValue(param0: string): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator);
								public writeNumber(param0: number): void;
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public getFilterContext(): me.pushy.sdk.lib.jackson.core.JsonStreamContext;
								public writeFieldName(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.core.filter.TokenFilter, param2: boolean, param3: boolean);
								public writeString(param0: native.Array<string>, param1: number, param2: number): void;
								public _checkPropertyParentPath(): void;
								public writeEndArray(): void;
								public getOutputContext(): me.pushy.sdk.lib.jackson.core.JsonStreamContext;
								public writeRawUTF8String(param0: native.Array<number>, param1: number, param2: number): void;
								public writeBinary(param0: native.Array<number>): void;
								public _checkRawValueWrite(): boolean;
								public writeRaw(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public writeRaw(param0: string): void;
								public writeRawValue(param0: string, param1: number, param2: number): void;
								public writeBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.InputStream, param2: number): number;
								public writeBoolean(param0: boolean): void;
								public writeStartArray(): void;
								public writeStartArray(param0: number): void;
								public writeBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: native.Array<number>, param2: number, param3: number): void;
								public writeBinary(param0: native.Array<number>, param1: number, param2: number): void;
								public writeTypeId(param0: any): void;
								public getFilter(): me.pushy.sdk.lib.jackson.core.filter.TokenFilter;
								public writeString(param0: java.io.Reader, param1: number): void;
								public writeObjectId(param0: any): void;
								public writeOmittedField(param0: string): void;
								public _checkBinaryWrite(): boolean;
								public writeObjectRef(param0: any): void;
								public writeStartObject(param0: any): void;
								public writeString(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public writeNumber(param0: java.math.BigInteger): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: boolean);
								public getMatchCount(): number;
								public writeEndObject(): void;
								public writeRawValue(param0: native.Array<string>, param1: number, param2: number): void;
								public _checkParentPath(): void;
								public writeNull(): void;
								public writeUTF8String(param0: native.Array<number>, param1: number, param2: number): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module filter {
							export class FilteringParserDelegate extends me.pushy.sdk.lib.jackson.core.util.JsonParserDelegate {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.filter.FilteringParserDelegate>;
								public rootFilter: me.pushy.sdk.lib.jackson.core.filter.TokenFilter;
								public _allowMultipleMatches: boolean;
								public _includePath: boolean;
								public _includeImmediateParent: boolean;
								public _currToken: me.pushy.sdk.lib.jackson.core.JsonToken;
								public _lastClearedToken: me.pushy.sdk.lib.jackson.core.JsonToken;
								public _headContext: me.pushy.sdk.lib.jackson.core.filter.TokenFilterContext;
								public _exposedContext: me.pushy.sdk.lib.jackson.core.filter.TokenFilterContext;
								public _itemFilter: me.pushy.sdk.lib.jackson.core.filter.TokenFilter;
								public _matchCount: number;
								public getBinaryValue(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): native.Array<number>;
								public getDecimalValue(): java.math.BigDecimal;
								public getShortValue(): number;
								public nextToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public getLongValue(): number;
								public hasCurrentToken(): boolean;
								public getValueAsInt(): number;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.core.filter.TokenFilter, param2: boolean, param3: boolean);
								public getCurrentTokenId(): number;
								public readBinaryValue(param0: java.io.OutputStream): number;
								public currentTokenId(): number;
								public getText(param0: java.io.Writer): number;
								public getDoubleValue(): number;
								public getValueAsDouble(): number;
								public isExpectedStartObjectToken(): boolean;
								public getTextOffset(): number;
								public getByteValue(): number;
								public getValueAsInt(param0: number): number;
								public getValueAsLong(param0: number): number;
								public clearCurrentToken(): void;
								public getEmbeddedObject(): any;
								public currentToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public constructor();
								public _nextToken2(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public getIntValue(): number;
								public getBooleanValue(): boolean;
								public getValueAsBoolean(): boolean;
								public skipChildren(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public constructor(param0: number);
								public getNumberValue(): java.lang.Number;
								public getParsingContext(): me.pushy.sdk.lib.jackson.core.JsonStreamContext;
								public getTextLength(): number;
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public getCurrentToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public getValueAsDouble(param0: number): number;
								public _filterContext(): me.pushy.sdk.lib.jackson.core.JsonStreamContext;
								public getCurrentLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
								public getNumberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public getTokenLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
								public _nextTokenWithBuffering(param0: me.pushy.sdk.lib.jackson.core.filter.TokenFilterContext): me.pushy.sdk.lib.jackson.core.JsonToken;
								public overrideCurrentName(param0: string): void;
								public getText(): string;
								public getValueAsString(): string;
								public getFloatValue(): number;
								public getCurrentName(): string;
								public isExpectedStartArrayToken(): boolean;
								public getFilter(): me.pushy.sdk.lib.jackson.core.filter.TokenFilter;
								public getBinaryValue(): native.Array<number>;
								public hasTextCharacters(): boolean;
								public hasToken(param0: me.pushy.sdk.lib.jackson.core.JsonToken): boolean;
								public nextValue(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public getValueAsBoolean(param0: boolean): boolean;
								public getValueAsString(param0: string): string;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser);
								public getLastClearedToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public readBinaryValue(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.OutputStream): number;
								public getMatchCount(): number;
								public getValueAsLong(): number;
								public getBigIntegerValue(): java.math.BigInteger;
								public getTextCharacters(): native.Array<string>;
								public hasTokenId(param0: number): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module filter {
							export class JsonPointerBasedFilter extends me.pushy.sdk.lib.jackson.core.filter.TokenFilter {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.filter.JsonPointerBasedFilter>;
								public _pathToMatch: me.pushy.sdk.lib.jackson.core.JsonPointer;
								public toString(): string;
								public filterStartObject(): me.pushy.sdk.lib.jackson.core.filter.TokenFilter;
								public includeProperty(param0: string): me.pushy.sdk.lib.jackson.core.filter.TokenFilter;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonPointer);
								public constructor();
								public constructor(param0: string);
								public _includeScalar(): boolean;
								public includeElement(param0: number): me.pushy.sdk.lib.jackson.core.filter.TokenFilter;
								public filterStartArray(): me.pushy.sdk.lib.jackson.core.filter.TokenFilter;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module filter {
							export class TokenFilter {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.filter.TokenFilter>;
								public static INCLUDE_ALL: me.pushy.sdk.lib.jackson.core.filter.TokenFilter;
								public filterFinishArray(): void;
								public toString(): string;
								public includeValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser): boolean;
								public includeNull(): boolean;
								public constructor();
								public includeEmbeddedValue(param0: any): boolean;
								public _includeScalar(): boolean;
								public filterStartArray(): me.pushy.sdk.lib.jackson.core.filter.TokenFilter;
								public includeRawValue(): boolean;
								public includeNumber(param0: number): boolean;
								public filterStartObject(): me.pushy.sdk.lib.jackson.core.filter.TokenFilter;
								public includeString(param0: string): boolean;
								public includeNumber(param0: java.math.BigDecimal): boolean;
								public filterFinishObject(): void;
								public includeBinary(): boolean;
								public includeBoolean(param0: boolean): boolean;
								public includeProperty(param0: string): me.pushy.sdk.lib.jackson.core.filter.TokenFilter;
								public includeRootValue(param0: number): me.pushy.sdk.lib.jackson.core.filter.TokenFilter;
								public includeElement(param0: number): me.pushy.sdk.lib.jackson.core.filter.TokenFilter;
								public includeNumber(param0: java.math.BigInteger): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module filter {
							export class TokenFilterContext extends me.pushy.sdk.lib.jackson.core.JsonStreamContext {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.filter.TokenFilterContext>;
								public _parent: me.pushy.sdk.lib.jackson.core.filter.TokenFilterContext;
								public _child: me.pushy.sdk.lib.jackson.core.filter.TokenFilterContext;
								public _currentName: string;
								public _filter: me.pushy.sdk.lib.jackson.core.filter.TokenFilter;
								public _startHandled: boolean;
								public _needToHandleName: boolean;
								public appendDesc(param0: java.lang.StringBuilder): void;
								public toString(): string;
								public writeImmediatePath(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public getParent(): me.pushy.sdk.lib.jackson.core.JsonStreamContext;
								public constructor(param0: number, param1: me.pushy.sdk.lib.jackson.core.filter.TokenFilterContext, param2: me.pushy.sdk.lib.jackson.core.filter.TokenFilter, param3: boolean);
								public isStartHandled(): boolean;
								public nextTokenToRead(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public reset(param0: number, param1: me.pushy.sdk.lib.jackson.core.filter.TokenFilter, param2: boolean): me.pushy.sdk.lib.jackson.core.filter.TokenFilterContext;
								public hasCurrentName(): boolean;
								public static createRootContext(param0: me.pushy.sdk.lib.jackson.core.filter.TokenFilter): me.pushy.sdk.lib.jackson.core.filter.TokenFilterContext;
								public closeArray(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): me.pushy.sdk.lib.jackson.core.filter.TokenFilterContext;
								public setFieldName(param0: string): me.pushy.sdk.lib.jackson.core.filter.TokenFilter;
								public skipParentChecks(): void;
								public getCurrentName(): string;
								public findChildOf(param0: me.pushy.sdk.lib.jackson.core.filter.TokenFilterContext): me.pushy.sdk.lib.jackson.core.filter.TokenFilterContext;
								public getParent(): me.pushy.sdk.lib.jackson.core.filter.TokenFilterContext;
								public getFilter(): me.pushy.sdk.lib.jackson.core.filter.TokenFilter;
								public getCurrentValue(): any;
								public createChildArrayContext(param0: me.pushy.sdk.lib.jackson.core.filter.TokenFilter, param1: boolean): me.pushy.sdk.lib.jackson.core.filter.TokenFilterContext;
								public constructor();
								public checkValue(param0: me.pushy.sdk.lib.jackson.core.filter.TokenFilter): me.pushy.sdk.lib.jackson.core.filter.TokenFilter;
								public setCurrentValue(param0: any): void;
								public createChildObjectContext(param0: me.pushy.sdk.lib.jackson.core.filter.TokenFilter, param1: boolean): me.pushy.sdk.lib.jackson.core.filter.TokenFilterContext;
								public closeObject(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): me.pushy.sdk.lib.jackson.core.filter.TokenFilterContext;
								public writePath(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module format {
							export class DataFormatDetector {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.format.DataFormatDetector>;
								public static DEFAULT_MAX_INPUT_LOOKAHEAD: number;
								public _detectors: native.Array<me.pushy.sdk.lib.jackson.core.JsonFactory>;
								public _optimalMatch: me.pushy.sdk.lib.jackson.core.format.MatchStrength;
								public _minimalMatch: me.pushy.sdk.lib.jackson.core.format.MatchStrength;
								public _maxInputLookahead: number;
								public withMaxInputLookahead(param0: number): me.pushy.sdk.lib.jackson.core.format.DataFormatDetector;
								public toString(): string;
								public findFormat(param0: native.Array<number>, param1: number, param2: number): me.pushy.sdk.lib.jackson.core.format.DataFormatMatcher;
								public findFormat(param0: java.io.InputStream): me.pushy.sdk.lib.jackson.core.format.DataFormatMatcher;
								public constructor(param0: native.Array<me.pushy.sdk.lib.jackson.core.JsonFactory>);
								public withOptimalMatch(param0: me.pushy.sdk.lib.jackson.core.format.MatchStrength): me.pushy.sdk.lib.jackson.core.format.DataFormatDetector;
								public findFormat(param0: native.Array<number>): me.pushy.sdk.lib.jackson.core.format.DataFormatMatcher;
								public constructor(param0: java.util.Collection<me.pushy.sdk.lib.jackson.core.JsonFactory>);
								public withMinimalMatch(param0: me.pushy.sdk.lib.jackson.core.format.MatchStrength): me.pushy.sdk.lib.jackson.core.format.DataFormatDetector;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module format {
							export class DataFormatMatcher {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.format.DataFormatMatcher>;
								public _originalStream: java.io.InputStream;
								public _bufferedData: native.Array<number>;
								public _bufferedStart: number;
								public _bufferedLength: number;
								public _match: me.pushy.sdk.lib.jackson.core.JsonFactory;
								public _matchStrength: me.pushy.sdk.lib.jackson.core.format.MatchStrength;
								public constructor(param0: java.io.InputStream, param1: native.Array<number>, param2: number, param3: number, param4: me.pushy.sdk.lib.jackson.core.JsonFactory, param5: me.pushy.sdk.lib.jackson.core.format.MatchStrength);
								public getMatch(): me.pushy.sdk.lib.jackson.core.JsonFactory;
								public getDataStream(): java.io.InputStream;
								public hasMatch(): boolean;
								public createParserWithMatch(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public getMatchStrength(): me.pushy.sdk.lib.jackson.core.format.MatchStrength;
								public getMatchedFormatName(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module format {
							export class InputAccessor {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.format.InputAccessor>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.core.format.InputAccessor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									hasMoreBytes(): boolean;
									nextByte(): number;
									reset(): void;
								});
								public constructor();
								public reset(): void;
								public nextByte(): number;
								public hasMoreBytes(): boolean;
							}
							export module InputAccessor {
								export class Std extends me.pushy.sdk.lib.jackson.core.format.InputAccessor {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.format.InputAccessor.Std>;
									public _in: java.io.InputStream;
									public _buffer: native.Array<number>;
									public _bufferedStart: number;
									public _bufferedEnd: number;
									public _ptr: number;
									public hasMoreBytes(): boolean;
									public createMatcher(param0: me.pushy.sdk.lib.jackson.core.JsonFactory, param1: me.pushy.sdk.lib.jackson.core.format.MatchStrength): me.pushy.sdk.lib.jackson.core.format.DataFormatMatcher;
									public constructor(param0: native.Array<number>);
									public constructor(param0: java.io.InputStream, param1: native.Array<number>);
									public constructor(param0: native.Array<number>, param1: number, param2: number);
									public nextByte(): number;
									public reset(): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module format {
							export class MatchStrength {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.format.MatchStrength>;
								public static NO_MATCH: me.pushy.sdk.lib.jackson.core.format.MatchStrength;
								public static INCONCLUSIVE: me.pushy.sdk.lib.jackson.core.format.MatchStrength;
								public static WEAK_MATCH: me.pushy.sdk.lib.jackson.core.format.MatchStrength;
								public static SOLID_MATCH: me.pushy.sdk.lib.jackson.core.format.MatchStrength;
								public static FULL_MATCH: me.pushy.sdk.lib.jackson.core.format.MatchStrength;
								public static values(): native.Array<me.pushy.sdk.lib.jackson.core.format.MatchStrength>;
								public static valueOf(param0: string): me.pushy.sdk.lib.jackson.core.format.MatchStrength;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module io {
							export class CharTypes {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.io.CharTypes>;
								public static getInputCodeUtf8(): native.Array<number>;
								public static getInputCodeWS(): native.Array<number>;
								public static appendQuoted(param0: java.lang.StringBuilder, param1: string): void;
								public static copyHexBytes(): native.Array<number>;
								public static getInputCodeLatin1(): native.Array<number>;
								public static getInputCodeUtf8JsNames(): native.Array<number>;
								public static get7BitOutputEscapes(): native.Array<number>;
								public static copyHexChars(): native.Array<string>;
								public constructor();
								public static charToHex(param0: number): number;
								public static getInputCodeLatin1JsNames(): native.Array<number>;
								public static getInputCodeComment(): native.Array<number>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module io {
							export abstract class CharacterEscapes {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.io.CharacterEscapes>;
								public static ESCAPE_NONE: number;
								public static ESCAPE_STANDARD: number;
								public static ESCAPE_CUSTOM: number;
								public getEscapeCodesForAscii(): native.Array<number>;
								public constructor();
								public getEscapeSequence(param0: number): me.pushy.sdk.lib.jackson.core.SerializableString;
								public static standardAsciiEscapesForJSON(): native.Array<number>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module io {
							export class DataOutputAsStream {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.io.DataOutputAsStream>;
								public _output: java.io.DataOutput;
								public write(param0: number): void;
								public constructor(param0: java.io.DataOutput);
								public write(param0: native.Array<number>, param1: number, param2: number): void;
								public write(param0: native.Array<number>): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module io {
							export class IOContext {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.io.IOContext>;
								public _sourceRef: any;
								public _encoding: me.pushy.sdk.lib.jackson.core.JsonEncoding;
								public _managedResource: boolean;
								public _bufferRecycler: me.pushy.sdk.lib.jackson.core.util.BufferRecycler;
								public _readIOBuffer: native.Array<number>;
								public _writeEncodingBuffer: native.Array<number>;
								public _base64Buffer: native.Array<number>;
								public _tokenCBuffer: native.Array<string>;
								public _concatCBuffer: native.Array<string>;
								public _nameCopyBuffer: native.Array<string>;
								public _verifyRelease(param0: native.Array<string>, param1: native.Array<string>): void;
								public getSourceReference(): any;
								public allocReadIOBuffer(param0: number): native.Array<number>;
								public releaseBase64Buffer(param0: native.Array<number>): void;
								public allocReadIOBuffer(): native.Array<number>;
								public allocTokenBuffer(param0: number): native.Array<string>;
								public allocNameCopyBuffer(param0: number): native.Array<string>;
								public allocTokenBuffer(): native.Array<string>;
								public releaseTokenBuffer(param0: native.Array<string>): void;
								public withEncoding(param0: me.pushy.sdk.lib.jackson.core.JsonEncoding): me.pushy.sdk.lib.jackson.core.io.IOContext;
								public getEncoding(): me.pushy.sdk.lib.jackson.core.JsonEncoding;
								public allocWriteEncodingBuffer(): native.Array<number>;
								public releaseReadIOBuffer(param0: native.Array<number>): void;
								public releaseNameCopyBuffer(param0: native.Array<string>): void;
								public allocWriteEncodingBuffer(param0: number): native.Array<number>;
								public _verifyAlloc(param0: any): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.util.BufferRecycler, param1: any, param2: boolean);
								public setEncoding(param0: me.pushy.sdk.lib.jackson.core.JsonEncoding): void;
								public _verifyRelease(param0: native.Array<number>, param1: native.Array<number>): void;
								public isResourceManaged(): boolean;
								public allocBase64Buffer(): native.Array<number>;
								public allocConcatBuffer(): native.Array<string>;
								public constructTextBuffer(): me.pushy.sdk.lib.jackson.core.util.TextBuffer;
								public releaseConcatBuffer(param0: native.Array<string>): void;
								public releaseWriteEncodingBuffer(param0: native.Array<number>): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module io {
							export abstract class InputDecorator {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.io.InputDecorator>;
								public decorate(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: native.Array<number>, param2: number, param3: number): java.io.InputStream;
								public decorate(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: java.io.Reader): java.io.Reader;
								public decorate(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: java.io.InputStream): java.io.InputStream;
								public constructor();
								public decorate(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: java.io.DataInput): java.io.DataInput;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module io {
							export class JsonEOFException extends me.pushy.sdk.lib.jackson.core.JsonParseException {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.io.JsonEOFException>;
								public _token: me.pushy.sdk.lib.jackson.core.JsonToken;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public constructor(param0: java.lang.Throwable);
								public constructor(param0: string, param1: java.lang.Throwable);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.core.JsonToken, param2: string);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation, param2: java.lang.Throwable);
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: java.lang.Throwable);
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string);
								public constructor(param0: string);
								public getTokenBeingDecoded(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation, param3: java.lang.Throwable);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module io {
							export class JsonStringEncoder {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.io.JsonStringEncoder>;
								public static _threadEncoder: java.lang.ThreadLocal<java.lang.ref.SoftReference<me.pushy.sdk.lib.jackson.core.io.JsonStringEncoder>>;
								public _text: me.pushy.sdk.lib.jackson.core.util.TextBuffer;
								public _bytes: me.pushy.sdk.lib.jackson.core.util.ByteArrayBuilder;
								public _qbuf: native.Array<string>;
								public static getInstance(): me.pushy.sdk.lib.jackson.core.io.JsonStringEncoder;
								public quoteAsString(param0: string): native.Array<string>;
								public quoteAsUTF8(param0: string): native.Array<number>;
								public encodeAsUTF8(param0: string): native.Array<number>;
								public constructor();
								public quoteAsString(param0: string, param1: java.lang.StringBuilder): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module io {
							export class MergedStream {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.io.MergedStream>;
								public read(param0: native.Array<number>): number;
								public skip(param0: number): number;
								public reset(): void;
								public mark(param0: number): void;
								public available(): number;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: java.io.InputStream, param2: native.Array<number>, param3: number, param4: number);
								public close(): void;
								public markSupported(): boolean;
								public read(param0: native.Array<number>, param1: number, param2: number): number;
								public read(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module io {
							export class NumberInput {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.io.NumberInput>;
								public static NASTY_SMALL_DOUBLE: string;
								public static parseAsDouble(param0: string, param1: number): number;
								public static parseAsLong(param0: string, param1: number): number;
								public static parseBigDecimal(param0: native.Array<string>): java.math.BigDecimal;
								public constructor();
								public static parseLong(param0: string): number;
								public static parseLong(param0: native.Array<string>, param1: number, param2: number): number;
								public static parseBigDecimal(param0: string): java.math.BigDecimal;
								public static inLongRange(param0: native.Array<string>, param1: number, param2: number, param3: boolean): boolean;
								public static parseDouble(param0: string): number;
								public static inLongRange(param0: string, param1: boolean): boolean;
								public static parseAsInt(param0: string, param1: number): number;
								public static parseInt(param0: string): number;
								public static parseInt(param0: native.Array<string>, param1: number, param2: number): number;
								public static parseBigDecimal(param0: native.Array<string>, param1: number, param2: number): java.math.BigDecimal;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module io {
							export class NumberOutput {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.io.NumberOutput>;
								public static outputLong(param0: number, param1: native.Array<string>, param2: number): number;
								public static outputInt(param0: number, param1: native.Array<string>, param2: number): number;
								public static toString(param0: number): string;
								public constructor();
								public static outputInt(param0: number, param1: native.Array<number>, param2: number): number;
								public static outputLong(param0: number, param1: native.Array<number>, param2: number): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module io {
							export abstract class OutputDecorator {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.io.OutputDecorator>;
								public decorate(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: java.io.OutputStream): java.io.OutputStream;
								public decorate(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: java.io.Writer): java.io.Writer;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module io {
							export class SegmentedStringWriter {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.io.SegmentedStringWriter>;
								public flush(): void;
								public write(param0: number): void;
								public append(param0: string, param1: number, param2: number): java.io.Writer;
								public getAndClear(): string;
								public write(param0: native.Array<string>, param1: number, param2: number): void;
								public write(param0: string): void;
								public write(param0: native.Array<string>): void;
								public write(param0: string, param1: number, param2: number): void;
								public append(param0: string): java.io.Writer;
								public close(): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.util.BufferRecycler);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module io {
							export class SerializedString extends me.pushy.sdk.lib.jackson.core.SerializableString {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.io.SerializedString>;
								public _value: string;
								public _quotedUTF8Ref: native.Array<number>;
								public _unquotedUTF8Ref: native.Array<number>;
								public _quotedChars: native.Array<string>;
								public _jdkSerializeValue: string;
								public asUnquotedUTF8(): native.Array<number>;
								public appendQuotedUTF8(param0: native.Array<number>, param1: number): number;
								public toString(): string;
								public putQuotedUTF8(param0: java.nio.ByteBuffer): number;
								public equals(param0: any): boolean;
								public asQuotedChars(): native.Array<string>;
								public asQuotedUTF8(): native.Array<number>;
								public appendUnquotedUTF8(param0: native.Array<number>, param1: number): number;
								public writeQuotedUTF8(param0: java.io.OutputStream): number;
								public readResolve(): any;
								public appendQuoted(param0: native.Array<string>, param1: number): number;
								public appendUnquoted(param0: native.Array<string>, param1: number): number;
								public constructor(param0: string);
								public writeUnquotedUTF8(param0: java.io.OutputStream): number;
								public putUnquotedUTF8(param0: java.nio.ByteBuffer): number;
								public charLength(): number;
								public hashCode(): number;
								public getValue(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module io {
							export class UTF32Reader {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.io.UTF32Reader>;
								public static LAST_VALID_UNICODE_CHAR: number;
								public static NC: string;
								public _context: me.pushy.sdk.lib.jackson.core.io.IOContext;
								public _in: java.io.InputStream;
								public _buffer: native.Array<number>;
								public _ptr: number;
								public _length: number;
								public _bigEndian: boolean;
								public _surrogate: string;
								public _charCount: number;
								public _byteCount: number;
								public _managedBuffers: boolean;
								public _tmpBuf: native.Array<string>;
								public read(param0: native.Array<string>, param1: number, param2: number): number;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: java.io.InputStream, param2: native.Array<number>, param3: number, param4: number, param5: boolean);
								public close(): void;
								public read(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module io {
							export class UTF8Writer {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.io.UTF8Writer>;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: java.io.OutputStream);
								public flush(): void;
								public write(param0: number): void;
								public write(param0: native.Array<string>, param1: number, param2: number): void;
								public write(param0: string): void;
								public static illegalSurrogate(param0: number): void;
								public static illegalSurrogateDesc(param0: number): string;
								public write(param0: native.Array<string>): void;
								public write(param0: string, param1: number, param2: number): void;
								public append(param0: string): java.io.Writer;
								public close(): void;
								public convertSurrogate(param0: number): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module json {
							export class ByteSourceJsonBootstrapper {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.json.ByteSourceJsonBootstrapper>;
								public detectEncoding(): me.pushy.sdk.lib.jackson.core.JsonEncoding;
								public ensureLoaded(param0: number): boolean;
								public constructParser(param0: number, param1: me.pushy.sdk.lib.jackson.core.ObjectCodec, param2: me.pushy.sdk.lib.jackson.core.sym.ByteQuadsCanonicalizer, param3: me.pushy.sdk.lib.jackson.core.sym.CharsToNameCanonicalizer, param4: number): me.pushy.sdk.lib.jackson.core.JsonParser;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: java.io.InputStream);
								public constructor(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: native.Array<number>, param2: number, param3: number);
								public static skipUTF8BOM(param0: java.io.DataInput): number;
								public constructReader(): java.io.Reader;
								public static hasJSONFormat(param0: me.pushy.sdk.lib.jackson.core.format.InputAccessor): me.pushy.sdk.lib.jackson.core.format.MatchStrength;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module json {
							export class DupDetector {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.json.DupDetector>;
								public _source: any;
								public _firstName: string;
								public _secondName: string;
								public _seen: java.util.HashSet<string>;
								public findLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
								public static rootDetector(param0: me.pushy.sdk.lib.jackson.core.JsonParser): me.pushy.sdk.lib.jackson.core.json.DupDetector;
								public reset(): void;
								public isDup(param0: string): boolean;
								public static rootDetector(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): me.pushy.sdk.lib.jackson.core.json.DupDetector;
								public child(): me.pushy.sdk.lib.jackson.core.json.DupDetector;
								public getSource(): any;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module json {
							export abstract class JsonGeneratorImpl extends me.pushy.sdk.lib.jackson.core.base.GeneratorBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.json.JsonGeneratorImpl>;
								public static sOutputEscapes: native.Array<number>;
								public _ioContext: me.pushy.sdk.lib.jackson.core.io.IOContext;
								public _outputEscapes: native.Array<number>;
								public _maximumNonEscapedChar: number;
								public _characterEscapes: me.pushy.sdk.lib.jackson.core.io.CharacterEscapes;
								public _rootValueSeparator: me.pushy.sdk.lib.jackson.core.SerializableString;
								public _cfgUnqNames: boolean;
								public writeStringField(param0: string, param1: string): void;
								public _reportCantWriteValueExpectName(param0: string): void;
								public setHighestNonEscapedChar(param0: number): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public setRootValueSeparator(param0: me.pushy.sdk.lib.jackson.core.SerializableString): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public getHighestEscapedChar(): number;
								public constructor();
								public constructor(param0: number, param1: me.pushy.sdk.lib.jackson.core.ObjectCodec);
								public constructor(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: number, param2: me.pushy.sdk.lib.jackson.core.ObjectCodec);
								public enable(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public _checkStdFeatureChanges(param0: number, param1: number): void;
								public getCharacterEscapes(): me.pushy.sdk.lib.jackson.core.io.CharacterEscapes;
								public constructor(param0: number, param1: me.pushy.sdk.lib.jackson.core.ObjectCodec, param2: me.pushy.sdk.lib.jackson.core.json.JsonWriteContext);
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public setCharacterEscapes(param0: me.pushy.sdk.lib.jackson.core.io.CharacterEscapes): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public _verifyPrettyValueWrite(param0: string, param1: number): void;
								public disable(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module json {
							export class JsonReadContext extends me.pushy.sdk.lib.jackson.core.JsonStreamContext {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.json.JsonReadContext>;
								public _parent: me.pushy.sdk.lib.jackson.core.json.JsonReadContext;
								public _dups: me.pushy.sdk.lib.jackson.core.json.DupDetector;
								public _child: me.pushy.sdk.lib.jackson.core.json.JsonReadContext;
								public _currentName: string;
								public _currentValue: any;
								public _lineNr: number;
								public _columnNr: number;
								public getCurrentName(): string;
								public toString(): string;
								public static createRootContext(param0: number, param1: number, param2: me.pushy.sdk.lib.jackson.core.json.DupDetector): me.pushy.sdk.lib.jackson.core.json.JsonReadContext;
								public createChildObjectContext(param0: number, param1: number): me.pushy.sdk.lib.jackson.core.json.JsonReadContext;
								public getParent(): me.pushy.sdk.lib.jackson.core.json.JsonReadContext;
								public setCurrentName(param0: string): void;
								public static createRootContext(param0: me.pushy.sdk.lib.jackson.core.json.DupDetector): me.pushy.sdk.lib.jackson.core.json.JsonReadContext;
								public getCurrentValue(): any;
								public getDupDetector(): me.pushy.sdk.lib.jackson.core.json.DupDetector;
								public constructor();
								public getParent(): me.pushy.sdk.lib.jackson.core.JsonStreamContext;
								public setCurrentValue(param0: any): void;
								public reset(param0: number, param1: number, param2: number): void;
								public hasCurrentName(): boolean;
								public createChildArrayContext(param0: number, param1: number): me.pushy.sdk.lib.jackson.core.json.JsonReadContext;
								public getStartLocation(param0: any): me.pushy.sdk.lib.jackson.core.JsonLocation;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.json.JsonReadContext, param1: me.pushy.sdk.lib.jackson.core.json.DupDetector, param2: number, param3: number, param4: number);
								public withDupDetector(param0: me.pushy.sdk.lib.jackson.core.json.DupDetector): me.pushy.sdk.lib.jackson.core.json.JsonReadContext;
								public clearAndGetParent(): me.pushy.sdk.lib.jackson.core.json.JsonReadContext;
								public expectComma(): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module json {
							export class JsonWriteContext extends me.pushy.sdk.lib.jackson.core.JsonStreamContext {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.json.JsonWriteContext>;
								public static STATUS_OK_AS_IS: number;
								public static STATUS_OK_AFTER_COMMA: number;
								public static STATUS_OK_AFTER_COLON: number;
								public static STATUS_OK_AFTER_SPACE: number;
								public static STATUS_EXPECT_VALUE: number;
								public static STATUS_EXPECT_NAME: number;
								public _parent: me.pushy.sdk.lib.jackson.core.json.JsonWriteContext;
								public _dups: me.pushy.sdk.lib.jackson.core.json.DupDetector;
								public _child: me.pushy.sdk.lib.jackson.core.json.JsonWriteContext;
								public _currentName: string;
								public _currentValue: any;
								public _gotName: boolean;
								public appendDesc(param0: java.lang.StringBuilder): void;
								public getCurrentName(): string;
								public toString(): string;
								public clearAndGetParent(): me.pushy.sdk.lib.jackson.core.json.JsonWriteContext;
								public static createRootContext(): me.pushy.sdk.lib.jackson.core.json.JsonWriteContext;
								public getCurrentValue(): any;
								public getParent(): me.pushy.sdk.lib.jackson.core.json.JsonWriteContext;
								public getDupDetector(): me.pushy.sdk.lib.jackson.core.json.DupDetector;
								public writeValue(): number;
								public constructor();
								public getParent(): me.pushy.sdk.lib.jackson.core.JsonStreamContext;
								public reset(param0: number): me.pushy.sdk.lib.jackson.core.json.JsonWriteContext;
								public setCurrentValue(param0: any): void;
								public static createRootContext(param0: me.pushy.sdk.lib.jackson.core.json.DupDetector): me.pushy.sdk.lib.jackson.core.json.JsonWriteContext;
								public hasCurrentName(): boolean;
								public withDupDetector(param0: me.pushy.sdk.lib.jackson.core.json.DupDetector): me.pushy.sdk.lib.jackson.core.json.JsonWriteContext;
								public createChildObjectContext(): me.pushy.sdk.lib.jackson.core.json.JsonWriteContext;
								public writeFieldName(param0: string): number;
								public constructor(param0: number, param1: me.pushy.sdk.lib.jackson.core.json.JsonWriteContext, param2: me.pushy.sdk.lib.jackson.core.json.DupDetector);
								public createChildArrayContext(): me.pushy.sdk.lib.jackson.core.json.JsonWriteContext;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module json {
							export class PackageVersion extends me.pushy.sdk.lib.jackson.core.Versioned {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.json.PackageVersion>;
								public static VERSION: me.pushy.sdk.lib.jackson.core.Version;
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module json {
							export class ReaderBasedJsonParser extends me.pushy.sdk.lib.jackson.core.base.ParserBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.json.ReaderBasedJsonParser>;
								public static FEAT_MASK_TRAILING_COMMA: number;
								public static _icLatin1: native.Array<number>;
								public _reader: java.io.Reader;
								public _inputBuffer: native.Array<string>;
								public _bufferRecyclable: boolean;
								public _objectCodec: me.pushy.sdk.lib.jackson.core.ObjectCodec;
								public _symbols: me.pushy.sdk.lib.jackson.core.sym.CharsToNameCanonicalizer;
								public _hashSeed: number;
								public _tokenIncomplete: boolean;
								public _nameStartOffset: number;
								public _nameStartRow: number;
								public _nameStartCol: number;
								public getBinaryValue(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): native.Array<number>;
								public _skipCR(): void;
								public nextToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public _handleOddValue(param0: number): me.pushy.sdk.lib.jackson.core.JsonToken;
								public _finishString2(): void;
								public _matchToken(param0: string, param1: number): void;
								public readBinaryValue(param0: java.io.OutputStream): number;
								public getText(param0: java.io.Writer): number;
								public _finishString(): void;
								public getTextOffset(): number;
								public getNextChar(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonToken): string;
								public releaseBuffered(param0: java.io.Writer): number;
								public _reportInvalidToken(param0: string): void;
								public getNextChar(param0: string): string;
								public nextTextValue(): string;
								public constructor();
								public _loadMoreGuaranteed(): void;
								public _loadMore(): boolean;
								public constructor(param0: number);
								public _decodeBase64(param0: string, param1: me.pushy.sdk.lib.jackson.core.util.ByteArrayBuilder, param2: me.pushy.sdk.lib.jackson.core.Base64Variant): void;
								public nextLongValue(param0: number): number;
								public getTextLength(): number;
								public _skipString(): void;
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public nextBooleanValue(): java.lang.Boolean;
								public _decodeBase64(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): native.Array<number>;
								public getCurrentLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: number, param2: java.io.Reader, param3: me.pushy.sdk.lib.jackson.core.ObjectCodec, param4: me.pushy.sdk.lib.jackson.core.sym.CharsToNameCanonicalizer);
								public nextIntValue(param0: number): number;
								public getTokenLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
								public _getText2(param0: me.pushy.sdk.lib.jackson.core.JsonToken): string;
								public _parsePosNumber(param0: number): me.pushy.sdk.lib.jackson.core.JsonToken;
								public _decodeEscaped(): string;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: number, param2: java.io.Reader, param3: me.pushy.sdk.lib.jackson.core.ObjectCodec, param4: me.pushy.sdk.lib.jackson.core.sym.CharsToNameCanonicalizer, param5: native.Array<string>, param6: number, param7: number, param8: boolean);
								public constructor(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: number);
								public _handleApos(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public getCodec(): me.pushy.sdk.lib.jackson.core.ObjectCodec;
								public getText(): string;
								public _parseName(): string;
								public _closeInput(): void;
								public finishToken(): void;
								public setCodec(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): void;
								public getValueAsString(): string;
								public getInputSource(): any;
								public _handleOddName(param0: number): string;
								public _isNextTokenNameMaybe(param0: number, param1: string): boolean;
								public getBinaryValue(): native.Array<number>;
								public nextFieldName(): string;
								public _reportInvalidToken(param0: string, param1: string): void;
								public _readBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.OutputStream, param2: native.Array<number>): number;
								public getValueAsString(param0: string): string;
								public readBinaryValue(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.OutputStream): number;
								public releaseBuffered(param0: java.io.OutputStream): number;
								public _handleInvalidNumberStart(param0: number, param1: boolean): me.pushy.sdk.lib.jackson.core.JsonToken;
								public _parseAposName(): string;
								public _parseNegNumber(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public nextFieldName(param0: me.pushy.sdk.lib.jackson.core.SerializableString): boolean;
								public getTextCharacters(): native.Array<string>;
								public _releaseBuffers(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module json {
							export class UTF8DataInputJsonParser extends me.pushy.sdk.lib.jackson.core.base.ParserBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.json.UTF8DataInputJsonParser>;
								public static _icLatin1: native.Array<number>;
								public _objectCodec: me.pushy.sdk.lib.jackson.core.ObjectCodec;
								public _symbols: me.pushy.sdk.lib.jackson.core.sym.ByteQuadsCanonicalizer;
								public _quadBuffer: native.Array<number>;
								public _tokenIncomplete: boolean;
								public _inputData: java.io.DataInput;
								public _nextByte: number;
								public getBinaryValue(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): native.Array<number>;
								public nextToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public getValueAsInt(): number;
								public _matchToken(param0: string, param1: number): void;
								public readBinaryValue(param0: java.io.OutputStream): number;
								public getText(param0: java.io.Writer): number;
								public _finishString(): void;
								public getTextOffset(): number;
								public getValueAsInt(param0: number): number;
								public releaseBuffered(param0: java.io.Writer): number;
								public nextTextValue(): string;
								public constructor();
								public constructor(param0: number);
								public _decodeBase64(param0: string, param1: me.pushy.sdk.lib.jackson.core.util.ByteArrayBuilder, param2: me.pushy.sdk.lib.jackson.core.Base64Variant): void;
								public nextLongValue(param0: number): number;
								public getTextLength(): number;
								public _skipString(): void;
								public _reportInvalidInitial(param0: number): void;
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public nextBooleanValue(): java.lang.Boolean;
								public _reportInvalidToken(param0: number, param1: string): void;
								public _reportInvalidChar(param0: number): void;
								public _decodeBase64(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): native.Array<number>;
								public getCurrentLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
								public nextIntValue(param0: number): number;
								public _decodeCharForError(param0: number): number;
								public getTokenLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
								public _getText2(param0: me.pushy.sdk.lib.jackson.core.JsonToken): string;
								public _parsePosNumber(param0: number): me.pushy.sdk.lib.jackson.core.JsonToken;
								public _handleUnexpectedValue(param0: number): me.pushy.sdk.lib.jackson.core.JsonToken;
								public _decodeEscaped(): string;
								public _parseName(param0: number): string;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: number);
								public _handleApos(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public getCodec(): me.pushy.sdk.lib.jackson.core.ObjectCodec;
								public getText(): string;
								public _closeInput(): void;
								public finishToken(): void;
								public setCodec(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): void;
								public _reportInvalidToken(param0: number, param1: string, param2: string): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: number, param2: java.io.DataInput, param3: me.pushy.sdk.lib.jackson.core.ObjectCodec, param4: me.pushy.sdk.lib.jackson.core.sym.ByteQuadsCanonicalizer, param5: number);
								public getValueAsString(): string;
								public getInputSource(): any;
								public _handleOddName(param0: number): string;
								public parseEscapedName(param0: native.Array<number>, param1: number, param2: number, param3: number, param4: number): string;
								public getBinaryValue(): native.Array<number>;
								public nextFieldName(): string;
								public _readBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.OutputStream, param2: native.Array<number>): number;
								public getValueAsString(param0: string): string;
								public readBinaryValue(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.OutputStream): number;
								public releaseBuffered(param0: java.io.OutputStream): number;
								public _handleInvalidNumberStart(param0: number, param1: boolean): me.pushy.sdk.lib.jackson.core.JsonToken;
								public _parseAposName(): string;
								public _parseNegNumber(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public nextFieldName(param0: me.pushy.sdk.lib.jackson.core.SerializableString): boolean;
								public getTextCharacters(): native.Array<string>;
								public _releaseBuffers(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module json {
							export class UTF8JsonGenerator extends me.pushy.sdk.lib.jackson.core.json.JsonGeneratorImpl {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.json.UTF8JsonGenerator>;
								public _outputStream: java.io.OutputStream;
								public _quoteChar: number;
								public _outputBuffer: native.Array<number>;
								public _outputTail: number;
								public _outputEnd: number;
								public _outputMaxContiguous: number;
								public _charBuffer: native.Array<string>;
								public _charBufferLength: number;
								public _entityBuffer: native.Array<number>;
								public _bufferRecyclable: boolean;
								public writeBinary(param0: java.io.InputStream, param1: number): number;
								public _writeBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.InputStream, param2: native.Array<number>): number;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: number, param2: me.pushy.sdk.lib.jackson.core.ObjectCodec, param3: java.io.OutputStream);
								public _writePPFieldName(param0: string): void;
								public _writePPFieldName(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public writeStartObject(): void;
								public writeString(param0: string): void;
								public flush(): void;
								public constructor(param0: number, param1: me.pushy.sdk.lib.jackson.core.ObjectCodec);
								public writeRawValue(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public writeNumber(param0: java.math.BigDecimal): void;
								public writeRaw(param0: native.Array<string>, param1: number, param2: number): void;
								public writeRaw(param0: string, param1: number, param2: number): void;
								public writeFieldName(param0: string): void;
								public constructor();
								public writeNumber(param0: string): void;
								public getOutputBuffered(): number;
								public writeRawValue(param0: string): void;
								public _outputSurrogates(param0: number, param1: number): void;
								public writeNumber(param0: number): void;
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public writeFieldName(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public _writeBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: native.Array<number>, param2: number, param3: number): void;
								public writeString(param0: native.Array<string>, param1: number, param2: number): void;
								public getOutputTarget(): any;
								public close(): void;
								public writeEndArray(): void;
								public writeRawUTF8String(param0: native.Array<number>, param1: number, param2: number): void;
								public writeBinary(param0: native.Array<number>): void;
								public writeRaw(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public writeRaw(param0: string): void;
								public writeRawValue(param0: string, param1: number, param2: number): void;
								public writeBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.InputStream, param2: number): number;
								public writeBoolean(param0: boolean): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: number, param2: me.pushy.sdk.lib.jackson.core.ObjectCodec);
								public writeStartArray(): void;
								public constructor(param0: number, param1: me.pushy.sdk.lib.jackson.core.ObjectCodec, param2: me.pushy.sdk.lib.jackson.core.json.JsonWriteContext);
								public writeStartArray(param0: number): void;
								public writeBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: native.Array<number>, param2: number, param3: number): void;
								public writeBinary(param0: native.Array<number>, param1: number, param2: number): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: number, param2: me.pushy.sdk.lib.jackson.core.ObjectCodec, param3: java.io.OutputStream, param4: native.Array<number>, param5: number, param6: boolean);
								public writeString(param0: java.io.Reader, param1: number): void;
								public writeStartObject(param0: any): void;
								public writeString(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public writeNumber(param0: java.math.BigInteger): void;
								public _writeBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.InputStream, param2: native.Array<number>, param3: number): number;
								public writeEndObject(): void;
								public writeRawValue(param0: native.Array<string>, param1: number, param2: number): void;
								public _flushBuffer(): void;
								public writeNull(): void;
								public writeUTF8String(param0: native.Array<number>, param1: number, param2: number): void;
								public _verifyValueWrite(param0: string): void;
								public _releaseBuffers(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module json {
							export class UTF8StreamJsonParser extends me.pushy.sdk.lib.jackson.core.base.ParserBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.json.UTF8StreamJsonParser>;
								public static _icLatin1: native.Array<number>;
								public static FEAT_MASK_TRAILING_COMMA: number;
								public _objectCodec: me.pushy.sdk.lib.jackson.core.ObjectCodec;
								public _symbols: me.pushy.sdk.lib.jackson.core.sym.ByteQuadsCanonicalizer;
								public _quadBuffer: native.Array<number>;
								public _tokenIncomplete: boolean;
								public _nameStartOffset: number;
								public _nameStartRow: number;
								public _nameStartCol: number;
								public _inputStream: java.io.InputStream;
								public _inputBuffer: native.Array<number>;
								public _bufferRecyclable: boolean;
								public getBinaryValue(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): native.Array<number>;
								public _skipCR(): void;
								public slowParseName(): string;
								public nextToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public getValueAsInt(): number;
								public _matchToken(param0: string, param1: number): void;
								public parseMediumName2(param0: number, param1: number): string;
								public readBinaryValue(param0: java.io.OutputStream): number;
								public getText(param0: java.io.Writer): number;
								public _finishString(): void;
								public getTextOffset(): number;
								public getValueAsInt(param0: number): number;
								public releaseBuffered(param0: java.io.Writer): number;
								public _reportInvalidToken(param0: string): void;
								public nextTextValue(): string;
								public constructor();
								public parseLongName(param0: number, param1: number, param2: number): string;
								public _loadMoreGuaranteed(): void;
								public _loadMore(): boolean;
								public constructor(param0: number);
								public _decodeBase64(param0: string, param1: me.pushy.sdk.lib.jackson.core.util.ByteArrayBuilder, param2: me.pushy.sdk.lib.jackson.core.Base64Variant): void;
								public nextLongValue(param0: number): number;
								public getTextLength(): number;
								public _skipString(): void;
								public _reportInvalidInitial(param0: number): void;
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public nextBooleanValue(): java.lang.Boolean;
								public _reportInvalidChar(param0: number): void;
								public _reportInvalidOther(param0: number, param1: number): void;
								public _decodeBase64(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): native.Array<number>;
								public getCurrentLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
								public static growArrayBy(param0: native.Array<number>, param1: number): native.Array<number>;
								public nextIntValue(param0: number): number;
								public _decodeCharForError(param0: number): number;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: number, param2: java.io.InputStream, param3: me.pushy.sdk.lib.jackson.core.ObjectCodec, param4: me.pushy.sdk.lib.jackson.core.sym.ByteQuadsCanonicalizer, param5: native.Array<number>, param6: number, param7: number, param8: boolean);
								public getTokenLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
								public _getText2(param0: me.pushy.sdk.lib.jackson.core.JsonToken): string;
								public _parsePosNumber(param0: number): me.pushy.sdk.lib.jackson.core.JsonToken;
								public _handleUnexpectedValue(param0: number): me.pushy.sdk.lib.jackson.core.JsonToken;
								public _decodeEscaped(): string;
								public _parseName(param0: number): string;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: number);
								public _handleApos(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public getCodec(): me.pushy.sdk.lib.jackson.core.ObjectCodec;
								public getText(): string;
								public _closeInput(): void;
								public finishToken(): void;
								public setCodec(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): void;
								public getValueAsString(): string;
								public _reportInvalidOther(param0: number): void;
								public getInputSource(): any;
								public _handleOddName(param0: number): string;
								public parseEscapedName(param0: native.Array<number>, param1: number, param2: number, param3: number, param4: number): string;
								public getBinaryValue(): native.Array<number>;
								public nextFieldName(): string;
								public _reportInvalidToken(param0: string, param1: string): void;
								public _readBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.OutputStream, param2: native.Array<number>): number;
								public getValueAsString(param0: string): string;
								public readBinaryValue(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.OutputStream): number;
								public _finishAndReturnString(): string;
								public _loadToHaveAtLeast(param0: number): boolean;
								public releaseBuffered(param0: java.io.OutputStream): number;
								public _handleInvalidNumberStart(param0: number, param1: boolean): me.pushy.sdk.lib.jackson.core.JsonToken;
								public _parseAposName(): string;
								public _parseNegNumber(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public parseMediumName(param0: number): string;
								public nextFieldName(param0: me.pushy.sdk.lib.jackson.core.SerializableString): boolean;
								public getTextCharacters(): native.Array<string>;
								public _releaseBuffers(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module json {
							export class WriterBasedJsonGenerator extends me.pushy.sdk.lib.jackson.core.json.JsonGeneratorImpl {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.json.WriterBasedJsonGenerator>;
								public static SHORT_WRITE: number;
								public static HEX_CHARS: native.Array<string>;
								public _writer: java.io.Writer;
								public _quoteChar: string;
								public _outputBuffer: native.Array<string>;
								public _outputHead: number;
								public _outputTail: number;
								public _outputEnd: number;
								public _entityBuffer: native.Array<string>;
								public _currentEscape: me.pushy.sdk.lib.jackson.core.SerializableString;
								public _charBuffer: native.Array<string>;
								public writeBinary(param0: java.io.InputStream, param1: number): number;
								public _writeBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.InputStream, param2: native.Array<number>): number;
								public writeStartObject(): void;
								public writeString(param0: string): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: number, param2: me.pushy.sdk.lib.jackson.core.ObjectCodec, param3: java.io.Writer);
								public _writeFieldName(param0: string, param1: boolean): void;
								public flush(): void;
								public constructor(param0: number, param1: me.pushy.sdk.lib.jackson.core.ObjectCodec);
								public writeNumber(param0: java.math.BigDecimal): void;
								public writeRaw(param0: native.Array<string>, param1: number, param2: number): void;
								public writeRaw(param0: string, param1: number, param2: number): void;
								public writeFieldName(param0: string): void;
								public _writePPFieldName(param0: string, param1: boolean): void;
								public constructor();
								public writeNumber(param0: string): void;
								public getOutputBuffered(): number;
								public writeNumber(param0: number): void;
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public writeFieldName(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public _writeBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: native.Array<number>, param2: number, param3: number): void;
								public writeString(param0: native.Array<string>, param1: number, param2: number): void;
								public _writePPFieldName(param0: me.pushy.sdk.lib.jackson.core.SerializableString, param1: boolean): void;
								public getOutputTarget(): any;
								public close(): void;
								public writeEndArray(): void;
								public writeRawUTF8String(param0: native.Array<number>, param1: number, param2: number): void;
								public writeBinary(param0: native.Array<number>): void;
								public writeRaw(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public writeRaw(param0: string): void;
								public writeBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.InputStream, param2: number): number;
								public writeBoolean(param0: boolean): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.io.IOContext, param1: number, param2: me.pushy.sdk.lib.jackson.core.ObjectCodec);
								public writeStartArray(): void;
								public constructor(param0: number, param1: me.pushy.sdk.lib.jackson.core.ObjectCodec, param2: me.pushy.sdk.lib.jackson.core.json.JsonWriteContext);
								public writeStartArray(param0: number): void;
								public writeBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: native.Array<number>, param2: number, param3: number): void;
								public writeBinary(param0: native.Array<number>, param1: number, param2: number): void;
								public _writeFieldName(param0: me.pushy.sdk.lib.jackson.core.SerializableString, param1: boolean): void;
								public writeString(param0: java.io.Reader, param1: number): void;
								public canWriteFormattedNumbers(): boolean;
								public writeStartObject(param0: any): void;
								public writeString(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public writeNumber(param0: java.math.BigInteger): void;
								public _writeBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.InputStream, param2: native.Array<number>, param3: number): number;
								public writeEndObject(): void;
								public _flushBuffer(): void;
								public writeNull(): void;
								public writeUTF8String(param0: native.Array<number>, param1: number, param2: number): void;
								public _verifyValueWrite(param0: string): void;
								public _releaseBuffers(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module sym {
							export class ByteQuadsCanonicalizer {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.sym.ByteQuadsCanonicalizer>;
								public toString(): string;
								public size(): number;
								public calcHash(param0: number): number;
								public maybeDirty(): boolean;
								public tertiaryCount(): number;
								public release(): void;
								public findName(param0: number, param1: number): string;
								public addName(param0: string, param1: number, param2: number): string;
								public findName(param0: native.Array<number>, param1: number): string;
								public makeChild(param0: number): me.pushy.sdk.lib.jackson.core.sym.ByteQuadsCanonicalizer;
								public hashSeed(): number;
								public calcHash(param0: number, param1: number): number;
								public addName(param0: string, param1: number, param2: number, param3: number): string;
								public primaryCount(): number;
								public secondaryCount(): number;
								public findName(param0: number, param1: number, param2: number): string;
								public totalCount(): number;
								public _reportTooManyCollisions(): void;
								public calcHash(param0: native.Array<number>, param1: number): number;
								public static createRoot(param0: number): me.pushy.sdk.lib.jackson.core.sym.ByteQuadsCanonicalizer;
								public calcHash(param0: number, param1: number, param2: number): number;
								public static createRoot(): me.pushy.sdk.lib.jackson.core.sym.ByteQuadsCanonicalizer;
								public addName(param0: string, param1: native.Array<number>, param2: number): string;
								public spilloverCount(): number;
								public findName(param0: number): string;
								public bucketCount(): number;
								public addName(param0: string, param1: number): string;
							}
							export module ByteQuadsCanonicalizer {
								export class TableInfo {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.sym.ByteQuadsCanonicalizer.TableInfo>;
									public size: number;
									public count: number;
									public tertiaryShift: number;
									public mainHash: native.Array<number>;
									public names: native.Array<string>;
									public spilloverEnd: number;
									public longNameOffset: number;
									public constructor(param0: number, param1: number, param2: number, param3: native.Array<number>, param4: native.Array<string>, param5: number, param6: number);
									public constructor(param0: me.pushy.sdk.lib.jackson.core.sym.ByteQuadsCanonicalizer);
									public static createInitial(param0: number): me.pushy.sdk.lib.jackson.core.sym.ByteQuadsCanonicalizer.TableInfo;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module sym {
							export class CharsToNameCanonicalizer {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.sym.CharsToNameCanonicalizer>;
								public static HASH_MULT: number;
								public makeChild(param0: number): me.pushy.sdk.lib.jackson.core.sym.CharsToNameCanonicalizer;
								public _hashToIndex(param0: number): number;
								public size(): number;
								public maybeDirty(): boolean;
								public maxCollisionLength(): number;
								public release(): void;
								public reportTooManyCollisions(param0: number): void;
								public calcHash(param0: string): number;
								public hashSeed(): number;
								public collisionCount(): number;
								public static createRoot(): me.pushy.sdk.lib.jackson.core.sym.CharsToNameCanonicalizer;
								public bucketCount(): number;
								public calcHash(param0: native.Array<string>, param1: number, param2: number): number;
								public findSymbol(param0: native.Array<string>, param1: number, param2: number, param3: number): string;
								public static createRoot(param0: number): me.pushy.sdk.lib.jackson.core.sym.CharsToNameCanonicalizer;
							}
							export module CharsToNameCanonicalizer {
								export class Bucket {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.sym.CharsToNameCanonicalizer.Bucket>;
									public symbol: string;
									public next: me.pushy.sdk.lib.jackson.core.sym.CharsToNameCanonicalizer.Bucket;
									public length: number;
									public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.sym.CharsToNameCanonicalizer.Bucket);
									public has(param0: native.Array<string>, param1: number, param2: number): string;
								}
								export class TableInfo {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.sym.CharsToNameCanonicalizer.TableInfo>;
									public constructor(param0: number, param1: number, param2: native.Array<string>, param3: native.Array<me.pushy.sdk.lib.jackson.core.sym.CharsToNameCanonicalizer.Bucket>);
									public constructor(param0: me.pushy.sdk.lib.jackson.core.sym.CharsToNameCanonicalizer);
									public static createInitial(param0: number): me.pushy.sdk.lib.jackson.core.sym.CharsToNameCanonicalizer.TableInfo;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module sym {
							export abstract class Name {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.sym.Name>;
								public _name: string;
								public _hashCode: number;
								public equals(param0: number): boolean;
								public toString(): string;
								public getName(): string;
								public equals(param0: any): boolean;
								public equals(param0: number, param1: number): boolean;
								public equals(param0: number, param1: number, param2: number): boolean;
								public equals(param0: native.Array<number>, param1: number): boolean;
								public hashCode(): number;
								public constructor(param0: string, param1: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module sym {
							export class Name1 extends me.pushy.sdk.lib.jackson.core.sym.Name {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.sym.Name1>;
								public equals(param0: number): boolean;
								public equals(param0: any): boolean;
								public equals(param0: number, param1: number): boolean;
								public equals(param0: number, param1: number, param2: number): boolean;
								public equals(param0: native.Array<number>, param1: number): boolean;
								public static getEmptyName(): me.pushy.sdk.lib.jackson.core.sym.Name1;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module sym {
							export class Name2 extends me.pushy.sdk.lib.jackson.core.sym.Name {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.sym.Name2>;
								public equals(param0: number): boolean;
								public equals(param0: any): boolean;
								public equals(param0: number, param1: number): boolean;
								public equals(param0: number, param1: number, param2: number): boolean;
								public equals(param0: native.Array<number>, param1: number): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module sym {
							export class Name3 extends me.pushy.sdk.lib.jackson.core.sym.Name {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.sym.Name3>;
								public equals(param0: number): boolean;
								public equals(param0: any): boolean;
								public equals(param0: number, param1: number): boolean;
								public equals(param0: number, param1: number, param2: number): boolean;
								public equals(param0: native.Array<number>, param1: number): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module sym {
							export class NameN extends me.pushy.sdk.lib.jackson.core.sym.Name {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.sym.NameN>;
								public equals(param0: number): boolean;
								public equals(param0: any): boolean;
								public equals(param0: number, param1: number): boolean;
								public static construct(param0: string, param1: number, param2: native.Array<number>, param3: number): me.pushy.sdk.lib.jackson.core.sym.NameN;
								public equals(param0: number, param1: number, param2: number): boolean;
								public equals(param0: native.Array<number>, param1: number): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module type {
							export abstract class ResolvedType {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.type.ResolvedType>;
								public isPrimitive(): boolean;
								public isAbstract(): boolean;
								public isReferenceType(): boolean;
								public toCanonical(): string;
								public getReferencedType(): me.pushy.sdk.lib.jackson.core.type.ResolvedType;
								public constructor();
								public getParameterSource(): java.lang.Class<any>;
								public isInterface(): boolean;
								public isFinal(): boolean;
								public isContainerType(): boolean;
								public getContentType(): me.pushy.sdk.lib.jackson.core.type.ResolvedType;
								public isArrayType(): boolean;
								public isCollectionLikeType(): boolean;
								public containedTypeName(param0: number): string;
								public isThrowable(): boolean;
								public hasGenericTypes(): boolean;
								public isMapLikeType(): boolean;
								public isEnumType(): boolean;
								public getRawClass(): java.lang.Class<any>;
								public hasRawClass(param0: java.lang.Class<any>): boolean;
								public getKeyType(): me.pushy.sdk.lib.jackson.core.type.ResolvedType;
								public containedType(param0: number): me.pushy.sdk.lib.jackson.core.type.ResolvedType;
								public isConcrete(): boolean;
								public containedTypeCount(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module type {
							export abstract class TypeReference<T>  extends java.lang.Comparable<me.pushy.sdk.lib.jackson.core.type.TypeReference<any>> {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.type.TypeReference<any>>;
								public _type: java.lang.reflect.Type;
								public compareTo(param0: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): number;
								public constructor();
								public getType(): java.lang.reflect.Type;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module util {
							export class BufferRecycler {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.util.BufferRecycler>;
								public static BYTE_READ_IO_BUFFER: number;
								public static BYTE_WRITE_ENCODING_BUFFER: number;
								public static BYTE_WRITE_CONCAT_BUFFER: number;
								public static BYTE_BASE64_CODEC_BUFFER: number;
								public static CHAR_TOKEN_BUFFER: number;
								public static CHAR_CONCAT_BUFFER: number;
								public static CHAR_TEXT_BUFFER: number;
								public static CHAR_NAME_COPY_BUFFER: number;
								public _byteBuffers: native.Array<native.Array<number>>;
								public _charBuffers: native.Array<native.Array<string>>;
								public allocCharBuffer(param0: number): native.Array<string>;
								public allocCharBuffer(param0: number, param1: number): native.Array<string>;
								public byteBufferLength(param0: number): number;
								public balloc(param0: number): native.Array<number>;
								public releaseCharBuffer(param0: number, param1: native.Array<string>): void;
								public releaseByteBuffer(param0: number, param1: native.Array<number>): void;
								public charBufferLength(param0: number): number;
								public constructor(param0: number, param1: number);
								public constructor();
								public allocByteBuffer(param0: number, param1: number): native.Array<number>;
								public calloc(param0: number): native.Array<string>;
								public allocByteBuffer(param0: number): native.Array<number>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module util {
							export class ByteArrayBuilder {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.util.ByteArrayBuilder>;
								public static NO_BYTES: native.Array<number>;
								public completeAndCoalesce(param0: number): native.Array<number>;
								public write(param0: number): void;
								public getCurrentSegment(): native.Array<number>;
								public setCurrentSegmentLength(param0: number): void;
								public write(param0: native.Array<number>, param1: number, param2: number): void;
								public append(param0: number): void;
								public toByteArray(): native.Array<number>;
								public constructor();
								public release(): void;
								public resetAndGetFirstSegment(): native.Array<number>;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.util.BufferRecycler, param1: number);
								public getCurrentSegmentLength(): number;
								public finishCurrentSegment(): native.Array<number>;
								public flush(): void;
								public constructor(param0: number);
								public appendTwoBytes(param0: number): void;
								public appendThreeBytes(param0: number): void;
								public reset(): void;
								public write(param0: native.Array<number>): void;
								public close(): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.util.BufferRecycler);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module util {
							export class DefaultIndenter extends me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter.NopIndenter {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.util.DefaultIndenter>;
								public static SYS_LF: string;
								public static SYSTEM_LINEFEED_INSTANCE: me.pushy.sdk.lib.jackson.core.util.DefaultIndenter;
								public writeIndentation(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: number): void;
								public constructor(param0: string, param1: string);
								public withIndent(param0: string): me.pushy.sdk.lib.jackson.core.util.DefaultIndenter;
								public getEol(): string;
								public withLinefeed(param0: string): me.pushy.sdk.lib.jackson.core.util.DefaultIndenter;
								public constructor();
								public isInline(): boolean;
								public getIndent(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module util {
							export class DefaultPrettyPrinter extends java.lang.Object {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter>;
								public static DEFAULT_ROOT_VALUE_SEPARATOR: me.pushy.sdk.lib.jackson.core.io.SerializedString;
								public _arrayIndenter: me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter.Indenter;
								public _objectIndenter: me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter.Indenter;
								public _rootSeparator: me.pushy.sdk.lib.jackson.core.SerializableString;
								public _spacesInObjectEntries: boolean;
								public _nesting: number;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.SerializableString);
								public indentArraysWith(param0: me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter.Indenter): void;
								public _withSpaces(param0: boolean): me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter;
								public writeStartArray(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public writeObjectEntrySeparator(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public writeRootValueSeparator(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public withoutSpacesInObjectEntries(): me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter;
								public spacesInObjectEntries(param0: boolean): void;
								public withArrayIndenter(param0: me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter.Indenter): me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter;
								public beforeObjectEntries(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter, param1: me.pushy.sdk.lib.jackson.core.SerializableString);
								public withRootSeparator(param0: string): me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter;
								public writeObjectFieldValueSeparator(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public createInstance(): any;
								public indentObjectsWith(param0: me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter.Indenter): void;
								public constructor();
								public constructor(param0: me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter);
								public writeEndArray(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: number): void;
								public beforeArrayValues(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public writeEndObject(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: number): void;
								public withSpacesInObjectEntries(): me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter;
								public withRootSeparator(param0: me.pushy.sdk.lib.jackson.core.SerializableString): me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter;
								public createInstance(): me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter;
								public constructor(param0: string);
								public writeStartObject(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public withObjectIndenter(param0: me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter.Indenter): me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter;
								public writeArrayValueSeparator(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
							}
							export module DefaultPrettyPrinter {
								export class FixedSpaceIndenter extends me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter.NopIndenter {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter.FixedSpaceIndenter>;
									public static instance: me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter.FixedSpaceIndenter;
									public constructor();
									public writeIndentation(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: number): void;
									public isInline(): boolean;
								}
								export class Indenter {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter.Indenter>;
									/**
									 * Constructs a new instance of the me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter$Indenter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: {
										writeIndentation(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: number): void;
										isInline(): boolean;
									});
									public constructor();
									public writeIndentation(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: number): void;
									public isInline(): boolean;
								}
								export class NopIndenter extends me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter.Indenter {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter.NopIndenter>;
									public static instance: me.pushy.sdk.lib.jackson.core.util.DefaultPrettyPrinter.NopIndenter;
									public constructor();
									public writeIndentation(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: number): void;
									public isInline(): boolean;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module util {
							export class Instantiatable<T>  extends java.lang.Object {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.util.Instantiatable<any>>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.core.util.Instantiatable<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									createInstance(): T;
								});
								public constructor();
								public createInstance(): T;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module util {
							export class InternCache extends java.util.concurrent.ConcurrentHashMap<string,string> {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.util.InternCache>;
								public static instance: me.pushy.sdk.lib.jackson.core.util.InternCache;
								public intern(param0: string): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module util {
							export class JsonGeneratorDelegate extends me.pushy.sdk.lib.jackson.core.JsonGenerator {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.util.JsonGeneratorDelegate>;
								public delegate: me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public delegateCopyMethods: boolean;
								public writeBinary(param0: java.io.InputStream, param1: number): number;
								public overrideStdFeatures(param0: number, param1: number): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public writeStartObject(): void;
								public writeEmbeddedObject(param0: any): void;
								public writeString(param0: string): void;
								public useDefaultPrettyPrinter(): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public getPrettyPrinter(): me.pushy.sdk.lib.jackson.core.PrettyPrinter;
								public flush(): void;
								public enable(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public getCharacterEscapes(): me.pushy.sdk.lib.jackson.core.io.CharacterEscapes;
								public writeRawValue(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public writeArray(param0: native.Array<number>, param1: number, param2: number): void;
								public writeNumber(param0: java.math.BigDecimal): void;
								public writeRaw(param0: native.Array<string>, param1: number, param2: number): void;
								public copyCurrentEvent(param0: me.pushy.sdk.lib.jackson.core.JsonParser): void;
								public getDelegate(): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public writeRaw(param0: string, param1: number, param2: number): void;
								public writeFieldName(param0: string): void;
								public overrideFormatFeatures(param0: number, param1: number): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public setHighestNonEscapedChar(param0: number): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public constructor();
								public writeNumber(param0: string): void;
								public getOutputBuffered(): number;
								public canUseSchema(param0: me.pushy.sdk.lib.jackson.core.FormatSchema): boolean;
								public writeRawValue(param0: string): void;
								public copyCurrentStructure(param0: me.pushy.sdk.lib.jackson.core.JsonParser): void;
								public writeObject(param0: any): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator);
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public writeNumber(param0: number): void;
								public setCharacterEscapes(param0: me.pushy.sdk.lib.jackson.core.io.CharacterEscapes): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public writeFieldName(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public writeString(param0: native.Array<string>, param1: number, param2: number): void;
								public canWriteTypeId(): boolean;
								public getOutputTarget(): any;
								public close(): void;
								public disable(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public writeEndArray(): void;
								public writeRawUTF8String(param0: native.Array<number>, param1: number, param2: number): void;
								public getOutputContext(): me.pushy.sdk.lib.jackson.core.JsonStreamContext;
								public writeBinary(param0: native.Array<number>): void;
								public setFeatureMask(param0: number): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public writeRaw(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public writeRaw(param0: string): void;
								public writeRawValue(param0: string, param1: number, param2: number): void;
								public writeBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.InputStream, param2: number): number;
								public canOmitFields(): boolean;
								public setRootValueSeparator(param0: me.pushy.sdk.lib.jackson.core.SerializableString): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public getSchema(): me.pushy.sdk.lib.jackson.core.FormatSchema;
								public writeBoolean(param0: boolean): void;
								public setSchema(param0: me.pushy.sdk.lib.jackson.core.FormatSchema): void;
								public writeStartArray(): void;
								public getCodec(): me.pushy.sdk.lib.jackson.core.ObjectCodec;
								public getFeatureMask(): number;
								public setPrettyPrinter(param0: me.pushy.sdk.lib.jackson.core.PrettyPrinter): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public writeStartArray(param0: number): void;
								public writeFieldId(param0: number): void;
								public writeBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: native.Array<number>, param2: number, param3: number): void;
								public writeBinary(param0: native.Array<number>, param1: number, param2: number): void;
								public writeTypeId(param0: any): void;
								public writeString(param0: java.io.Reader, param1: number): void;
								public writeObjectId(param0: any): void;
								public getCurrentValue(): any;
								public writeOmittedField(param0: string): void;
								public canWriteObjectId(): boolean;
								public getHighestEscapedChar(): number;
								public setCurrentValue(param0: any): void;
								public setCodec(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public writeObjectRef(param0: any): void;
								public writeStartObject(param0: any): void;
								public writeString(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public writeNumber(param0: java.math.BigInteger): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: boolean);
								public writeTree(param0: me.pushy.sdk.lib.jackson.core.TreeNode): void;
								public isClosed(): boolean;
								public writeEndObject(): void;
								public writeRawValue(param0: native.Array<string>, param1: number, param2: number): void;
								public isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): boolean;
								public canWriteBinaryNatively(): boolean;
								public writeNull(): void;
								public writeUTF8String(param0: native.Array<number>, param1: number, param2: number): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module util {
							export class JsonParserDelegate extends me.pushy.sdk.lib.jackson.core.JsonParser {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.util.JsonParserDelegate>;
								public delegate: me.pushy.sdk.lib.jackson.core.JsonParser;
								public getBinaryValue(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): native.Array<number>;
								public getDecimalValue(): java.math.BigDecimal;
								public getShortValue(): number;
								public nextToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public getLongValue(): number;
								public getObjectId(): any;
								public disable(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature): me.pushy.sdk.lib.jackson.core.JsonParser;
								public hasCurrentToken(): boolean;
								public enable(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature): me.pushy.sdk.lib.jackson.core.JsonParser;
								public getValueAsInt(): number;
								public overrideFormatFeatures(param0: number, param1: number): me.pushy.sdk.lib.jackson.core.JsonParser;
								public getCurrentTokenId(): number;
								public readBinaryValue(param0: java.io.OutputStream): number;
								public currentTokenId(): number;
								public getText(param0: java.io.Writer): number;
								public getDoubleValue(): number;
								public getValueAsDouble(): number;
								public isExpectedStartObjectToken(): boolean;
								public getTextOffset(): number;
								public getByteValue(): number;
								public getValueAsInt(param0: number): number;
								public getValueAsLong(param0: number): number;
								public clearCurrentToken(): void;
								public canReadTypeId(): boolean;
								public getEmbeddedObject(): any;
								public requiresCustomCodec(): boolean;
								public currentToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public constructor();
								public canUseSchema(param0: me.pushy.sdk.lib.jackson.core.FormatSchema): boolean;
								public getIntValue(): number;
								public getBooleanValue(): boolean;
								public getValueAsBoolean(): boolean;
								public skipChildren(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public constructor(param0: number);
								public getNumberValue(): java.lang.Number;
								public getParsingContext(): me.pushy.sdk.lib.jackson.core.JsonStreamContext;
								public getTextLength(): number;
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public getCurrentToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public getValueAsDouble(param0: number): number;
								public close(): void;
								public getCurrentLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
								public getNumberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public getTokenLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
								public setFeatureMask(param0: number): me.pushy.sdk.lib.jackson.core.JsonParser;
								public getSchema(): me.pushy.sdk.lib.jackson.core.FormatSchema;
								public setSchema(param0: me.pushy.sdk.lib.jackson.core.FormatSchema): void;
								public getCodec(): me.pushy.sdk.lib.jackson.core.ObjectCodec;
								public overrideCurrentName(param0: string): void;
								public getFeatureMask(): number;
								public getText(): string;
								public getTypeId(): any;
								public finishToken(): void;
								public setCodec(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): void;
								public getValueAsString(): string;
								public getFloatValue(): number;
								public isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature): boolean;
								public getInputSource(): any;
								public getCurrentName(): string;
								public isExpectedStartArrayToken(): boolean;
								public getCurrentValue(): any;
								public getBinaryValue(): native.Array<number>;
								public hasTextCharacters(): boolean;
								public hasToken(param0: me.pushy.sdk.lib.jackson.core.JsonToken): boolean;
								public getValueAsBoolean(param0: boolean): boolean;
								public nextValue(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public setCurrentValue(param0: any): void;
								public getValueAsString(param0: string): string;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser);
								public getLastClearedToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public readBinaryValue(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.OutputStream): number;
								public isNaN(): boolean;
								public isClosed(): boolean;
								public getValueAsLong(): number;
								public overrideStdFeatures(param0: number, param1: number): me.pushy.sdk.lib.jackson.core.JsonParser;
								public getBigIntegerValue(): java.math.BigInteger;
								public canReadObjectId(): boolean;
								public getTextCharacters(): native.Array<string>;
								public hasTokenId(param0: number): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module util {
							export class JsonParserSequence extends me.pushy.sdk.lib.jackson.core.util.JsonParserDelegate {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.util.JsonParserSequence>;
								public _parsers: native.Array<me.pushy.sdk.lib.jackson.core.JsonParser>;
								public _checkForExistingToken: boolean;
								public _nextParserIndex: number;
								public _hasToken: boolean;
								public static createFlattened(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.core.JsonParser): me.pushy.sdk.lib.jackson.core.util.JsonParserSequence;
								public nextToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public constructor();
								public containedParsersCount(): number;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser);
								public switchAndReturnNext(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public constructor(param0: number);
								public constructor(param0: native.Array<me.pushy.sdk.lib.jackson.core.JsonParser>);
								public constructor(param0: boolean, param1: native.Array<me.pushy.sdk.lib.jackson.core.JsonParser>);
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public static createFlattened(param0: boolean, param1: me.pushy.sdk.lib.jackson.core.JsonParser, param2: me.pushy.sdk.lib.jackson.core.JsonParser): me.pushy.sdk.lib.jackson.core.util.JsonParserSequence;
								public switchToNext(): boolean;
								public addFlattenedActiveParsers(param0: java.util.List<me.pushy.sdk.lib.jackson.core.JsonParser>): void;
								public close(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module util {
							export class MinimalPrettyPrinter extends me.pushy.sdk.lib.jackson.core.PrettyPrinter {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.util.MinimalPrettyPrinter>;
								public static DEFAULT_ROOT_VALUE_SEPARATOR: string;
								public _rootValueSeparator: string;
								public writeStartArray(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public constructor();
								public writeObjectEntrySeparator(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public writeRootValueSeparator(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public writeEndArray(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: number): void;
								public beforeObjectEntries(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public beforeArrayValues(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public setRootValueSeparator(param0: string): void;
								public writeEndObject(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: number): void;
								public constructor(param0: string);
								public writeStartObject(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public writeObjectFieldValueSeparator(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public writeArrayValueSeparator(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module util {
							export class RequestPayload {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.util.RequestPayload>;
								public _payloadAsBytes: native.Array<number>;
								public _payloadAsText: string;
								public _charset: string;
								public constructor(param0: native.Array<number>, param1: string);
								public toString(): string;
								public getRawPayload(): any;
								public constructor(param0: string);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module util {
							export class TextBuffer {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.util.TextBuffer>;
								public getTextBuffer(): native.Array<string>;
								public toString(): string;
								public size(): number;
								public releaseBuffers(): void;
								public ensureNotShared(): void;
								public emptyAndGetCurrentSegment(): native.Array<string>;
								public expandCurrentSegment(param0: number): native.Array<string>;
								public hasTextAsCharacters(): boolean;
								public resetWithString(param0: string): void;
								public expandCurrentSegment(): native.Array<string>;
								public append(param0: string): void;
								public setCurrentLength(param0: number): void;
								public contentsToWriter(param0: java.io.Writer): number;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.util.BufferRecycler);
								public getTextOffset(): number;
								public contentsAsString(): string;
								public resetWithEmpty(): void;
								public append(param0: string, param1: number, param2: number): void;
								public append(param0: native.Array<string>, param1: number, param2: number): void;
								public finishCurrentSegment(): native.Array<string>;
								public resetWithCopy(param0: native.Array<string>, param1: number, param2: number): void;
								public contentsAsDouble(): number;
								public resetWithShared(param0: native.Array<string>, param1: number, param2: number): void;
								public contentsAsArray(): native.Array<string>;
								public getCurrentSegment(): native.Array<string>;
								public contentsAsDecimal(): java.math.BigDecimal;
								public getCurrentSegmentSize(): number;
								public setCurrentAndReturn(param0: number): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module core {
						export module util {
							export class VersionUtil {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.core.util.VersionUtil>;
								public static parseVersionPart(param0: string): number;
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public static parseVersion(param0: string, param1: string, param2: string): me.pushy.sdk.lib.jackson.core.Version;
								public static versionFor(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.core.Version;
								public constructor();
								public static packageVersionFor(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.core.Version;
								public static mavenVersionFor(param0: java.lang.ClassLoader, param1: string, param2: string): me.pushy.sdk.lib.jackson.core.Version;
								public static throwInternal(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export abstract class AbstractTypeResolver {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.AbstractTypeResolver>;
							public constructor();
							public findTypeMapping(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
							public resolveAbstractType(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JavaType;
							public resolveAbstractType(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export abstract class AnnotationIntrospector extends me.pushy.sdk.lib.jackson.core.Versioned {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector>;
							public findPropertiesToIgnore(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: boolean): native.Array<string>;
							public findNamingStrategy(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): any;
							public findPropertiesToIgnore(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): native.Array<string>;
							public findKeyDeserializer(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
							public findDeserializationContentType(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.databind.JavaType): java.lang.Class<any>;
							public findSetterInfo(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value;
							public findDeserializer(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
							public findViews(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): native.Array<java.lang.Class<any>>;
							public findMergeInfo(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Boolean;
							public findObjectIdInfo(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo;
							public findPOJOBuilderConfig(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): me.pushy.sdk.lib.jackson.databind.annotation.JsonPOJOBuilder.Value;
							public _hasOneOf(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: native.Array<java.lang.Class<any>>): boolean;
							public findInjectableValueId(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): any;
							public static nopInstance(): me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector;
							public findSubtypes(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.util.List<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>;
							public findImplicitPropertyName(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): string;
							public hasAnyGetterAnnotation(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
							public findSerializationInclusionForContent(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
							public hasCreatorAnnotation(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): boolean;
							public findSerializationKeyType(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.databind.JavaType): java.lang.Class<any>;
							public refineSerializationType(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
							public findSerializationContentConverter(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): any;
							public findSerializationInclusion(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
							public findWrapperName(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.PropertyName;
							public findNameForDeserialization(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.PropertyName;
							public findValueInstantiator(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): any;
							public findPropertyIgnorals(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
							public hasAnySetterAnnotation(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
							public findSerializationConverter(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
							public findPropertyTypeResolver(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>;
							public findSerializationTyping(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize.Typing;
							public findDeserializationType(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.databind.JavaType): java.lang.Class<any>;
							public findAutoDetectVisibility(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass, param1: me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>): me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>;
							public findUnwrappingNameTransformer(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.databind.util.NameTransformer;
							public resolveSetterConflict(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
							public static pair(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector, param1: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector;
							public _findAnnotation(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: java.lang.Class): java.lang.annotation.Annotation;
							public hasAnyGetter(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Boolean;
							public findPropertyDescription(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): string;
							public findDeserializationKeyType(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.databind.JavaType): java.lang.Class<any>;
							public findAndAddVirtualProperties(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass, param2: java.util.List<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>): void;
							public findSerializer(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
							public findSerializationSortAlphabetically(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Boolean;
							public findRootName(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): me.pushy.sdk.lib.jackson.databind.PropertyName;
							public findClassDescription(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): string;
							public findPropertyDefaultValue(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): string;
							public findEnumValues(param0: java.lang.Class<any>, param1: native.Array<java.lang.Enum<any>>, param2: native.Array<string>): native.Array<string>;
							public findPropertyAccess(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.annotation.JsonProperty.Access;
							public findKeySerializer(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
							public findNameForSerialization(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.PropertyName;
							public isTypeId(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): java.lang.Boolean;
							public findDefaultEnumValue(param0: java.lang.Class<java.lang.Enum<any>>): java.lang.Enum<any>;
							public findCreatorBinding(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.annotation.JsonCreator.Mode;
							public findReferenceType(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector.ReferenceProperty;
							public hasRequiredMarker(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): java.lang.Boolean;
							public findFilterId(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
							public hasAsValue(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Boolean;
							public findDeserializationContentConverter(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): any;
							public findNullSerializer(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
							public findSerializationPropertyOrder(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): native.Array<string>;
							public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
							public allIntrospectors(param0: java.util.Collection<me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector>): java.util.Collection<me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector>;
							public findFormat(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
							public findTypeName(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): string;
							public findCreatorAnnotation(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.annotation.JsonCreator.Mode;
							public hasIgnoreMarker(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): boolean;
							public constructor();
							public findPropertyIndex(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Integer;
							public _hasAnnotation(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: java.lang.Class<any>): boolean;
							public findSerializationContentType(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.databind.JavaType): java.lang.Class<any>;
							public findSerializationType(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Class<any>;
							public findEnumValue(param0: java.lang.Enum<any>): string;
							public refineDeserializationType(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
							public hasAnySetter(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Boolean;
							public allIntrospectors(): java.util.Collection<me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector>;
							public hasAsValueAnnotation(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
							public findDeserializationConverter(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
							public isAnnotationBundle(param0: java.lang.annotation.Annotation): boolean;
							public findTypeResolver(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>;
							public findContentSerializer(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
							public isIgnorableType(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): java.lang.Boolean;
							public findInjectableValue(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.annotation.JacksonInject.Value;
							public findContentDeserializer(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
							public findObjectReferenceInfo(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo): me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo;
							public version(): me.pushy.sdk.lib.jackson.core.Version;
							public findPropertyContentTypeResolver(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>;
							public findIgnoreUnknownProperties(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): java.lang.Boolean;
							public findPropertyAliases(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
							public findPOJOBuilder(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): java.lang.Class<any>;
						}
						export module AnnotationIntrospector {
							export class ReferenceProperty {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector.ReferenceProperty>;
								public static back(param0: string): me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector.ReferenceProperty;
								public isBackReference(): boolean;
								public static managed(param0: string): me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector.ReferenceProperty;
								public getName(): string;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector.ReferenceProperty.Type, param1: string);
								public getType(): me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector.ReferenceProperty.Type;
								public isManagedReference(): boolean;
							}
							export module ReferenceProperty {
								export class Type {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector.ReferenceProperty.Type>;
									public static MANAGED_REFERENCE: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector.ReferenceProperty.Type;
									public static BACK_REFERENCE: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector.ReferenceProperty.Type;
									public static valueOf(param0: string): me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector.ReferenceProperty.Type;
									public static values(): native.Array<me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector.ReferenceProperty.Type>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export abstract class BeanDescription {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.BeanDescription>;
							public _type: me.pushy.sdk.lib.jackson.databind.JavaType;
							public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							public findExpectedFormat(param0: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
							public bindingsForBeanType(): me.pushy.sdk.lib.jackson.databind.type.TypeBindings;
							public findDeserializationConverter(): me.pushy.sdk.lib.jackson.databind.util.Converter<any,any>;
							public findPOJOBuilder(): java.lang.Class<any>;
							public getFactoryMethods(): java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod>;
							public isNonStaticInnerClass(): boolean;
							public findDefaultConstructor(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedConstructor;
							public resolveType(param0: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JavaType;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
							public instantiateBean(param0: boolean): any;
							public findSerializationConverter(): me.pushy.sdk.lib.jackson.databind.util.Converter<any,any>;
							public findPOJOBuilderConfig(): me.pushy.sdk.lib.jackson.databind.annotation.JsonPOJOBuilder.Value;
							public findBackReferences(): java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition>;
							public findBackReferenceProperties(): java.util.Map<string,me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember>;
							public findMethod(param0: string, param1: native.Array<java.lang.Class<any>>): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
							public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
							public hasKnownClassAnnotations(): boolean;
							public findSingleArgConstructor(param0: native.Array<java.lang.Class<any>>): java.lang.reflect.Constructor<any>;
							public findAnySetterField(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
							public findJsonValueAccessor(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
							public findFactoryMethod(param0: native.Array<java.lang.Class<any>>): java.lang.reflect.Method;
							public findAnyGetter(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
							public getObjectIdInfo(): me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo;
							public getIgnoredPropertyNames(): java.util.Set<string>;
							public findAnySetter(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
							public getBeanClass(): java.lang.Class<any>;
							public findInjectables(): java.util.Map<any,me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember>;
							public getConstructors(): java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedConstructor>;
							public getClassInfo(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass;
							public findAnySetterAccessor(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
							public findProperties(): java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition>;
							public findJsonValueMethod(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
							public findClassDescription(): string;
							public getClassAnnotations(): me.pushy.sdk.lib.jackson.databind.util.Annotations;
							public findDefaultViews(): native.Array<java.lang.Class<any>>;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export class BeanProperty extends me.pushy.sdk.lib.jackson.databind.util.Named {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.BeanProperty>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.BeanProperty interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getName(): string;
								getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
								getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
								isRequired(): boolean;
								isVirtual(): boolean;
								getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
								depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								<clinit>(): void;
								getName(): string;
							});
							public constructor();
							public static EMPTY_INCLUDE: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
							public static EMPTY_FORMAT: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
							public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							public isVirtual(): boolean;
							public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
							public isRequired(): boolean;
							public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
							public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
							public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
							public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
							public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
							public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
							public getName(): string;
							public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
							public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
							public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
							public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
						}
						export module BeanProperty {
							export class Bogus extends me.pushy.sdk.lib.jackson.databind.BeanProperty {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.BeanProperty.Bogus>;
								public isRequired(): boolean;
								public isVirtual(): boolean;
								public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public getName(): string;
								public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								public constructor();
								public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
								public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
								public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
							export class Std extends me.pushy.sdk.lib.jackson.databind.BeanProperty {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.BeanProperty.Std>;
								public _name: me.pushy.sdk.lib.jackson.databind.PropertyName;
								public _type: me.pushy.sdk.lib.jackson.databind.JavaType;
								public _wrapperName: me.pushy.sdk.lib.jackson.databind.PropertyName;
								public _metadata: me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
								public _member: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public isRequired(): boolean;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyName, param3: me.pushy.sdk.lib.jackson.databind.util.Annotations, param4: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param5: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
								public isVirtual(): boolean;
								public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								public getName(): string;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty.Std, param1: me.pushy.sdk.lib.jackson.databind.JavaType);
								public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyName, param3: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param4: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
								public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
								public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
								public withType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.BeanProperty.Std;
								public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export abstract class DatabindContext {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.DatabindContext>;
							public constructType(param0: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JavaType;
							public canOverrideAccessModifiers(): boolean;
							public getDefaultPropertyFormat(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.databind.MapperFeature): boolean;
							public _format(param0: string, param1: native.Array<any>): string;
							public getLocale(): java.util.Locale;
							public getTimeZone(): java.util.TimeZone;
							public getAnnotationIntrospector(): me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector;
							public _truncate(param0: string): string;
							public objectIdResolverInstance(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo): me.pushy.sdk.lib.jackson.annotation.ObjectIdResolver;
							public constructor();
							public getConfig(): me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>;
							public reportBadDefinition(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: string): any;
							public reportBadDefinition(param0: java.lang.Class, param1: string): any;
							public setAttribute(param0: any, param1: any): me.pushy.sdk.lib.jackson.databind.DatabindContext;
							public converterInstance(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: any): me.pushy.sdk.lib.jackson.databind.util.Converter<any,any>;
							public getAttribute(param0: any): any;
							public _colonConcat(param0: string, param1: string): string;
							public _desc(param0: string): string;
							public _calcName(param0: java.lang.Class<any>): string;
							public objectIdGeneratorInstance(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>;
							public getTypeFactory(): me.pushy.sdk.lib.jackson.databind.type.TypeFactory;
							public _quotedString(param0: string): string;
							public getActiveView(): java.lang.Class<any>;
							public constructSpecializedType(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export class DeserializationConfig extends me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<me.pushy.sdk.lib.jackson.databind.DeserializationFeature,me.pushy.sdk.lib.jackson.databind.DeserializationConfig> implements java.io.Serializable  {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.DeserializationConfig>;
							public _problemHandlers: me.pushy.sdk.lib.jackson.databind.util.LinkedNode<me.pushy.sdk.lib.jackson.databind.deser.DeserializationProblemHandler>;
							public _nodeFactory: me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory;
							public _deserFeatures: number;
							public _parserFeatures: number;
							public _parserFeaturesToChange: number;
							public _formatReadFeatures: number;
							public _formatReadFeaturesToChange: number;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>);
							public getBaseSettings(): me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings;
							public hasSomeOfFeatures(param0: number): boolean;
							public with(param0: me.pushy.sdk.lib.jackson.databind.cfg.HandlerInstantiator): any;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.introspect.SimpleMixInResolver, param2: me.pushy.sdk.lib.jackson.databind.util.RootNameLookup, param3: me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverrides);
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings, param1: number);
							public _withBase(param0: me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings): any;
							public withNoProblemHandlers(): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public without(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.databind.DeserializationFeature): boolean;
							public withView(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings);
							public introspect(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.BeanDescription;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: java.lang.Class<any>);
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes);
							public with(param0: me.pushy.sdk.lib.jackson.databind.DeserializationFeature, param1: native.Array<me.pushy.sdk.lib.jackson.databind.DeserializationFeature>): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public getNodeFactory(): me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes);
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings);
							public with(param0: me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public withoutFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.core.JsonParser.Feature>): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public with(param0: me.pushy.sdk.lib.jackson.databind.MapperFeature, param1: boolean): any;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings, param1: me.pushy.sdk.lib.jackson.databind.jsontype.SubtypeResolver, param2: me.pushy.sdk.lib.jackson.databind.introspect.SimpleMixInResolver, param3: me.pushy.sdk.lib.jackson.databind.util.RootNameLookup, param4: me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverrides);
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.introspect.SimpleMixInResolver);
							public with(param0: native.Array<me.pushy.sdk.lib.jackson.databind.MapperFeature>): any;
							public _withBase(param0: me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public withRootName(param0: string): any;
							public withoutFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.core.FormatFeature>): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public _withMapperFeatures(param0: number): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public with(param0: me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public with(param0: me.pushy.sdk.lib.jackson.databind.jsontype.SubtypeResolver): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public with(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): any;
							public findTypeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
							public without(param0: me.pushy.sdk.lib.jackson.databind.DeserializationFeature): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public _withMapperFeatures(param0: number): any;
							public without(param0: me.pushy.sdk.lib.jackson.core.FormatFeature): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public copy(): me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>);
							public withFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.core.FormatFeature>): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public initialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser): void;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.databind.MapperFeature): boolean;
							public withHandler(param0: me.pushy.sdk.lib.jackson.databind.deser.DeserializationProblemHandler): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public useRootWrapping(): boolean;
							public findMixInClassFor(param0: java.lang.Class<any>): java.lang.Class<any>;
							public with(param0: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector): any;
							public introspectForCreation(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.BeanDescription;
							public withView(param0: java.lang.Class<any>): any;
							public with(param0: me.pushy.sdk.lib.jackson.databind.DeserializationFeature): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public hasDeserializationFeatures(param0: number): boolean;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: number);
							public with(param0: me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy): any;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.SimpleMixInResolver, param2: me.pushy.sdk.lib.jackson.databind.util.RootNameLookup, param3: me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverrides);
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: number);
							public without(param0: me.pushy.sdk.lib.jackson.databind.DeserializationFeature, param1: native.Array<me.pushy.sdk.lib.jackson.databind.DeserializationFeature>): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature, param1: me.pushy.sdk.lib.jackson.core.JsonFactory): boolean;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: me.pushy.sdk.lib.jackson.databind.jsontype.SubtypeResolver);
							public getDeserializationFeatures(): number;
							public withRootName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): any;
							public with(param0: me.pushy.sdk.lib.jackson.databind.jsontype.SubtypeResolver): any;
							public without(param0: native.Array<me.pushy.sdk.lib.jackson.databind.MapperFeature>): any;
							public introspectForBuilder(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.BeanDescription;
							public withFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.databind.DeserializationFeature>): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
							public with(param0: java.util.Locale): any;
							public withFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.core.JsonParser.Feature>): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public with(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): any;
							public with(param0: me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes): any;
							public with(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public with(param0: java.util.TimeZone): any;
							public with(param0: me.pushy.sdk.lib.jackson.core.FormatFeature): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public with(param0: me.pushy.sdk.lib.jackson.databind.type.TypeFactory): any;
							public withoutFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.databind.DeserializationFeature>): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public with(param0: java.text.DateFormat): any;
							public withRootName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.SimpleMixInResolver);
							public with(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>): any;
							public getProblemHandlers(): me.pushy.sdk.lib.jackson.databind.util.LinkedNode<me.pushy.sdk.lib.jackson.databind.deser.DeserializationProblemHandler>;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export abstract class DeserializationContext extends me.pushy.sdk.lib.jackson.databind.DatabindContext {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.DeserializationContext>;
							public _cache: me.pushy.sdk.lib.jackson.databind.deser.DeserializerCache;
							public _factory: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory;
							public _config: me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public _featureFlags: number;
							public _view: java.lang.Class<any>;
							public _parser: me.pushy.sdk.lib.jackson.core.JsonParser;
							public _injectableValues: me.pushy.sdk.lib.jackson.databind.InjectableValues;
							public _arrayBuilders: me.pushy.sdk.lib.jackson.databind.util.ArrayBuilders;
							public _objectBuffer: me.pushy.sdk.lib.jackson.databind.util.ObjectBuffer;
							public _dateFormat: java.text.DateFormat;
							public _attributes: me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes;
							public _currentType: me.pushy.sdk.lib.jackson.databind.util.LinkedNode<me.pushy.sdk.lib.jackson.databind.JavaType>;
							public getFactory(): me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory;
							public findInjectableValue(param0: any, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: any): any;
							public canOverrideAccessModifiers(): boolean;
							public checkUnresolvedObjectId(): void;
							public reportMappingException(param0: string, param1: native.Array<any>): void;
							public getDateFormat(): java.text.DateFormat;
							public hasSomeOfFeatures(param0: number): boolean;
							public handleMissingTypeId(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver, param2: string): me.pushy.sdk.lib.jackson.databind.JavaType;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.core.JsonParser, param3: me.pushy.sdk.lib.jackson.databind.InjectableValues);
							public reportInputMismatch(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: string, param2: native.Array<any>): any;
							public getTimeZone(): java.util.TimeZone;
							public reportBadTypeDefinition(param0: me.pushy.sdk.lib.jackson.databind.BeanDescription, param1: string, param2: native.Array<any>): any;
							public mappingException(param0: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public deserializerInstance(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: any): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.databind.DeserializationFeature): boolean;
							public parseDate(param0: string): java.util.Date;
							public keyDeserializerInstance(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: any): me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
							public handleSecondaryContextualization(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							public handleWeirdKey(param0: java.lang.Class<any>, param1: string, param2: string, param3: native.Array<any>): any;
							public findKeyDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
							public getArrayBuilders(): me.pushy.sdk.lib.jackson.databind.util.ArrayBuilders;
							public constructCalendar(param0: java.util.Date): java.util.Calendar;
							public mappingException(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public reportWrongTokenException(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param1: me.pushy.sdk.lib.jackson.core.JsonToken, param2: string, param3: native.Array<any>): void;
							public getNodeFactory(): me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory;
							public readPropertyValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Class): any;
							public reportWrongTokenException(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.core.JsonToken, param2: string, param3: native.Array<any>): void;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext);
							public handleInstantiationProblem(param0: java.lang.Class<any>, param1: any, param2: java.lang.Throwable): any;
							public reportInputMismatch(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: string, param2: native.Array<any>): any;
							public reportBadDefinition(param0: java.lang.Class, param1: string): any;
							public reportMissingContent(param0: string, param1: native.Array<any>): void;
							public setAttribute(param0: any, param1: any): me.pushy.sdk.lib.jackson.databind.DatabindContext;
							public instantiationException(param0: java.lang.Class<any>, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public unknownTypeException(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: string, param2: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public findObjectId(param0: any, param1: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>, param2: me.pushy.sdk.lib.jackson.annotation.ObjectIdResolver): me.pushy.sdk.lib.jackson.databind.deser.impl.ReadableObjectId;
							public findClass(param0: string): java.lang.Class<any>;
							public setAttribute(param0: any, param1: any): me.pushy.sdk.lib.jackson.databind.DeserializationContext;
							public handleWeirdNumberValue(param0: java.lang.Class<any>, param1: java.lang.Number, param2: string, param3: native.Array<any>): any;
							public getContextualType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							public wrongTokenException(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.core.JsonToken, param3: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public constructType(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
							public wrongTokenException(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.core.JsonToken, param2: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public getConfig(): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public reportUnknownProperty(param0: any, param1: string, param2: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): void;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory, param1: me.pushy.sdk.lib.jackson.databind.deser.DeserializerCache);
							public handleUnexpectedToken(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.core.JsonParser): any;
							public findContextualValueDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							public getBase64Variant(): me.pushy.sdk.lib.jackson.core.Base64Variant;
							public weirdNumberException(param0: java.lang.Number, param1: java.lang.Class<any>, param2: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public constructType(param0: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JavaType;
							public getParser(): me.pushy.sdk.lib.jackson.core.JsonParser;
							public reportInputMismatch(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param1: string, param2: native.Array<any>): any;
							public readPropertyValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.JavaType): any;
							public getDefaultPropertyFormat(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
							public findRootValueDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							public reportInputMismatch(param0: java.lang.Class, param1: string, param2: native.Array<any>): any;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.databind.MapperFeature): boolean;
							public mappingException(param0: string, param1: native.Array<any>): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public getLocale(): java.util.Locale;
							public reportBadMerge(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): any;
							public weirdKeyException(param0: java.lang.Class<any>, param1: string, param2: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public handleUnknownProperty(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: any, param3: string): boolean;
							public reportBadPropertyDefinition(param0: me.pushy.sdk.lib.jackson.databind.BeanDescription, param1: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param2: string, param3: native.Array<any>): any;
							public getAnnotationIntrospector(): me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector;
							public hasDeserializationFeatures(param0: number): boolean;
							public missingTypeIdException(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public reportUnresolvedObjectId(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader, param1: any): any;
							public handlePrimaryContextualization(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							public instantiationException(param0: java.lang.Class<any>, param1: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public readValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: java.lang.Class): any;
							public reportWrongTokenException(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.core.JsonToken, param2: string, param3: native.Array<any>): void;
							public constructor();
							public getDeserializationFeatures(): number;
							public findNonContextualValueDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							public handleMissingInstantiator(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator, param2: me.pushy.sdk.lib.jackson.core.JsonParser, param3: string, param4: native.Array<any>): any;
							public getConfig(): me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>;
							public reportBadDefinition(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: string): any;
							public returnObjectBuffer(param0: me.pushy.sdk.lib.jackson.databind.util.ObjectBuffer): void;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory);
							public hasValueDeserializerFor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: java.util.concurrent.atomic.AtomicReference<java.lang.Throwable>): boolean;
							public mappingException(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.core.JsonToken): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public weirdStringException(param0: string, param1: java.lang.Class<any>, param2: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public getAttribute(param0: any): any;
							public wrongTokenException(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.core.JsonToken, param3: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public handleWeirdStringValue(param0: java.lang.Class<any>, param1: string, param2: string, param3: native.Array<any>): any;
							public endOfInputException(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory);
							public handleUnknownTypeId(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: string, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver, param3: string): me.pushy.sdk.lib.jackson.databind.JavaType;
							public reportWrongTokenException(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.core.JsonToken, param2: string, param3: native.Array<any>): void;
							public readValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.JavaType): any;
							public getTypeFactory(): me.pushy.sdk.lib.jackson.databind.type.TypeFactory;
							public handleUnexpectedToken(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.core.JsonToken, param2: me.pushy.sdk.lib.jackson.core.JsonParser, param3: string, param4: native.Array<any>): any;
							public unknownTypeIdException(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: string, param2: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public getActiveView(): java.lang.Class<any>;
							public leaseObjectBuffer(): me.pushy.sdk.lib.jackson.databind.util.ObjectBuffer;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export class DeserializationFeature extends me.pushy.sdk.lib.jackson.databind.cfg.ConfigFeature {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.DeserializationFeature>;
							public static USE_BIG_DECIMAL_FOR_FLOATS: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static USE_BIG_INTEGER_FOR_INTS: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static USE_LONG_FOR_INTS: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static USE_JAVA_ARRAY_FOR_JSON_ARRAY: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static FAIL_ON_UNKNOWN_PROPERTIES: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static FAIL_ON_NULL_FOR_PRIMITIVES: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static FAIL_ON_NUMBERS_FOR_ENUMS: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static FAIL_ON_INVALID_SUBTYPE: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static FAIL_ON_READING_DUP_TREE_KEY: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static FAIL_ON_IGNORED_PROPERTIES: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static FAIL_ON_UNRESOLVED_OBJECT_IDS: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static FAIL_ON_MISSING_CREATOR_PROPERTIES: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static FAIL_ON_NULL_CREATOR_PROPERTIES: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static WRAP_EXCEPTIONS: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static ACCEPT_SINGLE_VALUE_AS_ARRAY: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static UNWRAP_SINGLE_VALUE_ARRAYS: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static UNWRAP_ROOT_VALUE: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static ACCEPT_EMPTY_STRING_AS_NULL_OBJECT: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static ACCEPT_FLOAT_AS_INT: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static READ_ENUMS_USING_TO_STRING: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static READ_UNKNOWN_ENUM_VALUES_AS_NULL: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static READ_UNKNOWN_ENUM_VALUES_USING_DEFAULT_VALUE: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static READ_DATE_TIMESTAMPS_AS_NANOSECONDS: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static ADJUST_DATES_TO_CONTEXT_TIME_ZONE: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public static EAGER_DESERIALIZER_FETCH: me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public getMask(): number;
							public enabledIn(param0: number): boolean;
							public static values(): native.Array<me.pushy.sdk.lib.jackson.databind.DeserializationFeature>;
							public static valueOf(param0: string): me.pushy.sdk.lib.jackson.databind.DeserializationFeature;
							public enabledByDefault(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export abstract class InjectableValues {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.InjectableValues>;
							public constructor();
							public findInjectableValue(param0: any, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.BeanProperty, param3: any): any;
						}
						export module InjectableValues {
							export class Std extends me.pushy.sdk.lib.jackson.databind.InjectableValues {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.InjectableValues.Std>;
								public _values: java.util.Map<string,any>;
								public addValue(param0: java.lang.Class<any>, param1: any): me.pushy.sdk.lib.jackson.databind.InjectableValues.Std;
								public addValue(param0: string, param1: any): me.pushy.sdk.lib.jackson.databind.InjectableValues.Std;
								public findInjectableValue(param0: any, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.BeanProperty, param3: any): any;
								public constructor();
								public constructor(param0: java.util.Map<string,any>);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export abstract class JavaType extends me.pushy.sdk.lib.jackson.core.type.ResolvedType {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.JavaType>;
							public _class: java.lang.Class<any>;
							public _hash: number;
							public _valueHandler: any;
							public _typeHandler: any;
							public _asStatic: boolean;
							public isConcrete(): boolean;
							public containedTypeName(param0: number): string;
							public findSuperType(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
							public withContentType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
							public isArrayType(): boolean;
							public isEnumType(): boolean;
							public getContentTypeHandler(): any;
							public getRawClass(): java.lang.Class<any>;
							public containedTypeOrUnknown(param0: number): me.pushy.sdk.lib.jackson.databind.JavaType;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
							public _narrow(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
							public isCollectionLikeType(): boolean;
							public hasRawClass(param0: java.lang.Class<any>): boolean;
							public getParameterSource(): java.lang.Class<any>;
							public withStaticTyping(): me.pushy.sdk.lib.jackson.databind.JavaType;
							public withHandlersFrom(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
							public useStaticType(): boolean;
							public getErasedSignature(param0: java.lang.StringBuilder): java.lang.StringBuilder;
							public withTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
							public getKeyType(): me.pushy.sdk.lib.jackson.core.type.ResolvedType;
							public isInterface(): boolean;
							public withContentTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
							public isPrimitive(): boolean;
							public getBindings(): me.pushy.sdk.lib.jackson.databind.type.TypeBindings;
							public withContentValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
							public getContentType(): me.pushy.sdk.lib.jackson.core.type.ResolvedType;
							public getGenericSignature(): string;
							public constructor(param0: java.lang.Class<any>, param1: number, param2: any, param3: any, param4: boolean);
							public refine(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>): me.pushy.sdk.lib.jackson.databind.JavaType;
							public equals(param0: any): boolean;
							public getContentType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							public isTypeOrSubTypeOf(param0: java.lang.Class<any>): boolean;
							public hashCode(): number;
							public containedType(param0: number): me.pushy.sdk.lib.jackson.databind.JavaType;
							public isJavaLangObject(): boolean;
							public toString(): string;
							public withValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
							public forcedNarrowBy(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
							public isContainerType(): boolean;
							public getValueHandler(): any;
							public getGenericSignature(param0: java.lang.StringBuilder): java.lang.StringBuilder;
							public isThrowable(): boolean;
							public containedTypeCount(): number;
							public isMapLikeType(): boolean;
							public constructor();
							public getTypeHandler(): any;
							public getReferencedType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							public getKeyType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							public getReferencedType(): me.pushy.sdk.lib.jackson.core.type.ResolvedType;
							public isAbstract(): boolean;
							public getSuperClass(): me.pushy.sdk.lib.jackson.databind.JavaType;
							public hasValueHandler(): boolean;
							public getContentValueHandler(): any;
							public hasHandlers(): boolean;
							public getErasedSignature(): string;
							public hasGenericTypes(): boolean;
							public findTypeParameters(param0: java.lang.Class<any>): native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>;
							public getInterfaces(): java.util.List<me.pushy.sdk.lib.jackson.databind.JavaType>;
							public containedType(param0: number): me.pushy.sdk.lib.jackson.core.type.ResolvedType;
							public isFinal(): boolean;
							public hasContentType(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export abstract class JsonDeserializer<T>  extends me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>>;
							public constructor();
							public handledType(): java.lang.Class<any>;
							public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
							public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
							public unwrappingDeserializer(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							public getEmptyAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
							public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
							public getDelegatee(): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							public isCachable(): boolean;
							public replaceDelegatee(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
							public getObjectIdReader(): me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader;
							public getEmptyValue(): any;
							public getKnownPropertyNames(): java.util.Collection<any>;
							public getEmptyValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
							public supportsUpdate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): java.lang.Boolean;
							public getNullValue(): any;
							public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
							public findBackReference(param0: string): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
						}
						export module JsonDeserializer {
							export abstract class None extends me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any> {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.JsonDeserializer.None>;
								public getNullValue(): any;
								public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export class JsonMappingException extends me.pushy.sdk.lib.jackson.core.JsonProcessingException {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.JsonMappingException>;
							public _path: java.util.LinkedList<me.pushy.sdk.lib.jackson.databind.JsonMappingException.Reference>;
							public _processor: java.io.Closeable;
							public static from(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation);
							public static wrapWithPath(param0: java.lang.Throwable, param1: me.pushy.sdk.lib.jackson.databind.JsonMappingException.Reference): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public toString(): string;
							public constructor(param0: string, param1: java.lang.Throwable);
							public _buildMessage(): string;
							public static from(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public constructor(param0: string);
							public static from(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation, param2: java.lang.Throwable);
							public getMessage(): string;
							public constructor(param0: java.io.Closeable, param1: string, param2: java.lang.Throwable);
							public static wrapWithPath(param0: java.lang.Throwable, param1: any, param2: number): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public getPath(): java.util.List<me.pushy.sdk.lib.jackson.databind.JsonMappingException.Reference>;
							public static from(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public _appendPathDesc(param0: java.lang.StringBuilder): void;
							public constructor(param0: java.lang.Throwable);
							public getPathReference(param0: java.lang.StringBuilder): java.lang.StringBuilder;
							public getLocalizedMessage(): string;
							public getPathReference(): string;
							public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public static fromUnexpectedIOE(param0: java.io.IOException): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public prependPath(param0: any, param1: string): void;
							public getProcessor(): any;
							public static from(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public static from(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public prependPath(param0: any, param1: number): void;
							public prependPath(param0: me.pushy.sdk.lib.jackson.databind.JsonMappingException.Reference): void;
							public constructor(param0: java.io.Closeable, param1: string);
							public constructor(param0: java.io.Closeable, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation);
							public static wrapWithPath(param0: java.lang.Throwable, param1: any, param2: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
						}
						export module JsonMappingException {
							export class Reference {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.JsonMappingException.Reference>;
								public _from: any;
								public _fieldName: string;
								public _index: number;
								public _desc: string;
								public constructor(param0: any);
								public getFrom(): any;
								public toString(): string;
								public getFieldName(): string;
								public getDescription(): string;
								public constructor(param0: any, param1: string);
								public constructor();
								public constructor(param0: any, param1: number);
								public getIndex(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export abstract class JsonNode extends me.pushy.sdk.lib.jackson.databind.JsonSerializable.Base {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.JsonNode>;
							public isShort(): boolean;
							public findValues(param0: string, param1: java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>): java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>;
							public shortValue(): number;
							public hasNonNull(param0: string): boolean;
							public traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
							public elements(): java.util.Iterator<me.pushy.sdk.lib.jackson.databind.JsonNode>;
							public fieldNames(): java.util.Iterator<string>;
							public canConvertToLong(): boolean;
							public findParents(param0: string, param1: java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>): java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>;
							public traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
							public booleanValue(): boolean;
							public asBoolean(): boolean;
							public withArray(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public asInt(param0: number): number;
							public findValues(param0: string): java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>;
							public isNull(): boolean;
							public isContainerNode(): boolean;
							public doubleValue(): number;
							public findParent(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public getNodeType(): me.pushy.sdk.lib.jackson.databind.node.JsonNodeType;
							public binaryValue(): native.Array<number>;
							public bigIntegerValue(): java.math.BigInteger;
							public get(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
							public path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
							public isBinary(): boolean;
							public asLong(param0: number): number;
							public path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
							public isNumber(): boolean;
							public asText(): string;
							public decimalValue(): java.math.BigDecimal;
							public findValue(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public fields(): java.util.Iterator<java.util.Map.Entry<string,me.pushy.sdk.lib.jackson.databind.JsonNode>>;
							public deepCopy(): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public asDouble(): number;
							public hasNonNull(param0: number): boolean;
							public get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
							public at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
							public findPath(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public get(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public path(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public at(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public isIntegralNumber(): boolean;
							public asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
							public has(param0: string): boolean;
							public isMissingNode(): boolean;
							public asInt(): number;
							public textValue(): string;
							public isObject(): boolean;
							public isTextual(): boolean;
							public path(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public asText(param0: string): string;
							public isFloatingPointNumber(): boolean;
							public equals(param0: any): boolean;
							public isArray(): boolean;
							public findParents(param0: string): java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>;
							public equals(param0: java.util.Comparator<me.pushy.sdk.lib.jackson.databind.JsonNode>, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): boolean;
							public size(): number;
							public isBoolean(): boolean;
							public isBigInteger(): boolean;
							public findValuesAsText(param0: string, param1: java.util.List<string>): java.util.List<string>;
							public isPojo(): boolean;
							public toString(): string;
							public get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
							public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
							public isInt(): boolean;
							public findValuesAsText(param0: string): java.util.List<string>;
							public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public longValue(): number;
							public numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
							public numberValue(): java.lang.Number;
							public isBigDecimal(): boolean;
							public constructor();
							public asDouble(param0: number): number;
							public asLong(): number;
							public iterator(): java.util.Iterator<me.pushy.sdk.lib.jackson.databind.JsonNode>;
							public isValueNode(): boolean;
							public intValue(): number;
							public with(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
							public isDouble(): boolean;
							public isFloat(): boolean;
							public canConvertToInt(): boolean;
							public floatValue(): number;
							public _at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public isLong(): boolean;
							public asBoolean(param0: boolean): boolean;
							public has(param0: number): boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export class JsonSerializable {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.JsonSerializable>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.JsonSerializable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
							});
							public constructor();
							public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
							public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
						}
						export module JsonSerializable {
							export abstract class Base extends me.pushy.sdk.lib.jackson.databind.JsonSerializable {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.JsonSerializable.Base>;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): boolean;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export abstract class JsonSerializer<T>  extends me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitable {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>>;
							public constructor();
							public handledType(): java.lang.Class<any>;
							public withFilterId(param0: any): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public replaceDelegatee(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public isEmpty(param0: any): boolean;
							public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
							public properties(): java.util.Iterator<me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter>;
							public usesObjectId(): boolean;
							public isUnwrappingSerializer(): boolean;
							public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
							public unwrappingSerializer(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
							public getDelegatee(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
						}
						export module JsonSerializer {
							export abstract class None extends me.pushy.sdk.lib.jackson.databind.JsonSerializer<any> {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.JsonSerializer.None>;
								public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export abstract class KeyDeserializer {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.KeyDeserializer>;
							public constructor();
							public deserializeKey(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
						}
						export module KeyDeserializer {
							export abstract class None extends me.pushy.sdk.lib.jackson.databind.KeyDeserializer {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.KeyDeserializer.None>;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export class MapperFeature extends me.pushy.sdk.lib.jackson.databind.cfg.ConfigFeature {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.MapperFeature>;
							public static USE_ANNOTATIONS: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static USE_GETTERS_AS_SETTERS: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static PROPAGATE_TRANSIENT_MARKER: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static AUTO_DETECT_CREATORS: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static AUTO_DETECT_FIELDS: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static AUTO_DETECT_GETTERS: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static AUTO_DETECT_IS_GETTERS: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static AUTO_DETECT_SETTERS: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static REQUIRE_SETTERS_FOR_GETTERS: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static ALLOW_FINAL_FIELDS_AS_MUTATORS: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static INFER_PROPERTY_MUTATORS: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static INFER_CREATOR_FROM_CONSTRUCTOR_PROPERTIES: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static CAN_OVERRIDE_ACCESS_MODIFIERS: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static OVERRIDE_PUBLIC_ACCESS_MODIFIERS: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static USE_STATIC_TYPING: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static DEFAULT_VIEW_INCLUSION: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static SORT_PROPERTIES_ALPHABETICALLY: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static ACCEPT_CASE_INSENSITIVE_PROPERTIES: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static ACCEPT_CASE_INSENSITIVE_ENUMS: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static USE_WRAPPER_NAME_AS_PROPERTY_NAME: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static USE_STD_BEAN_NAMING: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static ALLOW_EXPLICIT_PROPERTY_RENAMING: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static ALLOW_COERCION_OF_SCALARS: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static IGNORE_DUPLICATE_MODULE_REGISTRATIONS: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static IGNORE_MERGE_FOR_UNMERGEABLE: me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static valueOf(param0: string): me.pushy.sdk.lib.jackson.databind.MapperFeature;
							public static values(): native.Array<me.pushy.sdk.lib.jackson.databind.MapperFeature>;
							public getMask(): number;
							public enabledIn(param0: number): boolean;
							public enabledByDefault(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export class MappingIterator<T>  extends java.lang.Object {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.MappingIterator<any>>;
							public static EMPTY_ITERATOR: me.pushy.sdk.lib.jackson.databind.MappingIterator<any>;
							public static STATE_CLOSED: number;
							public static STATE_NEED_RESYNC: number;
							public static STATE_MAY_HAVE_VALUE: number;
							public static STATE_HAS_VALUE: number;
							public _type: me.pushy.sdk.lib.jackson.databind.JavaType;
							public _context: me.pushy.sdk.lib.jackson.databind.DeserializationContext;
							public _deserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<T>;
							public _parser: me.pushy.sdk.lib.jackson.core.JsonParser;
							public _seqContext: me.pushy.sdk.lib.jackson.core.JsonStreamContext;
							public _updatedValue: T;
							public _closeParser: boolean;
							public _state: number;
							public next(): T;
							public close(): void;
							public hasNextValue(): boolean;
							public nextValue(): T;
							public getParser(): me.pushy.sdk.lib.jackson.core.JsonParser;
							public getCurrentLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
							public hasNext(): boolean;
							public remove(): void;
							public _throwNoSuchElement(): any;
							public readAll(): java.util.List<T>;
							public _handleIOException(param0: java.io.IOException): any;
							public readAll(param0: java.util.Collection): java.util.Collection;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.core.JsonParser, param2: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param4: boolean, param5: any);
							public static emptyIterator(): me.pushy.sdk.lib.jackson.databind.MappingIterator<any>;
							public _resync(): void;
							public readAll(param0: java.util.List): java.util.List;
							public _handleMappingException(param0: me.pushy.sdk.lib.jackson.databind.JsonMappingException): any;
							public getParserSchema(): me.pushy.sdk.lib.jackson.core.FormatSchema;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export class MappingJsonFactory extends me.pushy.sdk.lib.jackson.core.JsonFactory {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.MappingJsonFactory>;
							public constructor();
							public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonFactory, param1: me.pushy.sdk.lib.jackson.core.ObjectCodec);
							public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonFactory, param1: me.pushy.sdk.lib.jackson.databind.ObjectMapper);
							public getCodec(): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public getCodec(): me.pushy.sdk.lib.jackson.core.ObjectCodec;
							public version(): me.pushy.sdk.lib.jackson.core.Version;
							public copy(): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public constructor(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec);
							public getFormatName(): string;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.ObjectMapper);
							public hasFormat(param0: me.pushy.sdk.lib.jackson.core.format.InputAccessor): me.pushy.sdk.lib.jackson.core.format.MatchStrength;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export abstract class Module extends me.pushy.sdk.lib.jackson.core.Versioned {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.Module>;
							public constructor();
							public setupModule(param0: me.pushy.sdk.lib.jackson.databind.Module.SetupContext): void;
							public version(): me.pushy.sdk.lib.jackson.core.Version;
							public getTypeId(): any;
							public getModuleName(): string;
						}
						export module Module {
							export class SetupContext {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.Module.SetupContext>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.Module$SetupContext interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									getMapperVersion(): me.pushy.sdk.lib.jackson.core.Version;
									getOwner(): me.pushy.sdk.lib.jackson.core.ObjectCodec;
									getTypeFactory(): me.pushy.sdk.lib.jackson.databind.type.TypeFactory;
									isEnabled(param0: me.pushy.sdk.lib.jackson.databind.MapperFeature): boolean;
									isEnabled(param0: me.pushy.sdk.lib.jackson.databind.DeserializationFeature): boolean;
									isEnabled(param0: me.pushy.sdk.lib.jackson.databind.SerializationFeature): boolean;
									isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonFactory.Feature): boolean;
									isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature): boolean;
									isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): boolean;
									configOverride(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.cfg.MutableConfigOverride;
									addDeserializers(param0: me.pushy.sdk.lib.jackson.databind.deser.Deserializers): void;
									addKeyDeserializers(param0: me.pushy.sdk.lib.jackson.databind.deser.KeyDeserializers): void;
									addSerializers(param0: me.pushy.sdk.lib.jackson.databind.ser.Serializers): void;
									addKeySerializers(param0: me.pushy.sdk.lib.jackson.databind.ser.Serializers): void;
									addBeanDeserializerModifier(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerModifier): void;
									addBeanSerializerModifier(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerModifier): void;
									addAbstractTypeResolver(param0: me.pushy.sdk.lib.jackson.databind.AbstractTypeResolver): void;
									addTypeModifier(param0: me.pushy.sdk.lib.jackson.databind.type.TypeModifier): void;
									addValueInstantiators(param0: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiators): void;
									setClassIntrospector(param0: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector): void;
									insertAnnotationIntrospector(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): void;
									appendAnnotationIntrospector(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): void;
									registerSubtypes(param0: native.Array<java.lang.Class<any>>): void;
									registerSubtypes(param0: native.Array<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>): void;
									setMixInAnnotations(param0: java.lang.Class<any>, param1: java.lang.Class<any>): void;
									addDeserializationProblemHandler(param0: me.pushy.sdk.lib.jackson.databind.deser.DeserializationProblemHandler): void;
									setNamingStrategy(param0: me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy): void;
								});
								public constructor();
								public registerSubtypes(param0: native.Array<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>): void;
								public addDeserializationProblemHandler(param0: me.pushy.sdk.lib.jackson.databind.deser.DeserializationProblemHandler): void;
								public isEnabled(param0: me.pushy.sdk.lib.jackson.databind.SerializationFeature): boolean;
								public setNamingStrategy(param0: me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy): void;
								public getMapperVersion(): me.pushy.sdk.lib.jackson.core.Version;
								public addDeserializers(param0: me.pushy.sdk.lib.jackson.databind.deser.Deserializers): void;
								public appendAnnotationIntrospector(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): void;
								public configOverride(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.cfg.MutableConfigOverride;
								public addValueInstantiators(param0: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiators): void;
								public isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature): boolean;
								public addBeanDeserializerModifier(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerModifier): void;
								public setClassIntrospector(param0: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector): void;
								public getTypeFactory(): me.pushy.sdk.lib.jackson.databind.type.TypeFactory;
								public registerSubtypes(param0: native.Array<java.lang.Class<any>>): void;
								public addKeyDeserializers(param0: me.pushy.sdk.lib.jackson.databind.deser.KeyDeserializers): void;
								public addTypeModifier(param0: me.pushy.sdk.lib.jackson.databind.type.TypeModifier): void;
								public setMixInAnnotations(param0: java.lang.Class<any>, param1: java.lang.Class<any>): void;
								public getOwner(): me.pushy.sdk.lib.jackson.core.ObjectCodec;
								public addBeanSerializerModifier(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerModifier): void;
								public addAbstractTypeResolver(param0: me.pushy.sdk.lib.jackson.databind.AbstractTypeResolver): void;
								public isEnabled(param0: me.pushy.sdk.lib.jackson.databind.DeserializationFeature): boolean;
								public addSerializers(param0: me.pushy.sdk.lib.jackson.databind.ser.Serializers): void;
								public insertAnnotationIntrospector(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): void;
								public isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonFactory.Feature): boolean;
								public addKeySerializers(param0: me.pushy.sdk.lib.jackson.databind.ser.Serializers): void;
								public isEnabled(param0: me.pushy.sdk.lib.jackson.databind.MapperFeature): boolean;
								public isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export class ObjectMapper extends me.pushy.sdk.lib.jackson.core.ObjectCodec implements me.pushy.sdk.lib.jackson.core.Versioned {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ObjectMapper>;
							public static DEFAULT_ANNOTATION_INTROSPECTOR: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector;
							public static DEFAULT_BASE: me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings;
							public _jsonFactory: me.pushy.sdk.lib.jackson.core.JsonFactory;
							public _typeFactory: me.pushy.sdk.lib.jackson.databind.type.TypeFactory;
							public _injectableValues: me.pushy.sdk.lib.jackson.databind.InjectableValues;
							public _subtypeResolver: me.pushy.sdk.lib.jackson.databind.jsontype.SubtypeResolver;
							public _configOverrides: me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverrides;
							public _mixIns: me.pushy.sdk.lib.jackson.databind.introspect.SimpleMixInResolver;
							public _serializationConfig: me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public _serializerFactory: me.pushy.sdk.lib.jackson.databind.ser.SerializerFactory;
							public _deserializationConfig: me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public _deserializationContext: me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext;
							public _registeredModuleTypes: java.util.Set<any>;
							public _rootDeserializers: java.util.concurrent.ConcurrentHashMap<me.pushy.sdk.lib.jackson.databind.JavaType,me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>>;
							public writerWithView(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public writeValueAsBytes(param0: any): native.Array<number>;
							public setConfig(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public writeValue(param0: java.io.OutputStream, param1: any): void;
							public configure(param0: me.pushy.sdk.lib.jackson.databind.DeserializationFeature, param1: boolean): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.databind.DeserializationFeature): boolean;
							public writer(param0: java.text.DateFormat): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public reader(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public reader(param0: me.pushy.sdk.lib.jackson.databind.InjectableValues): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public reader(param0: me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public readValues(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): me.pushy.sdk.lib.jackson.databind.MappingIterator<any>;
							public readValue(param0: native.Array<number>, param1: number, param2: number, param3: java.lang.Class): any;
							public addMixInAnnotations(param0: java.lang.Class<any>, param1: java.lang.Class<any>): void;
							public enableDefaultTyping(): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public _newReader(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public setSubtypeResolver(param0: me.pushy.sdk.lib.jackson.databind.jsontype.SubtypeResolver): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public setTypeFactory(param0: me.pushy.sdk.lib.jackson.databind.type.TypeFactory): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonFactory);
							public disable(param0: me.pushy.sdk.lib.jackson.databind.SerializationFeature): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public enable(param0: me.pushy.sdk.lib.jackson.databind.DeserializationFeature): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public _newWriter(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public readerFor(param0: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public readerWithView(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public reader(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): boolean;
							public writeValue(param0: java.io.DataOutput, param1: any): void;
							public readTree(param0: java.io.File): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public setDefaultPrettyPrinter(param0: me.pushy.sdk.lib.jackson.core.PrettyPrinter): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public mixInCount(): number;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.databind.MapperFeature): boolean;
							public enable(param0: native.Array<me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature>): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public readValue(param0: native.Array<number>, param1: number, param2: number, param3: me.pushy.sdk.lib.jackson.databind.JavaType): any;
							public treeToValue(param0: me.pushy.sdk.lib.jackson.core.TreeNode, param1: java.lang.Class): any;
							public disable(param0: me.pushy.sdk.lib.jackson.databind.DeserializationFeature): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public treeAsTokens(param0: me.pushy.sdk.lib.jackson.core.TreeNode): me.pushy.sdk.lib.jackson.core.JsonParser;
							public readValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): any;
							public readValue(param0: string, param1: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): any;
							public _newWriter(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.core.FormatSchema): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public writeValue(param0: java.io.File, param1: any): void;
							public constructor();
							public setDefaultPropertyInclusion(param0: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public readValue(param0: java.io.File, param1: me.pushy.sdk.lib.jackson.databind.JavaType): any;
							public readerFor(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public writeValue(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: any): void;
							public writer(param0: me.pushy.sdk.lib.jackson.databind.SerializationFeature): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public setHandlerInstantiator(param0: me.pushy.sdk.lib.jackson.databind.cfg.HandlerInstantiator): any;
							public readTree(param0: java.io.InputStream): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public setSerializerFactory(param0: me.pushy.sdk.lib.jackson.databind.ser.SerializerFactory): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public readValue(param0: native.Array<number>, param1: number, param2: number, param3: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): any;
							public convertValue(param0: any, param1: java.lang.Class): any;
							public writeValue(param0: java.io.Writer, param1: any): void;
							public readValue(param0: java.io.InputStream, param1: java.lang.Class): any;
							public updateValue(param0: any, param1: any): any;
							public canDeserialize(param0: me.pushy.sdk.lib.jackson.databind.JavaType): boolean;
							public static findModules(param0: java.lang.ClassLoader): java.util.List<me.pushy.sdk.lib.jackson.databind.Module>;
							public registerSubtypes(param0: native.Array<java.lang.Class<any>>): void;
							public setDefaultPropertyInclusion(param0: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public _convert(param0: any, param1: me.pushy.sdk.lib.jackson.databind.JavaType): any;
							public getSubtypeResolver(): me.pushy.sdk.lib.jackson.databind.jsontype.SubtypeResolver;
							public setDefaultSetterInfo(param0: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public canDeserialize(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: java.util.concurrent.atomic.AtomicReference<java.lang.Throwable>): boolean;
							public getVisibilityChecker(): me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>;
							public readTree(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public registerModule(param0: me.pushy.sdk.lib.jackson.databind.Module): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public setInjectableValues(param0: me.pushy.sdk.lib.jackson.databind.InjectableValues): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public _initForReading(param0: me.pushy.sdk.lib.jackson.core.JsonParser): me.pushy.sdk.lib.jackson.core.JsonToken;
							public createArrayNode(): me.pushy.sdk.lib.jackson.core.TreeNode;
							public setConfig(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public readValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.core.type.ResolvedType): any;
							public convertValue(param0: any, param1: me.pushy.sdk.lib.jackson.databind.JavaType): any;
							public getNodeFactory(): me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory;
							public reader(param0: me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public _readValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.core.JsonParser, param2: me.pushy.sdk.lib.jackson.databind.JavaType): any;
							public getSerializerFactory(): me.pushy.sdk.lib.jackson.databind.ser.SerializerFactory;
							public setVisibility(param0: me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public readValues(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): java.util.Iterator;
							public registerSubtypes(param0: native.Array<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>): void;
							public getPropertyNamingStrategy(): me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature): boolean;
							public _newWriter(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.core.PrettyPrinter): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public getJsonFactory(): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public writerWithType(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public _findRootDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							public setMixInResolver(param0: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public configure(param0: me.pushy.sdk.lib.jackson.databind.MapperFeature, param1: boolean): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public writer(): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public getSerializerProviderInstance(): me.pushy.sdk.lib.jackson.databind.SerializerProvider;
							public enable(param0: me.pushy.sdk.lib.jackson.databind.DeserializationFeature, param1: native.Array<me.pushy.sdk.lib.jackson.databind.DeserializationFeature>): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public writerWithDefaultPrettyPrinter(): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public writeValueAsString(param0: any): string;
							public reader(param0: me.pushy.sdk.lib.jackson.core.FormatSchema): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public disable(param0: native.Array<me.pushy.sdk.lib.jackson.core.JsonParser.Feature>): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public configure(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature, param1: boolean): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public setBase64Variant(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public setDefaultMergeable(param0: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public readValues(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: java.lang.Class): java.util.Iterator;
							public setFilterProvider(param0: me.pushy.sdk.lib.jackson.databind.ser.FilterProvider): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public reader(): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public setMixInAnnotations(param0: java.util.Map<java.lang.Class<any>,java.lang.Class<any>>): void;
							public setDefaultTyping(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public addMixIn(param0: java.lang.Class<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public readValue(param0: java.io.Reader, param1: java.lang.Class): any;
							public _initForReading(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.core.JsonToken;
							public findAndRegisterModules(): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public enable(param0: me.pushy.sdk.lib.jackson.databind.SerializationFeature): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public _verifySchemaType(param0: me.pushy.sdk.lib.jackson.core.FormatSchema): void;
							public enableDefaultTyping(param0: me.pushy.sdk.lib.jackson.databind.ObjectMapper.DefaultTyping, param1: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public disable(param0: me.pushy.sdk.lib.jackson.databind.DeserializationFeature, param1: native.Array<me.pushy.sdk.lib.jackson.databind.DeserializationFeature>): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public getDeserializationContext(): me.pushy.sdk.lib.jackson.databind.DeserializationContext;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.databind.SerializationFeature): boolean;
							public disable(param0: native.Array<me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature>): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public writer(param0: me.pushy.sdk.lib.jackson.databind.ser.FilterProvider): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public _checkInvalidCopy(param0: java.lang.Class<any>): void;
							public readTree(param0: me.pushy.sdk.lib.jackson.core.JsonParser): me.pushy.sdk.lib.jackson.core.TreeNode;
							public registerModules(param0: native.Array<me.pushy.sdk.lib.jackson.databind.Module>): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public writer(param0: me.pushy.sdk.lib.jackson.core.io.CharacterEscapes): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public writerFor(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public _readMapAndClose(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.JavaType): any;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonFactory.Feature): boolean;
							public readValues(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.core.type.ResolvedType): me.pushy.sdk.lib.jackson.databind.MappingIterator<any>;
							public configure(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature, param1: boolean): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public setSerializationInclusion(param0: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public readerForUpdating(param0: any): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public reader(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public createArrayNode(): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
							public canSerialize(param0: java.lang.Class<any>, param1: java.util.concurrent.atomic.AtomicReference<java.lang.Throwable>): boolean;
							public generateJsonSchema(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.jsonschema.JsonSchema;
							public readValue(param0: java.io.File, param1: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): any;
							public writer(param0: me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public setVisibilityChecker(param0: me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>): void;
							public readValue(param0: java.io.DataInput, param1: me.pushy.sdk.lib.jackson.databind.JavaType): any;
							public createObjectNode(): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
							public _newReader(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: any, param3: me.pushy.sdk.lib.jackson.core.FormatSchema, param4: me.pushy.sdk.lib.jackson.databind.InjectableValues): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public readValues(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.core.type.ResolvedType): java.util.Iterator;
							public setSerializerProvider(param0: me.pushy.sdk.lib.jackson.databind.ser.DefaultSerializerProvider): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public constructType(param0: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JavaType;
							public disable(param0: native.Array<me.pushy.sdk.lib.jackson.databind.MapperFeature>): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public writerWithType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public setPropertyInclusion(param0: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public getSerializerProvider(): me.pushy.sdk.lib.jackson.databind.SerializerProvider;
							public configOverride(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.cfg.MutableConfigOverride;
							public enableDefaultTyping(param0: me.pushy.sdk.lib.jackson.databind.ObjectMapper.DefaultTyping): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public readTree(param0: java.net.URL): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public createObjectNode(): me.pushy.sdk.lib.jackson.core.TreeNode;
							public readValue(param0: java.net.URL, param1: me.pushy.sdk.lib.jackson.databind.JavaType): any;
							public writer(param0: me.pushy.sdk.lib.jackson.core.FormatSchema): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper): void;
							public readTree(param0: native.Array<number>): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonFactory, param1: me.pushy.sdk.lib.jackson.databind.ser.DefaultSerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext);
							public _serializerProvider(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig): me.pushy.sdk.lib.jackson.databind.ser.DefaultSerializerProvider;
							public configure(param0: me.pushy.sdk.lib.jackson.databind.SerializationFeature, param1: boolean): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public static findModules(): java.util.List<me.pushy.sdk.lib.jackson.databind.Module>;
							public readerFor(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.ObjectMapper);
							public writer(param0: me.pushy.sdk.lib.jackson.core.PrettyPrinter): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public enable(param0: me.pushy.sdk.lib.jackson.databind.SerializationFeature, param1: native.Array<me.pushy.sdk.lib.jackson.databind.SerializationFeature>): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public writer(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public clearProblemHandlers(): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public readValue(param0: java.net.URL, param1: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): any;
							public writer(param0: me.pushy.sdk.lib.jackson.databind.SerializationFeature, param1: native.Array<me.pushy.sdk.lib.jackson.databind.SerializationFeature>): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public _readTreeAndClose(param0: me.pushy.sdk.lib.jackson.core.JsonParser): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public readTree(param0: java.io.Reader): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public reader(param0: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public getInjectableValues(): me.pushy.sdk.lib.jackson.databind.InjectableValues;
							public readValue(param0: string, param1: me.pushy.sdk.lib.jackson.databind.JavaType): any;
							public readValue(param0: java.io.Reader, param1: me.pushy.sdk.lib.jackson.databind.JavaType): any;
							public readValue(param0: native.Array<number>, param1: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): any;
							public setTimeZone(param0: java.util.TimeZone): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public getDateFormat(): java.text.DateFormat;
							public valueToTree(param0: any): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public setFilters(param0: me.pushy.sdk.lib.jackson.databind.ser.FilterProvider): void;
							public enableDefaultTypingAsProperty(param0: me.pushy.sdk.lib.jackson.databind.ObjectMapper.DefaultTyping, param1: string): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public setVisibility(param0: me.pushy.sdk.lib.jackson.annotation.PropertyAccessor, param1: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public setMixIns(param0: java.util.Map<java.lang.Class<any>,java.lang.Class<any>>): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public getDeserializationConfig(): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public readValue(param0: java.io.InputStream, param1: me.pushy.sdk.lib.jackson.databind.JavaType): any;
							public writeTree(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): void;
							public reader(param0: me.pushy.sdk.lib.jackson.databind.DeserializationFeature): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public enable(param0: native.Array<me.pushy.sdk.lib.jackson.core.JsonParser.Feature>): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public canSerialize(param0: java.lang.Class<any>): boolean;
							public acceptJsonFormatVisitor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper): void;
							public registerModules(param0: java.lang.Iterable<me.pushy.sdk.lib.jackson.databind.Module>): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public readValue(param0: java.io.InputStream, param1: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): any;
							public enable(param0: native.Array<me.pushy.sdk.lib.jackson.databind.MapperFeature>): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public readValue(param0: java.io.File, param1: java.lang.Class): any;
							public convertValue(param0: any, param1: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): any;
							public getSerializationConfig(): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public setAnnotationIntrospectors(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector, param1: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public disableDefaultTyping(): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public readValue(param0: java.io.DataInput, param1: java.lang.Class): any;
							public _configAndWriteValue(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: any): void;
							public setDateFormat(param0: java.text.DateFormat): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public setLocale(param0: java.util.Locale): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public readValues(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: java.lang.Class): me.pushy.sdk.lib.jackson.databind.MappingIterator<any>;
							public addHandler(param0: me.pushy.sdk.lib.jackson.databind.deser.DeserializationProblemHandler): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public findMixInClassFor(param0: java.lang.Class<any>): java.lang.Class<any>;
							public setAnnotationIntrospector(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public disable(param0: me.pushy.sdk.lib.jackson.databind.SerializationFeature, param1: native.Array<me.pushy.sdk.lib.jackson.databind.SerializationFeature>): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public createDeserializationContext(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext;
							public reader(param0: me.pushy.sdk.lib.jackson.databind.DeserializationFeature, param1: native.Array<me.pushy.sdk.lib.jackson.databind.DeserializationFeature>): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public defaultClassIntrospector(): me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector;
							public readValue(param0: java.net.URL, param1: java.lang.Class): any;
							public getFactory(): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public readValue(param0: string, param1: java.lang.Class): any;
							public writerFor(param0: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public copy(): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public _unwrapAndDeserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param3: me.pushy.sdk.lib.jackson.databind.JavaType, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): any;
							public readValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: java.lang.Class): any;
							public readValues(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.MappingIterator<any>;
							public readValue(param0: java.io.Reader, param1: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): any;
							public setPropertyNamingStrategy(param0: me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public setNodeFactory(param0: me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public readValue(param0: native.Array<number>, param1: java.lang.Class): any;
							public writerWithType(param0: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public readValue(param0: native.Array<number>, param1: me.pushy.sdk.lib.jackson.databind.JavaType): any;
							public readValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.JavaType): any;
							public writerFor(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public setDefaultVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
							public version(): me.pushy.sdk.lib.jackson.core.Version;
							public getTypeFactory(): me.pushy.sdk.lib.jackson.databind.type.TypeFactory;
							public writeTree(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.core.TreeNode): void;
						}
						export module ObjectMapper {
							export class DefaultTypeResolverBuilder extends me.pushy.sdk.lib.jackson.databind.jsontype.impl.StdTypeResolverBuilder {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder>;
								public _appliesFor: me.pushy.sdk.lib.jackson.databind.ObjectMapper.DefaultTyping;
								public inclusion(param0: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As): any;
								public typeIdVisibility(param0: boolean): me.pushy.sdk.lib.jackson.databind.jsontype.impl.StdTypeResolverBuilder;
								public constructor(param0: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id, param1: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As, param2: string);
								public constructor();
								public typeProperty(param0: string): me.pushy.sdk.lib.jackson.databind.jsontype.impl.StdTypeResolverBuilder;
								public typeIdVisibility(param0: boolean): any;
								public inclusion(param0: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As): me.pushy.sdk.lib.jackson.databind.jsontype.impl.StdTypeResolverBuilder;
								public init(param0: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver): any;
								public defaultImpl(param0: java.lang.Class<any>): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ObjectMapper.DefaultTyping);
								public defaultImpl(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.jsontype.impl.StdTypeResolverBuilder;
								public getDefaultImpl(): java.lang.Class<any>;
								public buildTypeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: java.util.Collection<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>): me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
								public init(param0: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver): me.pushy.sdk.lib.jackson.databind.jsontype.impl.StdTypeResolverBuilder;
								public buildTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: java.util.Collection<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>): me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
								public useForType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): boolean;
								public typeProperty(param0: string): any;
							}
							export class DefaultTyping {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ObjectMapper.DefaultTyping>;
								public static JAVA_LANG_OBJECT: me.pushy.sdk.lib.jackson.databind.ObjectMapper.DefaultTyping;
								public static OBJECT_AND_NON_CONCRETE: me.pushy.sdk.lib.jackson.databind.ObjectMapper.DefaultTyping;
								public static NON_CONCRETE_AND_ARRAYS: me.pushy.sdk.lib.jackson.databind.ObjectMapper.DefaultTyping;
								public static NON_FINAL: me.pushy.sdk.lib.jackson.databind.ObjectMapper.DefaultTyping;
								public static values(): native.Array<me.pushy.sdk.lib.jackson.databind.ObjectMapper.DefaultTyping>;
								public static valueOf(param0: string): me.pushy.sdk.lib.jackson.databind.ObjectMapper.DefaultTyping;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export class ObjectReader extends me.pushy.sdk.lib.jackson.core.ObjectCodec implements me.pushy.sdk.lib.jackson.core.Versioned {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ObjectReader>;
							public _config: me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public _context: me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext;
							public _parserFactory: me.pushy.sdk.lib.jackson.core.JsonFactory;
							public _unwrapRoot: boolean;
							public _valueType: me.pushy.sdk.lib.jackson.databind.JavaType;
							public _rootDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							public _valueToUpdate: any;
							public _schema: me.pushy.sdk.lib.jackson.core.FormatSchema;
							public _injectableValues: me.pushy.sdk.lib.jackson.databind.InjectableValues;
							public _dataFormatReaders: me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders;
							public _rootDeserializers: java.util.concurrent.ConcurrentHashMap<me.pushy.sdk.lib.jackson.databind.JavaType,me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>>;
							public withoutFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.core.JsonParser.Feature>): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.ObjectMapper, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig);
							public _bind(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: any): any;
							public readValues(param0: java.io.DataInput): me.pushy.sdk.lib.jackson.databind.MappingIterator<any>;
							public without(param0: me.pushy.sdk.lib.jackson.databind.DeserializationFeature, param1: native.Array<me.pushy.sdk.lib.jackson.databind.DeserializationFeature>): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public _newIterator(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param3: boolean): me.pushy.sdk.lib.jackson.databind.MappingIterator<any>;
							public withAttribute(param0: any, param1: any): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public withoutFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.databind.DeserializationFeature>): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public withType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public with(param0: me.pushy.sdk.lib.jackson.core.FormatFeature): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.databind.DeserializationFeature): boolean;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.ObjectReader, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig);
							public createDeserializationContext(param0: me.pushy.sdk.lib.jackson.core.JsonParser): me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext;
							public _new(param0: me.pushy.sdk.lib.jackson.databind.ObjectReader, param1: me.pushy.sdk.lib.jackson.core.JsonFactory): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public _findTreeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							public forType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public withType(param0: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public withType(param0: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public withFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.databind.DeserializationFeature>): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public _detectBindAndClose(param0: me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders.Match, param1: boolean): any;
							public _considerFilter(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: boolean): me.pushy.sdk.lib.jackson.core.JsonParser;
							public _bindAndCloseAsTree(param0: me.pushy.sdk.lib.jackson.core.JsonParser): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public _new(param0: me.pushy.sdk.lib.jackson.databind.ObjectReader, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param4: any, param5: me.pushy.sdk.lib.jackson.core.FormatSchema, param6: me.pushy.sdk.lib.jackson.databind.InjectableValues, param7: me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public at(param0: string): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public readValues(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.core.type.ResolvedType): java.util.Iterator;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.ObjectReader, param1: me.pushy.sdk.lib.jackson.core.JsonFactory);
							public _bindAndReadValues(param0: me.pushy.sdk.lib.jackson.core.JsonParser): me.pushy.sdk.lib.jackson.databind.MappingIterator<any>;
							public withType(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public _inputStream(param0: java.io.File): java.io.InputStream;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.databind.MapperFeature): boolean;
							public withFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.core.FormatFeature>): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public _prefetchRootDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							public readValue(param0: java.io.Reader): any;
							public withoutFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.core.FormatFeature>): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public readValues(param0: java.io.InputStream): me.pushy.sdk.lib.jackson.databind.MappingIterator<any>;
							public with(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public forType(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public treeToValue(param0: me.pushy.sdk.lib.jackson.core.TreeNode, param1: java.lang.Class): any;
							public withAttributes(param0: java.util.Map<any,any>): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public readValues(param0: java.io.Reader): me.pushy.sdk.lib.jackson.databind.MappingIterator<any>;
							public createObjectNode(): me.pushy.sdk.lib.jackson.core.TreeNode;
							public withView(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public with(param0: me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public treeAsTokens(param0: me.pushy.sdk.lib.jackson.core.TreeNode): me.pushy.sdk.lib.jackson.core.JsonParser;
							public readValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): any;
							public _reportUnkownFormat(param0: me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders, param1: me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders.Match): void;
							public readValue(param0: java.io.DataInput): any;
							public constructor();
							public createArrayNode(): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public writeValue(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: any): void;
							public _reportUndetectableSource(param0: any): void;
							public with(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public with(param0: me.pushy.sdk.lib.jackson.databind.DeserializationFeature): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public readValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser): any;
							public readTree(param0: java.io.InputStream): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public readValues(param0: native.Array<number>, param1: number, param2: number): me.pushy.sdk.lib.jackson.databind.MappingIterator<any>;
							public readValues(param0: native.Array<number>): me.pushy.sdk.lib.jackson.databind.MappingIterator<any>;
							public with(param0: me.pushy.sdk.lib.jackson.core.FormatSchema): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public _bindAndClose(param0: me.pushy.sdk.lib.jackson.core.JsonParser): any;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.ObjectReader, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param4: any, param5: me.pushy.sdk.lib.jackson.core.FormatSchema, param6: me.pushy.sdk.lib.jackson.databind.InjectableValues, param7: me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders);
							public readTree(param0: java.io.Reader): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public getInjectableValues(): me.pushy.sdk.lib.jackson.databind.InjectableValues;
							public _detectBindAndReadValues(param0: me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders.Match, param1: boolean): me.pushy.sdk.lib.jackson.databind.MappingIterator<any>;
							public readValue(param0: java.io.InputStream): any;
							public _detectBindAndCloseAsTree(param0: java.io.InputStream): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public readValue(param0: java.io.File): any;
							public _unwrapAndDeserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): any;
							public with(param0: me.pushy.sdk.lib.jackson.databind.DeserializationFeature, param1: native.Array<me.pushy.sdk.lib.jackson.databind.DeserializationFeature>): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public withRootName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.ObjectMapper, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: any, param4: me.pushy.sdk.lib.jackson.core.FormatSchema, param5: me.pushy.sdk.lib.jackson.databind.InjectableValues);
							public without(param0: me.pushy.sdk.lib.jackson.core.FormatFeature): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public readTree(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public withRootName(param0: string): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public with(param0: me.pushy.sdk.lib.jackson.databind.InjectableValues): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public createArrayNode(): me.pushy.sdk.lib.jackson.core.TreeNode;
							public readValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.core.type.ResolvedType): any;
							public readValues(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.JavaType): java.util.Iterator;
							public readValue(param0: java.net.URL): any;
							public withFormatDetection(param0: me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public createObjectNode(): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public readValue(param0: me.pushy.sdk.lib.jackson.databind.JsonNode): any;
							public readValues(param0: java.io.File): me.pushy.sdk.lib.jackson.databind.MappingIterator<any>;
							public readValue(param0: string): any;
							public _detectBindAndClose(param0: native.Array<number>, param1: number, param2: number): any;
							public with(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public readValue(param0: native.Array<number>): any;
							public readValues(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): java.util.Iterator;
							public without(param0: me.pushy.sdk.lib.jackson.databind.DeserializationFeature): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public forType(param0: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public readTree(param0: java.io.DataInput): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature): boolean;
							public withFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.core.JsonParser.Feature>): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public with(param0: java.util.Locale): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public getConfig(): me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
							public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public readValue(param0: native.Array<number>, param1: number, param2: number): any;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.ObjectReader, param1: me.pushy.sdk.lib.jackson.core.filter.TokenFilter);
							public _with(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public _new(param0: me.pushy.sdk.lib.jackson.databind.ObjectReader, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public readValues(param0: java.net.URL): me.pushy.sdk.lib.jackson.databind.MappingIterator<any>;
							public withHandler(param0: me.pushy.sdk.lib.jackson.databind.deser.DeserializationProblemHandler): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public withoutAttribute(param0: any): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public without(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public getAttributes(): me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes;
							public withFormatDetection(param0: native.Array<me.pushy.sdk.lib.jackson.databind.ObjectReader>): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public _findRootDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							public _initForMultiRead(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.core.JsonParser): void;
							public readValues(param0: me.pushy.sdk.lib.jackson.core.JsonParser): me.pushy.sdk.lib.jackson.databind.MappingIterator<any>;
							public getFactory(): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public readValues(param0: string): me.pushy.sdk.lib.jackson.databind.MappingIterator<any>;
							public readValues(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: java.lang.Class): java.util.Iterator;
							public readValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: java.lang.Class): any;
							public _inputStream(param0: java.net.URL): java.io.InputStream;
							public with(param0: java.util.TimeZone): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public withoutRootName(): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public _verifySchemaType(param0: me.pushy.sdk.lib.jackson.core.FormatSchema): void;
							public withValueToUpdate(param0: any): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public _bindAsTree(param0: me.pushy.sdk.lib.jackson.core.JsonParser): me.pushy.sdk.lib.jackson.databind.JsonNode;
							public readValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.JavaType): any;
							public readTree(param0: me.pushy.sdk.lib.jackson.core.JsonParser): me.pushy.sdk.lib.jackson.core.TreeNode;
							public version(): me.pushy.sdk.lib.jackson.core.Version;
							public with(param0: me.pushy.sdk.lib.jackson.core.JsonFactory): me.pushy.sdk.lib.jackson.databind.ObjectReader;
							public getTypeFactory(): me.pushy.sdk.lib.jackson.databind.type.TypeFactory;
							public _initForReading(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.core.JsonParser): me.pushy.sdk.lib.jackson.core.JsonToken;
							public writeTree(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.core.TreeNode): void;
							public with(param0: me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes): me.pushy.sdk.lib.jackson.databind.ObjectReader;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export class ObjectWriter extends me.pushy.sdk.lib.jackson.core.Versioned {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ObjectWriter>;
							public static NULL_PRETTY_PRINTER: me.pushy.sdk.lib.jackson.core.PrettyPrinter;
							public _config: me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public _serializerFactory: me.pushy.sdk.lib.jackson.databind.ser.SerializerFactory;
							public _generatorFactory: me.pushy.sdk.lib.jackson.core.JsonFactory;
							public _generatorSettings: me.pushy.sdk.lib.jackson.databind.ObjectWriter.GeneratorSettings;
							public _prefetch: me.pushy.sdk.lib.jackson.databind.ObjectWriter.Prefetch;
							public withoutRootName(): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public writeValueAsBytes(param0: any): native.Array<number>;
							public writeValues(param0: java.io.File): me.pushy.sdk.lib.jackson.databind.SequenceWriter;
							public writeValue(param0: java.io.OutputStream, param1: any): void;
							public with(param0: me.pushy.sdk.lib.jackson.core.FormatSchema): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public forType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public getConfig(): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public withAttributes(param0: java.util.Map<any,any>): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.ObjectWriter, param1: me.pushy.sdk.lib.jackson.databind.SerializationConfig);
							public withoutFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature>): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public withoutAttribute(param0: any): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public with(param0: me.pushy.sdk.lib.jackson.databind.SerializationFeature, param1: native.Array<me.pushy.sdk.lib.jackson.databind.SerializationFeature>): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public withRootValueSeparator(param0: string): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public writeValuesAsArray(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): me.pushy.sdk.lib.jackson.databind.SequenceWriter;
							public canSerialize(param0: java.lang.Class<any>, param1: java.util.concurrent.atomic.AtomicReference<java.lang.Throwable>): boolean;
							public acceptJsonFormatVisitor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper): void;
							public canSerialize(param0: java.lang.Class<any>): boolean;
							public without(param0: me.pushy.sdk.lib.jackson.databind.SerializationFeature, param1: native.Array<me.pushy.sdk.lib.jackson.databind.SerializationFeature>): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public hasPrefetchedSerializer(): boolean;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.ObjectMapper, param1: me.pushy.sdk.lib.jackson.databind.SerializationConfig);
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.ObjectWriter, param1: me.pushy.sdk.lib.jackson.core.JsonFactory);
							public without(param0: me.pushy.sdk.lib.jackson.core.FormatFeature): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public withView(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public writeValuesAsArray(param0: java.io.OutputStream): me.pushy.sdk.lib.jackson.databind.SequenceWriter;
							public forType(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonParser.Feature): boolean;
							public with(param0: java.text.DateFormat): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public withType(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public with(param0: java.util.Locale): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public writeValues(param0: java.io.DataOutput): me.pushy.sdk.lib.jackson.databind.SequenceWriter;
							public writeValues(param0: java.io.Writer): me.pushy.sdk.lib.jackson.databind.SequenceWriter;
							public _new(param0: me.pushy.sdk.lib.jackson.databind.ObjectWriter, param1: me.pushy.sdk.lib.jackson.core.JsonFactory): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public with(param0: me.pushy.sdk.lib.jackson.databind.ser.FilterProvider): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public withoutFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.databind.SerializationFeature>): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public _new(param0: me.pushy.sdk.lib.jackson.databind.ObjectWriter.GeneratorSettings, param1: me.pushy.sdk.lib.jackson.databind.ObjectWriter.Prefetch): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public with(param0: me.pushy.sdk.lib.jackson.databind.SerializationFeature): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public withFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.databind.SerializationFeature>): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.ObjectMapper, param1: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: me.pushy.sdk.lib.jackson.core.PrettyPrinter);
							public with(param0: me.pushy.sdk.lib.jackson.core.PrettyPrinter): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public _configAndWriteValue(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: any): void;
							public writeValuesAsArray(param0: java.io.File): me.pushy.sdk.lib.jackson.databind.SequenceWriter;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): boolean;
							public writeValue(param0: java.io.DataOutput, param1: any): void;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.ObjectWriter, param1: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param2: me.pushy.sdk.lib.jackson.databind.ObjectWriter.GeneratorSettings, param3: me.pushy.sdk.lib.jackson.databind.ObjectWriter.Prefetch);
							public forType(param0: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public with(param0: java.util.TimeZone): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public with(param0: me.pushy.sdk.lib.jackson.core.FormatFeature): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.databind.MapperFeature): boolean;
							public _serializerProvider(): me.pushy.sdk.lib.jackson.databind.ser.DefaultSerializerProvider;
							public writeValuesAsArray(param0: java.io.DataOutput): me.pushy.sdk.lib.jackson.databind.SequenceWriter;
							public withType(param0: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public writeValuesAsArray(param0: java.io.Writer): me.pushy.sdk.lib.jackson.databind.SequenceWriter;
							public writeValueAsString(param0: any): string;
							public getAttributes(): me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes;
							public _new(param0: me.pushy.sdk.lib.jackson.databind.ObjectWriter, param1: me.pushy.sdk.lib.jackson.databind.SerializationConfig): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public withSchema(param0: me.pushy.sdk.lib.jackson.core.FormatSchema): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public withRootName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public getFactory(): me.pushy.sdk.lib.jackson.core.JsonFactory;
							public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper): void;
							public _configureGenerator(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
							public withFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature>): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public without(param0: me.pushy.sdk.lib.jackson.databind.SerializationFeature): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public with(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public writeValue(param0: java.io.File, param1: any): void;
							public without(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public withoutFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.core.FormatFeature>): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public writeValue(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: any): void;
							public withType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public withRootName(param0: string): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.ObjectMapper, param1: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param2: me.pushy.sdk.lib.jackson.core.FormatSchema);
							public writeValues(param0: java.io.OutputStream): me.pushy.sdk.lib.jackson.databind.SequenceWriter;
							public withDefaultPrettyPrinter(): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public withAttribute(param0: any, param1: any): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public writeValue(param0: java.io.Writer, param1: any): void;
							public _verifySchemaType(param0: me.pushy.sdk.lib.jackson.core.FormatSchema): void;
							public withFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.core.FormatFeature>): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public with(param0: me.pushy.sdk.lib.jackson.core.JsonFactory): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public with(param0: me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public with(param0: me.pushy.sdk.lib.jackson.core.io.CharacterEscapes): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.databind.SerializationFeature): boolean;
							public version(): me.pushy.sdk.lib.jackson.core.Version;
							public with(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
							public getTypeFactory(): me.pushy.sdk.lib.jackson.databind.type.TypeFactory;
							public _newSequenceWriter(param0: boolean, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: boolean): me.pushy.sdk.lib.jackson.databind.SequenceWriter;
							public writeValues(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): me.pushy.sdk.lib.jackson.databind.SequenceWriter;
							public withRootValueSeparator(param0: me.pushy.sdk.lib.jackson.core.SerializableString): me.pushy.sdk.lib.jackson.databind.ObjectWriter;
						}
						export module ObjectWriter {
							export class GeneratorSettings {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ObjectWriter.GeneratorSettings>;
								public static empty: me.pushy.sdk.lib.jackson.databind.ObjectWriter.GeneratorSettings;
								public prettyPrinter: me.pushy.sdk.lib.jackson.core.PrettyPrinter;
								public schema: me.pushy.sdk.lib.jackson.core.FormatSchema;
								public characterEscapes: me.pushy.sdk.lib.jackson.core.io.CharacterEscapes;
								public rootValueSeparator: me.pushy.sdk.lib.jackson.core.SerializableString;
								public withRootValueSeparator(param0: string): me.pushy.sdk.lib.jackson.databind.ObjectWriter.GeneratorSettings;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.PrettyPrinter, param1: me.pushy.sdk.lib.jackson.core.FormatSchema, param2: me.pushy.sdk.lib.jackson.core.io.CharacterEscapes, param3: me.pushy.sdk.lib.jackson.core.SerializableString);
								public with(param0: me.pushy.sdk.lib.jackson.core.io.CharacterEscapes): me.pushy.sdk.lib.jackson.databind.ObjectWriter.GeneratorSettings;
								public with(param0: me.pushy.sdk.lib.jackson.core.FormatSchema): me.pushy.sdk.lib.jackson.databind.ObjectWriter.GeneratorSettings;
								public withRootValueSeparator(param0: me.pushy.sdk.lib.jackson.core.SerializableString): me.pushy.sdk.lib.jackson.databind.ObjectWriter.GeneratorSettings;
								public with(param0: me.pushy.sdk.lib.jackson.core.PrettyPrinter): me.pushy.sdk.lib.jackson.databind.ObjectWriter.GeneratorSettings;
								public initialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
							}
							export class Prefetch {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ObjectWriter.Prefetch>;
								public static empty: me.pushy.sdk.lib.jackson.databind.ObjectWriter.Prefetch;
								public getTypeSerializer(): me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: any, param2: me.pushy.sdk.lib.jackson.databind.ser.DefaultSerializerProvider): void;
								public getValueSerializer(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public hasSerializer(): boolean;
								public forRootType(param0: me.pushy.sdk.lib.jackson.databind.ObjectWriter, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.ObjectWriter.Prefetch;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export class PropertyMetadata {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.PropertyMetadata>;
							public static STD_REQUIRED: me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
							public static STD_OPTIONAL: me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
							public static STD_REQUIRED_OR_OPTIONAL: me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
							public _required: java.lang.Boolean;
							public _description: string;
							public _index: java.lang.Integer;
							public _defaultValue: string;
							public _mergeInfo: me.pushy.sdk.lib.jackson.databind.PropertyMetadata.MergeInfo;
							public _valueNulls: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls;
							public _contentNulls: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls;
							public getRequired(): java.lang.Boolean;
							public getContentNulls(): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls;
							public withMergeInfo(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata.MergeInfo): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
							public getDefaultValue(): string;
							public isRequired(): boolean;
							public withIndex(param0: java.lang.Integer): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
							public hasIndex(): boolean;
							public getValueNulls(): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls;
							public static construct(param0: boolean, param1: string, param2: java.lang.Integer, param3: string): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
							public getDescription(): string;
							public getIndex(): java.lang.Integer;
							public readResolve(): any;
							public withDescription(param0: string): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
							public withDefaultValue(param0: string): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
							public withRequired(param0: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
							public hasDefaultValue(): boolean;
							public getMergeInfo(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata.MergeInfo;
							public static construct(param0: java.lang.Boolean, param1: string, param2: java.lang.Integer, param3: string): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
							public withNulls(param0: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls, param1: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
							public constructor(param0: java.lang.Boolean, param1: string, param2: java.lang.Integer, param3: string, param4: me.pushy.sdk.lib.jackson.databind.PropertyMetadata.MergeInfo, param5: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls, param6: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls);
						}
						export module PropertyMetadata {
							export class MergeInfo {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.PropertyMetadata.MergeInfo>;
								public getter: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public fromDefaults: boolean;
								public static createForTypeOverride(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.databind.PropertyMetadata.MergeInfo;
								public static createForPropertyOverride(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.databind.PropertyMetadata.MergeInfo;
								public static createForDefaults(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.databind.PropertyMetadata.MergeInfo;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param1: boolean);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export class PropertyName {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.PropertyName>;
							public static USE_DEFAULT: me.pushy.sdk.lib.jackson.databind.PropertyName;
							public static NO_NAME: me.pushy.sdk.lib.jackson.databind.PropertyName;
							public _simpleName: string;
							public _namespace: string;
							public _encodedSimple: me.pushy.sdk.lib.jackson.core.SerializableString;
							public getSimpleName(): string;
							public hasNamespace(): boolean;
							public hashCode(): number;
							public constructor(param0: string, param1: string);
							public hasSimpleName(param0: string): boolean;
							public hasSimpleName(): boolean;
							public toString(): string;
							public withNamespace(param0: string): me.pushy.sdk.lib.jackson.databind.PropertyName;
							public readResolve(): any;
							public constructor(param0: string);
							public static construct(param0: string): me.pushy.sdk.lib.jackson.databind.PropertyName;
							public static construct(param0: string, param1: string): me.pushy.sdk.lib.jackson.databind.PropertyName;
							public withSimpleName(param0: string): me.pushy.sdk.lib.jackson.databind.PropertyName;
							public isEmpty(): boolean;
							public equals(param0: any): boolean;
							public internSimpleName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
							public simpleAsEncoded(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): me.pushy.sdk.lib.jackson.core.SerializableString;
							public getNamespace(): string;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export class PropertyNamingStrategy {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy>;
							public static SNAKE_CASE: me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy;
							public static UPPER_CAMEL_CASE: me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy;
							public static LOWER_CAMEL_CASE: me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy;
							public static LOWER_CASE: me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy;
							public static KEBAB_CASE: me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy;
							public static CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES: me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy;
							public static PASCAL_CASE_TO_CAMEL_CASE: me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy;
							public constructor();
							public nameForGetterMethod(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod, param2: string): string;
							public nameForField(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField, param2: string): string;
							public nameForSetterMethod(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod, param2: string): string;
							public nameForConstructorParameter(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter, param2: string): string;
						}
						export module PropertyNamingStrategy {
							export class KebabCaseStrategy extends me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategyBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy.KebabCaseStrategy>;
								public translate(param0: string): string;
								public constructor();
							}
							export class LowerCaseStrategy extends me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategyBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy.LowerCaseStrategy>;
								public translate(param0: string): string;
								public constructor();
							}
							export class LowerCaseWithUnderscoresStrategy extends me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy.SnakeCaseStrategy {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy.LowerCaseWithUnderscoresStrategy>;
								public constructor();
							}
							export class PascalCaseStrategy extends me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy.UpperCamelCaseStrategy {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy.PascalCaseStrategy>;
								public constructor();
							}
							export abstract class PropertyNamingStrategyBase extends me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategyBase>;
								public nameForSetterMethod(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod, param2: string): string;
								public nameForConstructorParameter(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter, param2: string): string;
								public translate(param0: string): string;
								public constructor();
								public nameForGetterMethod(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod, param2: string): string;
								public nameForField(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField, param2: string): string;
							}
							export class SnakeCaseStrategy extends me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategyBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy.SnakeCaseStrategy>;
								public translate(param0: string): string;
								public constructor();
							}
							export class UpperCamelCaseStrategy extends me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategyBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy.UpperCamelCaseStrategy>;
								public translate(param0: string): string;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export class RuntimeJsonMappingException {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.RuntimeJsonMappingException>;
							public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.databind.JsonMappingException);
							public constructor(param0: string);
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.JsonMappingException);
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export class SequenceWriter extends me.pushy.sdk.lib.jackson.core.Versioned {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.SequenceWriter>;
							public _provider: me.pushy.sdk.lib.jackson.databind.ser.DefaultSerializerProvider;
							public _config: me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public _generator: me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public _rootSerializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public _typeSerializer: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
							public _closeGenerator: boolean;
							public _cfgFlush: boolean;
							public _cfgCloseCloseable: boolean;
							public _dynamicSerializers: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap;
							public _openArray: boolean;
							public _closed: boolean;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.DefaultSerializerProvider, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: boolean, param3: me.pushy.sdk.lib.jackson.databind.ObjectWriter.Prefetch);
							public close(): void;
							public init(param0: boolean): me.pushy.sdk.lib.jackson.databind.SequenceWriter;
							public write(param0: any): me.pushy.sdk.lib.jackson.databind.SequenceWriter;
							public writeAll(param0: java.lang.Iterable<any>): me.pushy.sdk.lib.jackson.databind.SequenceWriter;
							public version(): me.pushy.sdk.lib.jackson.core.Version;
							public flush(): void;
							public writeAll(param0: native.Array<any>): me.pushy.sdk.lib.jackson.databind.SequenceWriter;
							public _writeCloseableValue(param0: any, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.SequenceWriter;
							public write(param0: any, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.SequenceWriter;
							public writeAll(param0: java.util.Collection): me.pushy.sdk.lib.jackson.databind.SequenceWriter;
							public _writeCloseableValue(param0: any): me.pushy.sdk.lib.jackson.databind.SequenceWriter;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export class SerializationConfig extends me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<me.pushy.sdk.lib.jackson.databind.SerializationFeature,me.pushy.sdk.lib.jackson.databind.SerializationConfig> implements java.io.Serializable  {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.SerializationConfig>;
							public static DEFAULT_PRETTY_PRINTER: me.pushy.sdk.lib.jackson.core.PrettyPrinter;
							public _filterProvider: me.pushy.sdk.lib.jackson.databind.ser.FilterProvider;
							public _defaultPrettyPrinter: me.pushy.sdk.lib.jackson.core.PrettyPrinter;
							public _serFeatures: number;
							public _generatorFeatures: number;
							public _generatorFeaturesToChange: number;
							public _formatWriteFeatures: number;
							public _formatWriteFeaturesToChange: number;
							public withFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature>): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public withoutFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.core.FormatFeature>): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>);
							public without(param0: me.pushy.sdk.lib.jackson.core.FormatFeature): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public withRootName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public with(param0: me.pushy.sdk.lib.jackson.databind.cfg.HandlerInstantiator): any;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings, param1: number);
							public _withBase(param0: me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings): any;
							public with(param0: me.pushy.sdk.lib.jackson.databind.jsontype.SubtypeResolver): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings);
							public introspect(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.BeanDescription;
							public withoutFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature>): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public withFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.core.FormatFeature>): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: java.lang.Class<any>);
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes);
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.introspect.SimpleMixInResolver, param2: me.pushy.sdk.lib.jackson.databind.util.RootNameLookup, param3: me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverrides);
							public with(param0: me.pushy.sdk.lib.jackson.core.FormatFeature): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings);
							public withFilters(param0: me.pushy.sdk.lib.jackson.databind.ser.FilterProvider): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public with(param0: me.pushy.sdk.lib.jackson.databind.MapperFeature, param1: boolean): any;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings, param1: me.pushy.sdk.lib.jackson.databind.jsontype.SubtypeResolver, param2: me.pushy.sdk.lib.jackson.databind.introspect.SimpleMixInResolver, param3: me.pushy.sdk.lib.jackson.databind.util.RootNameLookup, param4: me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverrides);
							public with(param0: native.Array<me.pushy.sdk.lib.jackson.databind.MapperFeature>): any;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.introspect.SimpleMixInResolver);
							public withRootName(param0: string): any;
							public with(param0: java.text.DateFormat): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public without(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public withView(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public withFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.databind.SerializationFeature>): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.core.PrettyPrinter);
							public with(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): any;
							public _withMapperFeatures(param0: number): any;
							public copy(): me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver;
							public withoutFeatures(param0: native.Array<me.pushy.sdk.lib.jackson.databind.SerializationFeature>): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>);
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes);
							public with(param0: me.pushy.sdk.lib.jackson.databind.SerializationFeature): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.databind.MapperFeature): boolean;
							public with(param0: me.pushy.sdk.lib.jackson.databind.SerializationFeature, param1: native.Array<me.pushy.sdk.lib.jackson.databind.SerializationFeature>): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public useRootWrapping(): boolean;
							public findMixInClassFor(param0: java.lang.Class<any>): java.lang.Class<any>;
							public with(param0: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector): any;
							public getSerializationFeatures(): number;
							public withView(param0: java.lang.Class<any>): any;
							public withDefaultPrettyPrinter(param0: me.pushy.sdk.lib.jackson.core.PrettyPrinter): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: number);
							public isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature, param1: me.pushy.sdk.lib.jackson.core.JsonFactory): boolean;
							public getSerializationInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
							public with(param0: me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy): any;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.SimpleMixInResolver, param2: me.pushy.sdk.lib.jackson.databind.util.RootNameLookup, param3: me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverrides);
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: number);
							public getFilterProvider(): me.pushy.sdk.lib.jackson.databind.ser.FilterProvider;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: me.pushy.sdk.lib.jackson.databind.jsontype.SubtypeResolver);
							public _withMapperFeatures(param0: number): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public withRootName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): any;
							public with(param0: me.pushy.sdk.lib.jackson.databind.jsontype.SubtypeResolver): any;
							public with(param0: me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public without(param0: native.Array<me.pushy.sdk.lib.jackson.databind.MapperFeature>): any;
							public initialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
							public hasSerializationFeatures(param0: number): boolean;
							public withPropertyInclusion(param0: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
							public with(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public getDefaultPrettyPrinter(): me.pushy.sdk.lib.jackson.core.PrettyPrinter;
							public with(param0: java.util.Locale): any;
							public with(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): any;
							public with(param0: me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes): any;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.databind.SerializationFeature): boolean;
							public with(param0: java.util.TimeZone): any;
							public _withBase(param0: me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public with(param0: me.pushy.sdk.lib.jackson.databind.type.TypeFactory): any;
							public without(param0: me.pushy.sdk.lib.jackson.databind.SerializationFeature): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public with(param0: java.text.DateFormat): any;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.SimpleMixInResolver);
							public with(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>): any;
							public without(param0: me.pushy.sdk.lib.jackson.databind.SerializationFeature, param1: native.Array<me.pushy.sdk.lib.jackson.databind.SerializationFeature>): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public constructDefaultPrettyPrinter(): me.pushy.sdk.lib.jackson.core.PrettyPrinter;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export class SerializationFeature extends me.pushy.sdk.lib.jackson.databind.cfg.ConfigFeature {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.SerializationFeature>;
							public static WRAP_ROOT_VALUE: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static INDENT_OUTPUT: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static FAIL_ON_EMPTY_BEANS: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static FAIL_ON_SELF_REFERENCES: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static WRAP_EXCEPTIONS: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static FAIL_ON_UNWRAPPED_TYPE_IDENTIFIERS: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static CLOSE_CLOSEABLE: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static FLUSH_AFTER_WRITE_VALUE: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static WRITE_DATES_AS_TIMESTAMPS: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static WRITE_DATE_KEYS_AS_TIMESTAMPS: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static WRITE_DATES_WITH_ZONE_ID: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static WRITE_DURATIONS_AS_TIMESTAMPS: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static WRITE_ENUMS_USING_TO_STRING: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static WRITE_ENUMS_USING_INDEX: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static WRITE_NULL_MAP_VALUES: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static WRITE_EMPTY_JSON_ARRAYS: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static WRITE_BIGDECIMAL_AS_PLAIN: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static ORDER_MAP_ENTRIES_BY_KEYS: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static EAGER_SERIALIZER_FETCH: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static USE_EQUALITY_FOR_OBJECT_ID: me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public static valueOf(param0: string): me.pushy.sdk.lib.jackson.databind.SerializationFeature;
							public getMask(): number;
							public enabledIn(param0: number): boolean;
							public enabledByDefault(): boolean;
							public static values(): native.Array<me.pushy.sdk.lib.jackson.databind.SerializationFeature>;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export abstract class SerializerProvider extends me.pushy.sdk.lib.jackson.databind.DatabindContext {
							public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.SerializerProvider>;
							public static CACHE_UNKNOWN_MAPPINGS: boolean;
							public static DEFAULT_NULL_KEY_SERIALIZER: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public static DEFAULT_UNKNOWN_SERIALIZER: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public _config: me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public _serializationView: java.lang.Class<any>;
							public _serializerFactory: me.pushy.sdk.lib.jackson.databind.ser.SerializerFactory;
							public _serializerCache: me.pushy.sdk.lib.jackson.databind.ser.SerializerCache;
							public _attributes: me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes;
							public _unknownTypeSerializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public _keySerializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public _nullValueSerializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public _nullKeySerializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public _knownSerializers: me.pushy.sdk.lib.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap;
							public _stdNullValueSerializer: boolean;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider);
							public canOverrideAccessModifiers(): boolean;
							public getDefaultNullKeySerializer(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public _createAndCacheUntypedSerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public findValueSerializer(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public isUnknownTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): boolean;
							public getTimeZone(): java.util.TimeZone;
							public findObjectId(param0: any, param1: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>): me.pushy.sdk.lib.jackson.databind.ser.impl.WritableObjectId;
							public getUnknownTypeSerializer(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public reportBadTypeDefinition(param0: me.pushy.sdk.lib.jackson.databind.BeanDescription, param1: string, param2: native.Array<any>): any;
							public findValueSerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public defaultSerializeField(param0: string, param1: any, param2: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
							public reportMappingProblem(param0: java.lang.Throwable, param1: string, param2: native.Array<any>): void;
							public setNullKeySerializer(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): void;
							public findTypedValueSerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: boolean, param2: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public getConfig(): me.pushy.sdk.lib.jackson.databind.SerializationConfig;
							public getSerializationView(): java.lang.Class<any>;
							public _dateFormat(): java.text.DateFormat;
							public defaultSerializeDateKey(param0: number, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
							public _findExplicitUntypedSerializer(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public defaultSerializeValue(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
							public findNullValueSerializer(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public serializerInstance(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: any): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public getDefaultNullValueSerializer(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public reportBadDefinition(param0: java.lang.Class, param1: string): any;
							public findKeySerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public defaultSerializeNull(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
							public setAttribute(param0: any, param1: any): me.pushy.sdk.lib.jackson.databind.DatabindContext;
							public getGenerator(): me.pushy.sdk.lib.jackson.core.JsonGenerator;
							public setNullValueSerializer(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): void;
							public defaultSerializeDateValue(param0: number, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
							public reportMappingProblem(param0: string, param1: native.Array<any>): void;
							public handlePrimaryContextualization(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public mappingException(param0: java.lang.Throwable, param1: string, param2: native.Array<any>): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public findPrimaryPropertySerializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public findTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
							public reportBadDefinition(param0: java.lang.Class, param1: string, param2: java.lang.Throwable): any;
							public _handleContextualResolvable(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public includeFilterInstance(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: java.lang.Class<any>): any;
							public getDefaultPropertyFormat(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
							public getDefaultPropertyInclusion(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
							public _createAndCacheUntypedSerializer(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public handleSecondaryContextualization(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.databind.MapperFeature): boolean;
							public mappingException(param0: string, param1: native.Array<any>): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
							public getLocale(): java.util.Locale;
							public findKeySerializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public _handleResolvable(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public reportBadPropertyDefinition(param0: me.pushy.sdk.lib.jackson.databind.BeanDescription, param1: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param2: string, param3: native.Array<any>): any;
							public getAnnotationIntrospector(): me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector;
							public reportBadDefinition(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: string, param2: java.lang.Throwable): any;
							public _reportIncompatibleRootType(param0: any, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
							public getFilterProvider(): me.pushy.sdk.lib.jackson.databind.ser.FilterProvider;
							public defaultSerializeDateKey(param0: java.util.Date, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
							public constructor();
							public setDefaultKeySerializer(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): void;
							public constructor(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param2: me.pushy.sdk.lib.jackson.databind.ser.SerializerFactory);
							public getConfig(): me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>;
							public findNullKeySerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public reportBadDefinition(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: string): any;
							public hasSerializationFeatures(param0: number): boolean;
							public includeFilterSuppressNulls(param0: any): boolean;
							public getAttribute(param0: any): any;
							public setAttribute(param0: any, param1: any): me.pushy.sdk.lib.jackson.databind.SerializerProvider;
							public findValueSerializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public isEnabled(param0: me.pushy.sdk.lib.jackson.databind.SerializationFeature): boolean;
							public getTypeFactory(): me.pushy.sdk.lib.jackson.databind.type.TypeFactory;
							public findTypedValueSerializer(param0: java.lang.Class<any>, param1: boolean, param2: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public findPrimaryPropertySerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public _createUntypedSerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public findValueSerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							public getActiveView(): java.lang.Class<any>;
							public defaultSerializeDateValue(param0: java.util.Date, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module annotation {
							export class JacksonStdImpl {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.annotation.JacksonStdImpl>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.annotation.JacksonStdImpl interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module annotation {
							export class JsonAppend {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.annotation.JsonAppend>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.annotation.JsonAppend interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									attrs(): native.Array<me.pushy.sdk.lib.jackson.databind.annotation.JsonAppend.Attr>;
									props(): native.Array<me.pushy.sdk.lib.jackson.databind.annotation.JsonAppend.Prop>;
									prepend(): boolean;
								});
								public constructor();
								public attrs(): native.Array<me.pushy.sdk.lib.jackson.databind.annotation.JsonAppend.Attr>;
								public props(): native.Array<me.pushy.sdk.lib.jackson.databind.annotation.JsonAppend.Prop>;
								public prepend(): boolean;
							}
							export module JsonAppend {
								export class Attr {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.annotation.JsonAppend.Attr>;
									/**
									 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.annotation.JsonAppend$Attr interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: {
										value(): string;
										propName(): string;
										propNamespace(): string;
										include(): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
										required(): boolean;
									});
									public constructor();
									public required(): boolean;
									public propNamespace(): string;
									public value(): string;
									public include(): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
									public propName(): string;
								}
								export class Prop {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.annotation.JsonAppend.Prop>;
									/**
									 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.annotation.JsonAppend$Prop interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: {
										value(): java.lang.Class<any>;
										name(): string;
										namespace(): string;
										include(): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
										required(): boolean;
										type(): java.lang.Class<any>;
									});
									public constructor();
									public required(): boolean;
									public type(): java.lang.Class<any>;
									public namespace(): string;
									public value(): java.lang.Class<any>;
									public include(): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
									public name(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module annotation {
							export class JsonDeserialize {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.annotation.JsonDeserialize>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.annotation.JsonDeserialize interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									using(): java.lang.Class<any>;
									contentUsing(): java.lang.Class<any>;
									keyUsing(): java.lang.Class<any>;
									builder(): java.lang.Class<any>;
									converter(): java.lang.Class<any>;
									contentConverter(): java.lang.Class<any>;
									as(): java.lang.Class<any>;
									keyAs(): java.lang.Class<any>;
									contentAs(): java.lang.Class<any>;
								});
								public constructor();
								public contentUsing(): java.lang.Class<any>;
								public contentConverter(): java.lang.Class<any>;
								public keyAs(): java.lang.Class<any>;
								public keyUsing(): java.lang.Class<any>;
								public as(): java.lang.Class<any>;
								public builder(): java.lang.Class<any>;
								public converter(): java.lang.Class<any>;
								public contentAs(): java.lang.Class<any>;
								public using(): java.lang.Class<any>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module annotation {
							export class JsonNaming {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.annotation.JsonNaming>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.annotation.JsonNaming interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									value(): java.lang.Class<any>;
								});
								public constructor();
								public value(): java.lang.Class<any>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module annotation {
							export class JsonPOJOBuilder {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.annotation.JsonPOJOBuilder>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.annotation.JsonPOJOBuilder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									buildMethodName(): string;
									withPrefix(): string;
								});
								public constructor();
								public static DEFAULT_WITH_PREFIX: string;
								public static DEFAULT_BUILD_METHOD: string;
								public withPrefix(): string;
								public buildMethodName(): string;
							}
							export module JsonPOJOBuilder {
								export class Value {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.annotation.JsonPOJOBuilder.Value>;
									public buildMethodName: string;
									public withPrefix: string;
									public constructor(param0: string, param1: string);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.annotation.JsonPOJOBuilder);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module annotation {
							export class JsonSerialize {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									using(): java.lang.Class<any>;
									contentUsing(): java.lang.Class<any>;
									keyUsing(): java.lang.Class<any>;
									nullsUsing(): java.lang.Class<any>;
									as(): java.lang.Class<any>;
									keyAs(): java.lang.Class<any>;
									contentAs(): java.lang.Class<any>;
									typing(): me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize.Typing;
									converter(): java.lang.Class<any>;
									contentConverter(): java.lang.Class<any>;
									include(): me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize.Inclusion;
								});
								public constructor();
								public nullsUsing(): java.lang.Class<any>;
								public contentUsing(): java.lang.Class<any>;
								public keyAs(): java.lang.Class<any>;
								public contentConverter(): java.lang.Class<any>;
								public include(): me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize.Inclusion;
								public keyUsing(): java.lang.Class<any>;
								public as(): java.lang.Class<any>;
								public converter(): java.lang.Class<any>;
								public contentAs(): java.lang.Class<any>;
								public using(): java.lang.Class<any>;
								public typing(): me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize.Typing;
							}
							export module JsonSerialize {
								export class Inclusion {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize.Inclusion>;
									public static ALWAYS: me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize.Inclusion;
									public static NON_NULL: me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize.Inclusion;
									public static NON_DEFAULT: me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize.Inclusion;
									public static NON_EMPTY: me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize.Inclusion;
									public static DEFAULT_INCLUSION: me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize.Inclusion;
									public static values(): native.Array<me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize.Inclusion>;
									public static valueOf(param0: string): me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize.Inclusion;
								}
								export class Typing {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize.Typing>;
									public static DYNAMIC: me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize.Typing;
									public static STATIC: me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize.Typing;
									public static DEFAULT_TYPING: me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize.Typing;
									public static valueOf(param0: string): me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize.Typing;
									public static values(): native.Array<me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize.Typing>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module annotation {
							export class JsonTypeIdResolver {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.annotation.JsonTypeIdResolver>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.annotation.JsonTypeIdResolver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									value(): java.lang.Class<any>;
								});
								public constructor();
								public value(): java.lang.Class<any>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module annotation {
							export class JsonTypeResolver {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.annotation.JsonTypeResolver>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.annotation.JsonTypeResolver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									value(): java.lang.Class<any>;
								});
								public constructor();
								public value(): java.lang.Class<any>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module annotation {
							export class JsonValueInstantiator {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.annotation.JsonValueInstantiator>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.annotation.JsonValueInstantiator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									value(): java.lang.Class<any>;
								});
								public constructor();
								public value(): java.lang.Class<any>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module annotation {
							export class NoClass {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.annotation.NoClass>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module cfg {
							export class BaseSettings {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings>;
								public _classIntrospector: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector;
								public _annotationIntrospector: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector;
								public _propertyNamingStrategy: me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy;
								public _typeFactory: me.pushy.sdk.lib.jackson.databind.type.TypeFactory;
								public _typeResolverBuilder: me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>;
								public _dateFormat: java.text.DateFormat;
								public _handlerInstantiator: me.pushy.sdk.lib.jackson.databind.cfg.HandlerInstantiator;
								public _locale: java.util.Locale;
								public _timeZone: java.util.TimeZone;
								public _defaultBase64: me.pushy.sdk.lib.jackson.core.Base64Variant;
								public withTypeResolverBuilder(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>): me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings;
								public getTypeFactory(): me.pushy.sdk.lib.jackson.databind.type.TypeFactory;
								public getPropertyNamingStrategy(): me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy;
								public hasExplicitTimeZone(): boolean;
								public getClassIntrospector(): me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector;
								public withHandlerInstantiator(param0: me.pushy.sdk.lib.jackson.databind.cfg.HandlerInstantiator): me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings;
								public with(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings;
								public withDateFormat(param0: java.text.DateFormat): me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings;
								public getDateFormat(): java.text.DateFormat;
								public getTimeZone(): java.util.TimeZone;
								public withAnnotationIntrospector(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings;
								public withClassIntrospector(param0: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector): me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings;
								public withTypeFactory(param0: me.pushy.sdk.lib.jackson.databind.type.TypeFactory): me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings;
								public getHandlerInstantiator(): me.pushy.sdk.lib.jackson.databind.cfg.HandlerInstantiator;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector, param1: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector, param2: me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy, param3: me.pushy.sdk.lib.jackson.databind.type.TypeFactory, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>, param5: java.text.DateFormat, param6: me.pushy.sdk.lib.jackson.databind.cfg.HandlerInstantiator, param7: java.util.Locale, param8: java.util.TimeZone, param9: me.pushy.sdk.lib.jackson.core.Base64Variant);
								public withAppendedAnnotationIntrospector(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings;
								public withInsertedAnnotationIntrospector(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings;
								public getAnnotationIntrospector(): me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector;
								public getTypeResolverBuilder(): me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>;
								public getBase64Variant(): me.pushy.sdk.lib.jackson.core.Base64Variant;
								public with(param0: java.util.TimeZone): me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings;
								public getLocale(): java.util.Locale;
								public withPropertyNamingStrategy(param0: me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy): me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings;
								public with(param0: java.util.Locale): me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module cfg {
							export class ConfigFeature {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.cfg.ConfigFeature>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.cfg.ConfigFeature interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									enabledByDefault(): boolean;
									getMask(): number;
									enabledIn(param0: number): boolean;
								});
								public constructor();
								public enabledByDefault(): boolean;
								public getMask(): number;
								public enabledIn(param0: number): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module cfg {
							export abstract class ConfigOverride {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverride>;
								public _format: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public _include: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public _ignorals: me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public _setterInfo: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value;
								public _visibility: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value;
								public _isIgnoredType: java.lang.Boolean;
								public _mergeable: java.lang.Boolean;
								public getInclude(): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverride);
								public getIgnorals(): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public getFormat(): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public getIsIgnoredType(): java.lang.Boolean;
								public getVisibility(): me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value;
								public constructor();
								public getMergeable(): java.lang.Boolean;
								public static empty(): me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverride;
								public getSetterInfo(): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value;
							}
							export module ConfigOverride {
								export class Empty extends me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverride {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverride.Empty>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module cfg {
							export class ConfigOverrides {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverrides>;
								public _overrides: java.util.Map<java.lang.Class<any>,me.pushy.sdk.lib.jackson.databind.cfg.MutableConfigOverride>;
								public _defaultInclusion: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public _defaultSetterInfo: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value;
								public _visibilityChecker: me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>;
								public _defaultMergeable: java.lang.Boolean;
								public findOrCreateOverride(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.cfg.MutableConfigOverride;
								public getDefaultVisibility(): me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>;
								public getDefaultMergeable(): java.lang.Boolean;
								public getDefaultSetterInfo(): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value;
								public constructor();
								public _newMap(): java.util.Map<java.lang.Class<any>,me.pushy.sdk.lib.jackson.databind.cfg.MutableConfigOverride>;
								public setDefaultSetterInfo(param0: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value): void;
								public setDefaultVisibility(param0: me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>): void;
								public findOverride(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverride;
								public copy(): me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverrides;
								public setDefaultMergeable(param0: java.lang.Boolean): void;
								public constructor(param0: java.util.Map<java.lang.Class<any>,me.pushy.sdk.lib.jackson.databind.cfg.MutableConfigOverride>, param1: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value, param2: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value, param3: me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>, param4: java.lang.Boolean);
								public getDefaultInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public setDefaultInclusion(param0: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module cfg {
							export abstract class ContextAttributes {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes>;
								public withSharedAttribute(param0: any, param1: any): me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes;
								public getAttribute(param0: any): any;
								public withPerCallAttribute(param0: any, param1: any): me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes;
								public static getEmpty(): me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes;
								public constructor();
								public withSharedAttributes(param0: java.util.Map<any,any>): me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes;
								public withoutSharedAttribute(param0: any): me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes;
							}
							export module ContextAttributes {
								export class Impl extends me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes.Impl>;
									public static EMPTY: me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes.Impl;
									public static NULL_SURROGATE: any;
									public _shared: java.util.Map<any,any>;
									public _nonShared: java.util.Map<any,any>;
									public constructor(param0: java.util.Map<any,any>, param1: java.util.Map<any,any>);
									public constructor();
									public withSharedAttributes(param0: java.util.Map<any,any>): me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes;
									public static getEmpty(): me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes;
									public withoutSharedAttribute(param0: any): me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes;
									public nonSharedInstance(param0: any, param1: any): me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes;
									public withPerCallAttribute(param0: any, param1: any): me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes;
									public constructor(param0: java.util.Map<any,any>);
									public getAttribute(param0: any): any;
									public withSharedAttribute(param0: any, param1: any): me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module cfg {
							export class DeserializerFactoryConfig {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.cfg.DeserializerFactoryConfig>;
								public static NO_DESERIALIZERS: native.Array<me.pushy.sdk.lib.jackson.databind.deser.Deserializers>;
								public static NO_MODIFIERS: native.Array<me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerModifier>;
								public static NO_ABSTRACT_TYPE_RESOLVERS: native.Array<me.pushy.sdk.lib.jackson.databind.AbstractTypeResolver>;
								public static NO_VALUE_INSTANTIATORS: native.Array<me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiators>;
								public static DEFAULT_KEY_DESERIALIZERS: native.Array<me.pushy.sdk.lib.jackson.databind.deser.KeyDeserializers>;
								public _additionalDeserializers: native.Array<me.pushy.sdk.lib.jackson.databind.deser.Deserializers>;
								public _additionalKeyDeserializers: native.Array<me.pushy.sdk.lib.jackson.databind.deser.KeyDeserializers>;
								public _modifiers: native.Array<me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerModifier>;
								public _abstractTypeResolvers: native.Array<me.pushy.sdk.lib.jackson.databind.AbstractTypeResolver>;
								public _valueInstantiators: native.Array<me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiators>;
								public abstractTypeResolvers(): java.lang.Iterable<me.pushy.sdk.lib.jackson.databind.AbstractTypeResolver>;
								public withAbstractTypeResolver(param0: me.pushy.sdk.lib.jackson.databind.AbstractTypeResolver): me.pushy.sdk.lib.jackson.databind.cfg.DeserializerFactoryConfig;
								public withDeserializerModifier(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerModifier): me.pushy.sdk.lib.jackson.databind.cfg.DeserializerFactoryConfig;
								public withAdditionalKeyDeserializers(param0: me.pushy.sdk.lib.jackson.databind.deser.KeyDeserializers): me.pushy.sdk.lib.jackson.databind.cfg.DeserializerFactoryConfig;
								public hasDeserializers(): boolean;
								public deserializers(): java.lang.Iterable<me.pushy.sdk.lib.jackson.databind.deser.Deserializers>;
								public constructor(param0: native.Array<me.pushy.sdk.lib.jackson.databind.deser.Deserializers>, param1: native.Array<me.pushy.sdk.lib.jackson.databind.deser.KeyDeserializers>, param2: native.Array<me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerModifier>, param3: native.Array<me.pushy.sdk.lib.jackson.databind.AbstractTypeResolver>, param4: native.Array<me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiators>);
								public constructor();
								public valueInstantiators(): java.lang.Iterable<me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiators>;
								public withValueInstantiators(param0: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiators): me.pushy.sdk.lib.jackson.databind.cfg.DeserializerFactoryConfig;
								public hasDeserializerModifiers(): boolean;
								public hasKeyDeserializers(): boolean;
								public hasValueInstantiators(): boolean;
								public withAdditionalDeserializers(param0: me.pushy.sdk.lib.jackson.databind.deser.Deserializers): me.pushy.sdk.lib.jackson.databind.cfg.DeserializerFactoryConfig;
								public hasAbstractTypeResolvers(): boolean;
								public keyDeserializers(): java.lang.Iterable<me.pushy.sdk.lib.jackson.databind.deser.KeyDeserializers>;
								public deserializerModifiers(): java.lang.Iterable<me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerModifier>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module cfg {
							export abstract class HandlerInstantiator {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.cfg.HandlerInstantiator>;
								public typeResolverBuilderInstance(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param2: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>;
								public converterInstance(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param2: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.util.Converter<any,any>;
								public constructor();
								public serializerInstance(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param2: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public typeIdResolverInstance(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param2: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver;
								public objectIdGeneratorInstance(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param2: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>;
								public deserializerInstance(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param2: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public keyDeserializerInstance(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param2: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
								public namingStrategyInstance(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param2: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy;
								public virtualPropertyWriterInstance(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.ser.VirtualBeanPropertyWriter;
								public includeFilterInstance(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param2: java.lang.Class<any>): any;
								public resolverIdGeneratorInstance(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param2: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.ObjectIdResolver;
								public valueInstantiatorInstance(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param2: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module cfg {
							export abstract class MapperConfig<T>  extends java.lang.Object {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>>;
								public static EMPTY_INCLUDE: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public static EMPTY_FORMAT: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public _mapperFeatures: number;
								public _base: me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings;
								public getPropertyNamingStrategy(): me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy;
								public getDefaultMergeable(): java.lang.Boolean;
								public constructSpecializedType(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getDefaultPropertyIgnorals(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public isAnnotationProcessingEnabled(): boolean;
								public shouldSortPropertiesAlphabetically(): boolean;
								public getDateFormat(): java.text.DateFormat;
								public compileString(param0: string): me.pushy.sdk.lib.jackson.core.SerializableString;
								public introspectDirectClassAnnotations(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.BeanDescription;
								public getActiveView(): java.lang.Class<any>;
								public canOverrideAccessModifiers(): boolean;
								public with(param0: native.Array<me.pushy.sdk.lib.jackson.databind.MapperFeature>): T;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<T>);
								public constructType(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getTypeFactory(): me.pushy.sdk.lib.jackson.databind.type.TypeFactory;
								public hasMapperFeatures(param0: number): boolean;
								public getDefaultVisibilityChecker(): me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>;
								public getDefaultSetterInfo(): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value;
								public static collectFeatureDefaults(param0: java.lang.Class): number;
								public getDefaultPropertyIgnorals(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public getAttributes(): me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes;
								public findMixInClassFor(param0: java.lang.Class<any>): java.lang.Class<any>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<T>, param1: me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings);
								public getConfigOverride(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverride;
								public useRootWrapping(): boolean;
								public getDefaultPropertyInclusion(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public getTimeZone(): java.util.TimeZone;
								public getDefaultPropertyInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public with(param0: me.pushy.sdk.lib.jackson.databind.MapperFeature, param1: boolean): T;
								public getLocale(): java.util.Locale;
								public getSubtypeResolver(): me.pushy.sdk.lib.jackson.databind.jsontype.SubtypeResolver;
								public typeIdResolverInstance(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver;
								public without(param0: native.Array<me.pushy.sdk.lib.jackson.databind.MapperFeature>): T;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<T>, param1: number);
								public copy(): me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver;
								public findRootName(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public getClassIntrospector(): me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector;
								public introspectDirectClassAnnotations(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.BeanDescription;
								public getDefaultPropertyFormat(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings, param1: number);
								public introspectClassAnnotations(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.BeanDescription;
								public constructType(param0: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getHandlerInstantiator(): me.pushy.sdk.lib.jackson.databind.cfg.HandlerInstantiator;
								public getDefaultPropertyInclusion(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public getDefaultVisibilityChecker(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>;
								public getAnnotationIntrospector(): me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector;
								public typeResolverBuilderInstance(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>;
								public getBase64Variant(): me.pushy.sdk.lib.jackson.core.Base64Variant;
								public introspectClassAnnotations(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.BeanDescription;
								public findRootName(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public findConfigOverride(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverride;
								public isEnabled(param0: me.pushy.sdk.lib.jackson.databind.MapperFeature): boolean;
								public getDefaultTyper(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module cfg {
							export abstract class MapperConfigBase<CFG, T>  extends me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any> implements java.io.Serializable  {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>>;
								public static EMPTY_OVERRIDE: me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverride;
								public _mixIns: me.pushy.sdk.lib.jackson.databind.introspect.SimpleMixInResolver;
								public _subtypeResolver: me.pushy.sdk.lib.jackson.databind.jsontype.SubtypeResolver;
								public _rootName: me.pushy.sdk.lib.jackson.databind.PropertyName;
								public _view: java.lang.Class<any>;
								public _attributes: me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes;
								public _rootNames: me.pushy.sdk.lib.jackson.databind.util.RootNameLookup;
								public _configOverrides: me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverrides;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: me.pushy.sdk.lib.jackson.databind.jsontype.SubtypeResolver);
								public getFullRootName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public getDefaultMergeable(): java.lang.Boolean;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>);
								public withAttributes(param0: java.util.Map<any,any>): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.SimpleMixInResolver, param2: me.pushy.sdk.lib.jackson.databind.util.RootNameLookup, param3: me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverrides);
								public getDefaultPropertyIgnorals(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public with(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): any;
								public with(param0: me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy): any;
								public with(param0: java.util.TimeZone): any;
								public withAttribute(param0: any, param1: any): any;
								public with(param0: me.pushy.sdk.lib.jackson.databind.type.TypeFactory): any;
								public with(param0: me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes): any;
								public with(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): any;
								public getActiveView(): java.lang.Class<any>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings, param1: me.pushy.sdk.lib.jackson.databind.jsontype.SubtypeResolver, param2: me.pushy.sdk.lib.jackson.databind.introspect.SimpleMixInResolver, param3: me.pushy.sdk.lib.jackson.databind.util.RootNameLookup, param4: me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverrides);
								public with(param0: java.text.DateFormat): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings);
								public withRootName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): any;
								public withRootName(param0: string): any;
								public getDefaultVisibilityChecker(): me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>;
								public getDefaultSetterInfo(): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value;
								public without(param0: native.Array<me.pushy.sdk.lib.jackson.databind.MapperFeature>): any;
								public getRootName(): string;
								public getDefaultPropertyIgnorals(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public _withMapperFeatures(param0: number): any;
								public getAttributes(): me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes;
								public findMixInClassFor(param0: java.lang.Class<any>): java.lang.Class<any>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: number);
								public getConfigOverride(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverride;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.SimpleMixInResolver);
								public withAppendedAnnotationIntrospector(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): any;
								public getDefaultPropertyInclusion(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public with(param0: java.util.Locale): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings);
								public getDefaultPropertyInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public withView(param0: java.lang.Class<any>): any;
								public withoutAttribute(param0: any): any;
								public with(param0: native.Array<me.pushy.sdk.lib.jackson.databind.MapperFeature>): any;
								public with(param0: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector): any;
								public with(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>): any;
								public getSubtypeResolver(): me.pushy.sdk.lib.jackson.databind.jsontype.SubtypeResolver;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: number);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
								public with(param0: me.pushy.sdk.lib.jackson.databind.jsontype.SubtypeResolver): any;
								public copy(): me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver;
								public mixInCount(): number;
								public findRootName(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public getDefaultPropertyFormat(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings, param1: number);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: java.lang.Class<any>);
								public _withBase(param0: me.pushy.sdk.lib.jackson.databind.cfg.BaseSettings): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase<any,any>, param1: me.pushy.sdk.lib.jackson.databind.cfg.ContextAttributes);
								public withInsertedAnnotationIntrospector(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): any;
								public getDefaultPropertyInclusion(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public getDefaultVisibilityChecker(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>;
								public with(param0: me.pushy.sdk.lib.jackson.databind.cfg.HandlerInstantiator): any;
								public findRootName(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public findConfigOverride(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverride;
								public with(param0: me.pushy.sdk.lib.jackson.databind.MapperFeature, param1: boolean): any;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module cfg {
							export class MutableConfigOverride extends me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverride {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.cfg.MutableConfigOverride>;
								public setInclude(param0: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value): me.pushy.sdk.lib.jackson.databind.cfg.MutableConfigOverride;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.ConfigOverride);
								public setIgnorals(param0: me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value): me.pushy.sdk.lib.jackson.databind.cfg.MutableConfigOverride;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MutableConfigOverride);
								public copy(): me.pushy.sdk.lib.jackson.databind.cfg.MutableConfigOverride;
								public setIsIgnoredType(param0: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.cfg.MutableConfigOverride;
								public setSetterInfo(param0: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value): me.pushy.sdk.lib.jackson.databind.cfg.MutableConfigOverride;
								public constructor();
								public setMergeable(param0: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.cfg.MutableConfigOverride;
								public setVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value): me.pushy.sdk.lib.jackson.databind.cfg.MutableConfigOverride;
								public setFormat(param0: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value): me.pushy.sdk.lib.jackson.databind.cfg.MutableConfigOverride;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module cfg {
							export class PackageVersion extends me.pushy.sdk.lib.jackson.core.Versioned {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.cfg.PackageVersion>;
								public static VERSION: me.pushy.sdk.lib.jackson.core.Version;
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module cfg {
							export class SerializerFactoryConfig {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.cfg.SerializerFactoryConfig>;
								public static NO_SERIALIZERS: native.Array<me.pushy.sdk.lib.jackson.databind.ser.Serializers>;
								public static NO_MODIFIERS: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerModifier>;
								public _additionalSerializers: native.Array<me.pushy.sdk.lib.jackson.databind.ser.Serializers>;
								public _additionalKeySerializers: native.Array<me.pushy.sdk.lib.jackson.databind.ser.Serializers>;
								public _modifiers: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerModifier>;
								public hasSerializers(): boolean;
								public hasKeySerializers(): boolean;
								public withSerializerModifier(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerModifier): me.pushy.sdk.lib.jackson.databind.cfg.SerializerFactoryConfig;
								public constructor(param0: native.Array<me.pushy.sdk.lib.jackson.databind.ser.Serializers>, param1: native.Array<me.pushy.sdk.lib.jackson.databind.ser.Serializers>, param2: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerModifier>);
								public constructor();
								public hasSerializerModifiers(): boolean;
								public keySerializers(): java.lang.Iterable<me.pushy.sdk.lib.jackson.databind.ser.Serializers>;
								public withAdditionalKeySerializers(param0: me.pushy.sdk.lib.jackson.databind.ser.Serializers): me.pushy.sdk.lib.jackson.databind.cfg.SerializerFactoryConfig;
								public serializers(): java.lang.Iterable<me.pushy.sdk.lib.jackson.databind.ser.Serializers>;
								public serializerModifiers(): java.lang.Iterable<me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerModifier>;
								public withAdditionalSerializers(param0: me.pushy.sdk.lib.jackson.databind.ser.Serializers): me.pushy.sdk.lib.jackson.databind.cfg.SerializerFactoryConfig;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export class AbstractDeserializer extends me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any> implements java.io.Serializable  {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.AbstractDeserializer>;
								public _baseType: me.pushy.sdk.lib.jackson.databind.JavaType;
								public _objectIdReader: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader;
								public _backRefProperties: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
								public _acceptString: boolean;
								public _acceptBoolean: boolean;
								public _acceptInt: boolean;
								public _acceptDouble: boolean;
								public getNullValue(): any;
								public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBuilder, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>);
								public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.BeanDescription);
								public _deserializeFromObjectId(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public constructor();
								public findBackReference(param0: string): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public handledType(): java.lang.Class<any>;
								public supportsUpdate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): java.lang.Boolean;
								public isCachable(): boolean;
								public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
								public _deserializeIfNatural(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public static constructForNonPOJO(param0: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.deser.AbstractDeserializer;
								public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
								public getObjectIdReader(): me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export abstract class BasicDeserializerFactory extends me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.BasicDeserializerFactory>;
								public static UNWRAPPED_CREATOR_PARAM_NAME: me.pushy.sdk.lib.jackson.databind.PropertyName;
								public _factoryConfig: me.pushy.sdk.lib.jackson.databind.cfg.DeserializerFactoryConfig;
								public _findCreatorsFromProperties(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription): java.util.Map<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams,native.Array<me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition>>;
								public constructEnumResolver(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.databind.util.EnumResolver;
								public withAbstractTypeResolver(param0: me.pushy.sdk.lib.jackson.databind.AbstractTypeResolver): me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory;
								public _findCustomMapLikeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.MapLikeType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param5: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findPropertyContentTypeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
								public _constructDefaultValueInstantiator(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
								public withValueInstantiators(param0: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiators): me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory;
								public _handleSingleArgumentFactory(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>, param3: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector, param4: me.pushy.sdk.lib.jackson.databind.deser.impl.CreatorCollector, param5: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod, param6: boolean): boolean;
								public createReferenceDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.type.ReferenceType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public _findJsonValueFor(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
								public findKeyDeserializerFromAnnotation(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
								public constructor();
								public _addDeserializerFactoryMethods(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>, param3: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector, param4: me.pushy.sdk.lib.jackson.databind.deser.impl.CreatorCollector, param5: java.util.Map<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams,native.Array<me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition>>): void;
								public withDeserializerModifier(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerModifier): me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory;
								public _findParamName(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter, param1: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public modifyTypeByAnnotation(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public resolveType(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.databind.JavaType;
								public _reportUnwrappedCreatorProperty(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter): void;
								public withAdditionalDeserializers(param0: me.pushy.sdk.lib.jackson.databind.deser.Deserializers): me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory;
								public _checkImplicitlyNamedConstructors(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>, param3: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector, param4: me.pushy.sdk.lib.jackson.databind.deser.impl.CreatorCollector, param5: java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedConstructor>): void;
								public findTypeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
								public mapAbstractType(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public _valueInstantiatorInstance(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param2: any): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
								public _addDeserializerConstructors(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>, param3: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector, param4: me.pushy.sdk.lib.jackson.databind.deser.impl.CreatorCollector, param5: java.util.Map<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams,native.Array<me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition>>): void;
								public createEnumDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public _findCustomTreeNodeDeserializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public _mapAbstractCollectionType(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): me.pushy.sdk.lib.jackson.databind.type.CollectionType;
								public resolveMemberAndTypeAnnotations(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public _findCustomBeanDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public _checkIfCreatorPropertyBased(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams, param2: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param3: me.pushy.sdk.lib.jackson.annotation.JsonCreator.Mode): boolean;
								public createKeyDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
								public _hasCreatorAnnotation(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): boolean;
								public _findCustomCollectionDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.CollectionType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findValueInstantiator(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
								public createMapDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.type.MapType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public _findCustomCollectionLikeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.DeserializerFactoryConfig);
								public _findCustomMapDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.MapType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param5: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public _handleSingleArgumentConstructor(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>, param3: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector, param4: me.pushy.sdk.lib.jackson.databind.deser.impl.CreatorCollector, param5: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedConstructor, param6: boolean, param7: boolean): boolean;
								public _findCustomArrayDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.ArrayType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findDeserializerFromAnnotation(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public getFactoryConfig(): me.pushy.sdk.lib.jackson.databind.cfg.DeserializerFactoryConfig;
								public createArrayDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.type.ArrayType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public createCollectionDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.type.CollectionType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public _findCustomEnumDeserializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public _findCustomReferenceDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.ReferenceType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public withAdditionalKeyDeserializers(param0: me.pushy.sdk.lib.jackson.databind.deser.KeyDeserializers): me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory;
								public findOptionalStdDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findContentDeserializerFromAnnotation(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findPropertyTypeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
								public createMapLikeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.type.MapLikeType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public createCollectionLikeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public constructCreatorProperty(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.PropertyName, param3: number, param4: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter, param5: me.pushy.sdk.lib.jackson.annotation.JacksonInject.Value): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public _findRemappedType(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public _findImplicitParamName(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter, param1: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public withConfig(param0: me.pushy.sdk.lib.jackson.databind.cfg.DeserializerFactoryConfig): me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory;
								public createTreeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findDefaultDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export class BeanDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializer>;
								public _nullFromCreator: java.lang.Exception;
								public withBeanProperties(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
								public deserializeWithUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.util.NameTransformer);
								public resolve(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBuilder, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap, param3: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>, param4: java.util.Set<string>, param5: boolean, param6: boolean);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader);
								public unwrappingDeserializer(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public deserializeFromObject(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public deserializeFromNull(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public deserializeUsingPropertyBasedWithExternalTypeId(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
								public constructor(param0: java.lang.Class<any>);
								public deserializeWithView(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any, param3: java.lang.Class<any>): any;
								public getNullValue(): any;
								public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: java.util.Set<string>);
								public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
								public deserializeWithExternalTypeId(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
								public withIgnorableProperties(param0: java.util.Set<string>): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializer;
								public constructor();
								public _deserializeUsingPropertyBased(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap);
								public withIgnorableProperties(param0: java.util.Set<string>): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
								public _missingToken(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
								public deserializeWithExternalTypeId(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public asArrayDeserializer(): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
								public deserializeUsingPropertyBasedWithUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public withObjectIdReader(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
								public withObjectIdReader(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializer;
								public _deserializeWithErrorWrapping(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: boolean);
								public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public deserializeWithUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBuilder, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap, param3: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>, param4: java.util.HashSet<string>, param5: boolean, param6: boolean);
								public _deserializeOther(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.core.JsonToken): any;
								public _creatorReturnedNullException(): java.lang.Exception;
								public getValueInstantiator(): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
							}
							export module BeanDeserializer {
								export class BeanReferring extends me.pushy.sdk.lib.jackson.databind.deser.impl.ReadableObjectId.Referring {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializer.BeanReferring>;
									public setBean(param0: any): void;
									public handleResolvedForwardReference(param0: any, param1: any): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export abstract class BeanDeserializerBase extends me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any> {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase>;
								public static TEMP_PROPERTY_NAME: me.pushy.sdk.lib.jackson.databind.PropertyName;
								public _beanType: me.pushy.sdk.lib.jackson.databind.JavaType;
								public _serializationShape: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape;
								public _valueInstantiator: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
								public _delegateDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public _arrayDelegateDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public _propertyBasedCreator: me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyBasedCreator;
								public _nonStandardCreation: boolean;
								public _vanillaProcessing: boolean;
								public _beanProperties: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap;
								public _injectables: native.Array<me.pushy.sdk.lib.jackson.databind.deser.impl.ValueInjector>;
								public _anySetter: me.pushy.sdk.lib.jackson.databind.deser.SettableAnyProperty;
								public _ignorableProps: java.util.Set<string>;
								public _ignoreAllUnknown: boolean;
								public _needViewProcesing: boolean;
								public _backRefs: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
								public _subDeserializers: java.util.HashMap<me.pushy.sdk.lib.jackson.databind.type.ClassKey,me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>>;
								public _unwrappedPropertyHandler: me.pushy.sdk.lib.jackson.databind.deser.impl.UnwrappedPropertyHandler;
								public _externalTypeIdHandler: me.pushy.sdk.lib.jackson.databind.deser.impl.ExternalTypeHandler;
								public _objectIdReader: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader;
								public injectValues(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: any): void;
								public _resolvedObjectIdProperty(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public withBeanProperties(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.util.NameTransformer);
								public resolve(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): void;
								public supportsUpdate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): java.lang.Boolean;
								public deserializeFromString(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public replaceProperty(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader);
								public findProperty(param0: number): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public deserializeFromObjectUsingNonDefault(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public deserializeWithObjectId(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public handleUnknownVanilla(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any, param3: string): void;
								public deserializeFromDouble(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public _replaceProperty(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap, param1: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>, param2: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param3: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): void;
								public handleIgnoredProperty(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any, param3: string): void;
								public _resolveInnerClassValuedProperty(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
								public constructor(param0: java.lang.Class<any>);
								public getObjectIdReader(): me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader;
								public wrapAndThrow(param0: java.lang.Throwable, param1: any, param2: string, param3: me.pushy.sdk.lib.jackson.databind.DeserializationContext): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: java.util.Set<string>);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
								public getBeanClass(): java.lang.Class<any>;
								public findProperty(param0: string): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public _findPropertyUnwrapper(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): me.pushy.sdk.lib.jackson.databind.util.NameTransformer;
								public hasProperty(param0: string): boolean;
								public constructor();
								public _deserializeUsingPropertyBased(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap);
								public findConvertingDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findBackReference(param0: string): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public handledType(): java.lang.Class<any>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
								public _handleTypedObjectId(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any, param3: any): any;
								public isCachable(): boolean;
								public hasViews(): boolean;
								public getPropertyCount(): number;
								public getValueInstantiator(): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
								public deserializeFromBoolean(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public getValueType(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public deserializeFromObjectId(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public creatorProperties(): java.util.Iterator<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
								public findProperty(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public deserializeFromArray(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public handlePolymorphic(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any, param3: me.pushy.sdk.lib.jackson.databind.util.TokenBuffer): any;
								public getEmptyValue(): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase);
								public getEmptyValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public deserializeFromEmbedded(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBuilder, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap, param3: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>, param4: java.util.Set<string>, param5: boolean, param6: boolean);
								public unwrappingDeserializer(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public handleUnknownProperties(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: any, param2: me.pushy.sdk.lib.jackson.databind.util.TokenBuffer): any;
								public deserializeFromObject(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public wrapInstantiationProblem(param0: java.lang.Throwable, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public _resolveMergeAndNullSettings(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param2: me.pushy.sdk.lib.jackson.databind.PropertyMetadata): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public handleUnknownProperty(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any, param3: string): void;
								public getNullValue(): any;
								public _resolveManagedReferenceProperty(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public getEmptyAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
								public deserializeFromNumber(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public getKnownPropertyNames(): java.util.Collection<any>;
								public withIgnorableProperties(param0: java.util.Set<string>): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
								public properties(): java.util.Iterator<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
								public asArrayDeserializer(): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
								public withObjectIdReader(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: boolean);
								public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
								public _convertObjectId(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): any;
								public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public _findSubclassDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: any, param2: me.pushy.sdk.lib.jackson.databind.util.TokenBuffer): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export class BeanDeserializerBuilder {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBuilder>;
								public _config: me.pushy.sdk.lib.jackson.databind.DeserializationConfig;
								public _context: me.pushy.sdk.lib.jackson.databind.DeserializationContext;
								public _beanDesc: me.pushy.sdk.lib.jackson.databind.BeanDescription;
								public _properties: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
								public _injectables: java.util.List<me.pushy.sdk.lib.jackson.databind.deser.impl.ValueInjector>;
								public _backRefProperties: java.util.HashMap<string,me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
								public _ignorableProps: java.util.HashSet<string>;
								public _valueInstantiator: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
								public _objectIdReader: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader;
								public _anySetter: me.pushy.sdk.lib.jackson.databind.deser.SettableAnyProperty;
								public _ignoreAllUnknown: boolean;
								public _buildMethod: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
								public _builderConfig: me.pushy.sdk.lib.jackson.databind.annotation.JsonPOJOBuilder.Value;
								public findProperty(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public setIgnoreUnknownProperties(param0: boolean): void;
								public addInjectable(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.util.Annotations, param3: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param4: any): void;
								public setAnySetter(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableAnyProperty): void;
								public setValueInstantiator(param0: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator): void;
								public _collectAliases(param0: java.util.Collection<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>): java.util.Map<string,java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>>;
								public setObjectIdReader(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader): void;
								public build(): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public getObjectIdReader(): me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader;
								public getBuilderConfig(): me.pushy.sdk.lib.jackson.databind.annotation.JsonPOJOBuilder.Value;
								public addIgnorable(param0: string): void;
								public getAnySetter(): me.pushy.sdk.lib.jackson.databind.deser.SettableAnyProperty;
								public addProperty(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): void;
								public getProperties(): java.util.Iterator<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
								public removeProperty(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public _fixAccess(param0: java.util.Collection<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>): void;
								public getInjectables(): java.util.List<me.pushy.sdk.lib.jackson.databind.deser.impl.ValueInjector>;
								public getBuildMethod(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.BeanDescription, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBuilder);
								public setPOJOBuilder(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod, param1: me.pushy.sdk.lib.jackson.databind.annotation.JsonPOJOBuilder.Value): void;
								public addBackReferenceProperty(param0: string, param1: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): void;
								public hasProperty(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): boolean;
								public buildBuilderBased(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: string): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public addCreatorProperty(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): void;
								public getValueInstantiator(): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
								public buildAbstract(): me.pushy.sdk.lib.jackson.databind.deser.AbstractDeserializer;
								public addOrReplaceProperty(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: boolean): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export class BeanDeserializerFactory extends me.pushy.sdk.lib.jackson.databind.deser.BasicDeserializerFactory {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerFactory>;
								public static DEFAULT_NO_DESER_CLASS_NAMES: java.util.Set<string>;
								public _cfgIllegalClassNames: java.util.Set<string>;
								public static instance: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerFactory;
								public buildBuilderBasedDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public constructSettableProperty(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param3: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public addObjectIdReader(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBuilder): void;
								public constructAnySetter(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.databind.deser.SettableAnyProperty;
								public addInjectables(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBuilder): void;
								public isIgnorableType(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param2: java.lang.Class<any>, param3: java.util.Map<java.lang.Class<any>,java.lang.Boolean>): boolean;
								public addBeanProps(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBuilder): void;
								public checkIllegalTypes(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): void;
								public constructor();
								public constructSetterlessProperty(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public materializeAbstractType(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JavaType;
								public addReferenceProperties(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBuilder): void;
								public filterBeanProps(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBuilder, param3: java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition>, param4: java.util.Set<string>): java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition>;
								public constructBeanDeserializerBuilder(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBuilder;
								public addBackReferenceProperties(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBuilder): void;
								public isPotentialBeanType(param0: java.lang.Class<any>): boolean;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.DeserializerFactoryConfig);
								public findStdDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public createBuilderBasedDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public createBeanDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public buildThrowableDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public buildBeanDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public withConfig(param0: me.pushy.sdk.lib.jackson.databind.cfg.DeserializerFactoryConfig): me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export abstract class BeanDeserializerModifier {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerModifier>;
								public modifyReferenceDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.ReferenceType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public modifyCollectionLikeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public modifyKeyDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.KeyDeserializer): me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
								public updateProperties(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition>): java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition>;
								public updateBuilder(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBuilder): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBuilder;
								public modifyEnumDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public modifyDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public constructor();
								public modifyMapDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.MapType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public modifyArrayDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.ArrayType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public modifyMapLikeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.MapLikeType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public modifyCollectionDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.CollectionType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export class BuilderBasedDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.BuilderBasedDeserializer>;
								public _buildMethod: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
								public _targetType: me.pushy.sdk.lib.jackson.databind.JavaType;
								public withBeanProperties(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
								public deserializeWithUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase);
								public _deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.util.NameTransformer);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BuilderBasedDeserializer);
								public supportsUpdate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): java.lang.Boolean;
								public resolve(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBuilder, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap, param3: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>, param4: java.util.Set<string>, param5: boolean, param6: boolean);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader);
								public unwrappingDeserializer(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public deserializeFromObject(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public finishBuild(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: any): any;
								public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BuilderBasedDeserializer, param1: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBuilder, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap, param4: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>, param5: java.util.Set<string>, param6: boolean, param7: boolean);
								public deserializeUsingPropertyBasedWithExternalTypeId(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
								public constructor(param0: java.lang.Class<any>);
								public deserializeWithView(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any, param3: java.lang.Class<any>): any;
								public getNullValue(): any;
								public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: java.util.Set<string>);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BuilderBasedDeserializer, param1: me.pushy.sdk.lib.jackson.databind.util.NameTransformer);
								public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
								public deserializeWithExternalTypeId(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BuilderBasedDeserializer, param1: java.util.Set<string>);
								public constructor();
								public _deserializeUsingPropertyBased(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BuilderBasedDeserializer, param1: boolean);
								public withIgnorableProperties(param0: java.util.Set<string>): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
								public deserializeWithUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any, param3: me.pushy.sdk.lib.jackson.databind.util.TokenBuffer): any;
								public deserializeWithExternalTypeId(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public asArrayDeserializer(): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
								public deserializeUsingPropertyBasedWithUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public withObjectIdReader(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: boolean);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BuilderBasedDeserializer, param1: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader);
								public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public getValueInstantiator(): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export class ContextualDeserializer {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.ContextualDeserializer>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.deser.ContextualDeserializer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								});
								public constructor();
								public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export class ContextualKeyDeserializer {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.ContextualKeyDeserializer>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.deser.ContextualKeyDeserializer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
								});
								public constructor();
								public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export class CreatorProperty extends me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.CreatorProperty>;
								public _annotated: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter;
								public _injectableValueId: any;
								public _creatorIndex: number;
								public _fallbackSetter: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public isRequired(): boolean;
								public toString(): string;
								public findInjectableValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: any): any;
								public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public setFallbackSetter(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): void;
								public getInjectableValueId(): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyName, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.util.Annotations, param5: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter, param6: number, param7: any, param8: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.CreatorProperty, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider);
								public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider);
								public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
								public fixAccess(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): void;
								public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
								public getCreatorIndex(): number;
								public deserializeSetAndReturn(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyMetadata, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty);
								public deserializeAndSet(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.CreatorProperty, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
								public isVirtual(): boolean;
								public withValueDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public getName(): string;
								public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								public withNullProvider(param0: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public inject(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: any): void;
								public setAndReturn(param0: any, param1: any): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.util.Annotations);
								public withName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
								public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase);
								public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyName, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.util.Annotations, param5: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
								public set(param0: any, param1: any): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
								public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export class DataFormatReaders {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders>;
								public static DEFAULT_MAX_INPUT_LOOKAHEAD: number;
								public _readers: native.Array<me.pushy.sdk.lib.jackson.databind.ObjectReader>;
								public _optimalMatch: me.pushy.sdk.lib.jackson.core.format.MatchStrength;
								public _minimalMatch: me.pushy.sdk.lib.jackson.core.format.MatchStrength;
								public _maxInputLookahead: number;
								public with(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders;
								public toString(): string;
								public findFormat(param0: java.io.InputStream): me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders.Match;
								public with(param0: native.Array<me.pushy.sdk.lib.jackson.databind.ObjectReader>): me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders;
								public findFormat(param0: native.Array<number>, param1: number, param2: number): me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders.Match;
								public withOptimalMatch(param0: me.pushy.sdk.lib.jackson.core.format.MatchStrength): me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders;
								public findFormat(param0: native.Array<number>): me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders.Match;
								public constructor(param0: java.util.Collection<me.pushy.sdk.lib.jackson.databind.ObjectReader>);
								public withType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders;
								public withMaxInputLookahead(param0: number): me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders;
								public withMinimalMatch(param0: me.pushy.sdk.lib.jackson.core.format.MatchStrength): me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders;
								public constructor(param0: native.Array<me.pushy.sdk.lib.jackson.databind.ObjectReader>);
							}
							export module DataFormatReaders {
								export class AccessorForReader extends me.pushy.sdk.lib.jackson.core.format.InputAccessor.Std {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders.AccessorForReader>;
									public hasMoreBytes(): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders, param1: native.Array<number>, param2: number, param3: number);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders, param1: native.Array<number>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders, param1: java.io.InputStream, param2: native.Array<number>);
									public createMatcher(param0: me.pushy.sdk.lib.jackson.core.JsonFactory, param1: me.pushy.sdk.lib.jackson.core.format.MatchStrength): me.pushy.sdk.lib.jackson.core.format.DataFormatMatcher;
									public constructor(param0: native.Array<number>);
									public constructor(param0: java.io.InputStream, param1: native.Array<number>);
									public constructor(param0: native.Array<number>, param1: number, param2: number);
									public createMatcher(param0: me.pushy.sdk.lib.jackson.databind.ObjectReader, param1: me.pushy.sdk.lib.jackson.core.format.MatchStrength): me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders.Match;
									public nextByte(): number;
									public reset(): void;
								}
								export class Match {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.DataFormatReaders.Match>;
									public _originalStream: java.io.InputStream;
									public _bufferedData: native.Array<number>;
									public _bufferedStart: number;
									public _bufferedLength: number;
									public _match: me.pushy.sdk.lib.jackson.databind.ObjectReader;
									public _matchStrength: me.pushy.sdk.lib.jackson.core.format.MatchStrength;
									public getReader(): me.pushy.sdk.lib.jackson.databind.ObjectReader;
									public createParserWithMatch(): me.pushy.sdk.lib.jackson.core.JsonParser;
									public getMatchStrength(): me.pushy.sdk.lib.jackson.core.format.MatchStrength;
									public hasMatch(): boolean;
									public getMatchedFormatName(): string;
									public constructor(param0: java.io.InputStream, param1: native.Array<number>, param2: number, param3: number, param4: me.pushy.sdk.lib.jackson.databind.ObjectReader, param5: me.pushy.sdk.lib.jackson.core.format.MatchStrength);
									public getDataStream(): java.io.InputStream;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export abstract class DefaultDeserializationContext extends me.pushy.sdk.lib.jackson.databind.DeserializationContext {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext>;
								public _objectIds: java.util.LinkedHashMap<me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator.IdKey,me.pushy.sdk.lib.jackson.databind.deser.impl.ReadableObjectId>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory, param1: me.pushy.sdk.lib.jackson.databind.deser.DeserializerCache);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.core.JsonParser, param3: me.pushy.sdk.lib.jackson.databind.InjectableValues);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext);
								public createInstance(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.core.JsonParser, param2: me.pushy.sdk.lib.jackson.databind.InjectableValues): me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext;
								public copy(): me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext;
								public constructor();
								public tryToResolveUnresolvedObjectId(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.ReadableObjectId): boolean;
								public checkUnresolvedObjectId(): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory);
								public deserializerInstance(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: any): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public keyDeserializerInstance(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: any): me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.core.JsonParser, param3: me.pushy.sdk.lib.jackson.databind.InjectableValues);
								public createReadableObjectId(param0: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator.IdKey): me.pushy.sdk.lib.jackson.databind.deser.impl.ReadableObjectId;
								public with(param0: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory): me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory);
								public findObjectId(param0: any, param1: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>, param2: me.pushy.sdk.lib.jackson.annotation.ObjectIdResolver): me.pushy.sdk.lib.jackson.databind.deser.impl.ReadableObjectId;
							}
							export module DefaultDeserializationContext {
								export class Impl extends me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext.Impl>;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext.Impl, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.core.JsonParser, param3: me.pushy.sdk.lib.jackson.databind.InjectableValues);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext.Impl);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext);
									public copy(): me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext;
									public createInstance(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.core.JsonParser, param2: me.pushy.sdk.lib.jackson.databind.InjectableValues): me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory);
									public with(param0: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory): me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.core.JsonParser, param3: me.pushy.sdk.lib.jackson.databind.InjectableValues);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext.Impl, param1: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory, param1: me.pushy.sdk.lib.jackson.databind.deser.DeserializerCache);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.DefaultDeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.core.JsonParser, param3: me.pushy.sdk.lib.jackson.databind.InjectableValues);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export abstract class DeserializationProblemHandler {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.DeserializationProblemHandler>;
								public static NOT_HANDLED: any;
								public handleUnknownProperty(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.core.JsonParser, param2: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param3: any, param4: string): boolean;
								public handleWeirdKey(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: java.lang.Class<any>, param2: string, param3: string): any;
								public handleMissingInstantiator(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator, param3: me.pushy.sdk.lib.jackson.core.JsonParser, param4: string): any;
								public handleWeirdNumberValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: java.lang.Class<any>, param2: java.lang.Number, param3: string): any;
								public handleMissingInstantiator(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.core.JsonParser, param3: string): any;
								public constructor();
								public handleUnexpectedToken(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.core.JsonToken, param3: me.pushy.sdk.lib.jackson.core.JsonParser, param4: string): any;
								public handleInstantiationProblem(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: java.lang.Class<any>, param2: any, param3: java.lang.Throwable): any;
								public handleUnknownTypeId(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: string, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver, param4: string): me.pushy.sdk.lib.jackson.databind.JavaType;
								public handleWeirdStringValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: java.lang.Class<any>, param2: string, param3: string): any;
								public handleMissingTypeId(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver, param3: string): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export class DeserializerCache {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.DeserializerCache>;
								public _cachedDeserializers: java.util.concurrent.ConcurrentHashMap<me.pushy.sdk.lib.jackson.databind.JavaType,me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>>;
								public _incompleteDeserializers: java.util.HashMap<me.pushy.sdk.lib.jackson.databind.JavaType,me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>>;
								public _createDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public _handleUnknownKeyDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
								public _createAndCache2(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public _createAndCacheValueDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public constructor();
								public flushCachedDeserializers(): void;
								public hasValueDeserializerFor(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory, param2: me.pushy.sdk.lib.jackson.databind.JavaType): boolean;
								public findConvertingDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param2: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findConverter(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.util.Converter<any,any>;
								public cachedDeserializersCount(): number;
								public _findCachedDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public _createDeserializer2(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findKeyDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
								public findValueDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findDeserializerFromAnnotation(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public _handleUnknownValueDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export abstract class DeserializerFactory {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory>;
								public static NO_DESERIALIZERS: native.Array<me.pushy.sdk.lib.jackson.databind.deser.Deserializers>;
								public createReferenceDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.type.ReferenceType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public createEnumDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public createArrayDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.type.ArrayType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public createCollectionDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.type.CollectionType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public constructor();
								public withAdditionalKeyDeserializers(param0: me.pushy.sdk.lib.jackson.databind.deser.KeyDeserializers): me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory;
								public withAbstractTypeResolver(param0: me.pushy.sdk.lib.jackson.databind.AbstractTypeResolver): me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory;
								public createKeyDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
								public findValueInstantiator(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
								public createMapDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.type.MapType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public withDeserializerModifier(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerModifier): me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory;
								public createMapLikeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.type.MapLikeType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public withValueInstantiators(param0: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiators): me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory;
								public createBuilderBasedDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public createBeanDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public createCollectionLikeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public withAdditionalDeserializers(param0: me.pushy.sdk.lib.jackson.databind.deser.Deserializers): me.pushy.sdk.lib.jackson.databind.deser.DeserializerFactory;
								public findTypeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
								public mapAbstractType(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public createTreeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export class Deserializers {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.Deserializers>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.deser.Deserializers interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									findEnumDeserializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									findTreeNodeDeserializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									findBeanDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									findReferenceDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.ReferenceType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									findArrayDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.ArrayType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									findCollectionDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.CollectionType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									findCollectionLikeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									findMapDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.MapType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param5: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									findMapLikeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.MapLikeType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param5: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								});
								public constructor();
								public findEnumDeserializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findCollectionDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.CollectionType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findTreeNodeDeserializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findCollectionLikeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findReferenceDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.ReferenceType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findArrayDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.ArrayType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findMapLikeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.MapLikeType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param5: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findBeanDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findMapDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.MapType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param5: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							}
							export module Deserializers {
								export class Base extends me.pushy.sdk.lib.jackson.databind.deser.Deserializers {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.Deserializers.Base>;
									public constructor();
									public findTreeNodeDeserializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public findMapDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.MapType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param5: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public findCollectionLikeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public findReferenceDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.ReferenceType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public findCollectionDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.CollectionType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public findMapLikeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.MapLikeType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param5: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public findArrayDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.ArrayType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public findEnumDeserializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public findBeanDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export class KeyDeserializers {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.KeyDeserializers>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.deser.KeyDeserializers interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									findKeyDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
								});
								public constructor();
								public findKeyDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export class NullValueProvider {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
								});
								public constructor();
								public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export class ResolvableDeserializer {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.ResolvableDeserializer>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.deser.ResolvableDeserializer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									resolve(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): void;
								});
								public constructor();
								public resolve(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export class SettableAnyProperty {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.SettableAnyProperty>;
								public _property: me.pushy.sdk.lib.jackson.databind.BeanProperty;
								public _setter: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public _type: me.pushy.sdk.lib.jackson.databind.JavaType;
								public _valueDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public _valueTypeDeserializer: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
								public _keyDeserializer: me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
								public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public toString(): string;
								public set(param0: any, param1: any, param2: any): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer);
								public _throwAsIOE(param0: java.lang.Exception, param1: any, param2: any): void;
								public hasValueDeserializer(): boolean;
								public fixAccess(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): void;
								public getProperty(): me.pushy.sdk.lib.jackson.databind.BeanProperty;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param5: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer);
								public deserializeAndSet(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any, param3: string): void;
								public withValueDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.deser.SettableAnyProperty;
								public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
							export module SettableAnyProperty {
								export class AnySetterReferring extends me.pushy.sdk.lib.jackson.databind.deser.impl.ReadableObjectId.Referring {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.SettableAnyProperty.AnySetterReferring>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableAnyProperty, param1: me.pushy.sdk.lib.jackson.databind.deser.UnresolvedForwardReference, param2: java.lang.Class<any>, param3: any, param4: string);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.UnresolvedForwardReference, param1: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.UnresolvedForwardReference, param1: me.pushy.sdk.lib.jackson.databind.JavaType);
									public handleResolvedForwardReference(param0: any, param1: any): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export abstract class SettableBeanProperty extends me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
								public static MISSING_VALUE_DESERIALIZER: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public _propName: me.pushy.sdk.lib.jackson.databind.PropertyName;
								public _type: me.pushy.sdk.lib.jackson.databind.JavaType;
								public _wrapperName: me.pushy.sdk.lib.jackson.databind.PropertyName;
								public _contextAnnotations: me.pushy.sdk.lib.jackson.databind.util.Annotations;
								public _valueDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public _valueTypeDeserializer: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
								public _nullProvider: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider;
								public _managedReferenceName: string;
								public _objectIdInfo: me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo;
								public _viewMatcher: me.pushy.sdk.lib.jackson.databind.util.ViewMatcher;
								public _propertyIndex: number;
								public setObjectIdInfo(param0: me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo): void;
								public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public _throwAsIOE(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: java.lang.Exception): java.io.IOException;
								public getDeclaringClass(): java.lang.Class<any>;
								public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider);
								public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
								public fixAccess(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): void;
								public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
								public getCreatorIndex(): number;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty);
								public _throwAsIOE(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: java.lang.Exception, param2: any): void;
								public _throwAsIOE(param0: java.lang.Exception, param1: any): void;
								public withSimpleName(param0: string): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public deserializeWith(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
								public _throwAsIOE(param0: java.lang.Exception): java.io.IOException;
								public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.util.Annotations);
								public getNullValueProvider(): me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
								public getManagedReferenceName(): string;
								public setViews(param0: native.Array<java.lang.Class<any>>): void;
								public assignIndex(param0: number): void;
								public getValueDeserializer(): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase);
								public hasValueTypeDeserializer(): boolean;
								public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public hasViews(): boolean;
								public getValueTypeDeserializer(): me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
								public isRequired(): boolean;
								public toString(): string;
								public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public getPropertyIndex(): number;
								public getInjectableValueId(): any;
								public visibleInView(param0: java.lang.Class<any>): boolean;
								public hasValueDeserializer(): boolean;
								public deserializeSetAndReturn(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyMetadata, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
								public deserializeAndSet(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): void;
								public getObjectIdInfo(): me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo;
								public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public isVirtual(): boolean;
								public withValueDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public getName(): string;
								public withNullProvider(param0: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public setAndReturn(param0: any, param1: any): any;
								public withName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								public setManagedReferenceName(param0: string): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyName, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.util.Annotations, param5: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
								public set(param0: any, param1: any): void;
								public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
							export module SettableBeanProperty {
								export abstract class Delegating extends me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty.Delegating>;
									public delegate: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public isVirtual(): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public assignIndex(param0: number): void;
									public withValueDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public getPropertyIndex(): number;
									public getInjectableValueId(): any;
									public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
									public getDelegate(): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public visibleInView(param0: java.lang.Class<any>): boolean;
									public deserializeAndSet(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): void;
									public set(param0: any, param1: any): void;
									public setAndReturn(param0: any, param1: any): any;
									public hasValueTypeDeserializer(): boolean;
									public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
									public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyName, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.util.Annotations, param5: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public getDeclaringClass(): java.lang.Class<any>;
									public hasValueDeserializer(): boolean;
									public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyMetadata, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
									public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty);
									public fixAccess(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): void;
									public getObjectIdInfo(): me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo;
									public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
									public withDelegate(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public getName(): string;
									public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
									public deserializeSetAndReturn(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public _with(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.util.Annotations);
									public getManagedReferenceName(): string;
									public getCreatorIndex(): number;
									public isRequired(): boolean;
									public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider);
									public getValueDeserializer(): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase);
									public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public hasViews(): boolean;
									public getValueTypeDeserializer(): me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
									public withName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public withNullProvider(param0: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export class UnresolvedForwardReference extends me.pushy.sdk.lib.jackson.databind.JsonMappingException {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.UnresolvedForwardReference>;
								public constructor(param0: java.io.Closeable, param1: string, param2: java.lang.Throwable);
								public getUnresolvedIds(): java.util.List<me.pushy.sdk.lib.jackson.databind.deser.UnresolvedId>;
								public constructor(param0: string, param1: java.lang.Throwable);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation, param2: me.pushy.sdk.lib.jackson.databind.deser.impl.ReadableObjectId);
								public getUnresolvedId(): any;
								public getMessage(): string;
								public getRoid(): me.pushy.sdk.lib.jackson.databind.deser.impl.ReadableObjectId;
								public constructor(param0: java.io.Closeable, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public constructor(param0: java.lang.Throwable);
								public addUnresolvedId(param0: any, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.core.JsonLocation): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation, param3: me.pushy.sdk.lib.jackson.databind.deser.impl.ReadableObjectId);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation, param2: java.lang.Throwable);
								public constructor(param0: java.io.Closeable, param1: string);
								public constructor(param0: string);
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export class UnresolvedId {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.UnresolvedId>;
								public toString(): string;
								public getId(): any;
								public getLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
								public getType(): java.lang.Class<any>;
								public constructor(param0: any, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.core.JsonLocation);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export abstract class ValueInstantiator {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator>;
								public canInstantiate(): boolean;
								public canCreateUsingDelegate(): boolean;
								public getDelegateCreator(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams;
								public _createFromStringFallbacks(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string): any;
								public createFromLong(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: number): any;
								public canCreateFromBoolean(): boolean;
								public getDefaultCreator(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams;
								public canCreateFromString(): boolean;
								public createFromDouble(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: number): any;
								public canCreateFromInt(): boolean;
								public getWithArgsCreator(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams;
								public getDelegateType(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): me.pushy.sdk.lib.jackson.databind.JavaType;
								public canCreateFromDouble(): boolean;
								public getFromObjectArguments(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
								public createUsingDelegate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: any): any;
								public getArrayDelegateCreator(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams;
								public createFromString(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string): any;
								public createFromObjectWith(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: native.Array<any>): any;
								public createFromObjectWith(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>, param2: me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValueBuffer): any;
								public canCreateFromLong(): boolean;
								public getValueClass(): java.lang.Class<any>;
								public createFromBoolean(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: boolean): any;
								public getIncompleteParameter(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter;
								public getArrayDelegateType(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor();
								public createUsingArrayDelegate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: any): any;
								public canCreateUsingDefault(): boolean;
								public createUsingDefault(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public createFromInt(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: number): any;
								public canCreateFromObjectWith(): boolean;
								public getValueTypeDesc(): string;
								public canCreateUsingArrayDelegate(): boolean;
							}
							export module ValueInstantiator {
								export class Base extends me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator.Base>;
									public _valueType: java.lang.Class<any>;
									public constructor();
									public getValueClass(): java.lang.Class<any>;
									public getValueTypeDesc(): string;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
								}
								export class Gettable {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator.Gettable>;
									/**
									 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator$Gettable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: {
										getValueInstantiator(): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
									});
									public constructor();
									public getValueInstantiator(): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export class ValueInstantiators {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiators>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiators interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									findValueInstantiator(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
								});
								public constructor();
								public findValueInstantiator(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
							}
							export module ValueInstantiators {
								export class Base extends me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiators {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiators.Base>;
									public constructor();
									public findValueInstantiator(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class BeanAsArrayBuilderDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer>;
									public _delegate: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
									public _orderedProperties: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
									public _buildMethod: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
									public _targetType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public getNullValue(): any;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public _deserializeNonVanilla(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBuilder, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap, param3: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>, param4: java.util.Set<string>, param5: boolean, param6: boolean);
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader);
									public withObjectIdReader(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase);
									public resolve(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): void;
									public supportsUpdate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): java.lang.Boolean;
									public unwrappingDeserializer(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public withBeanProperties(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
									public _deserializeUsingPropertyBased(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: boolean);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public _deserializeFromNonArray(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public finishBuild(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: any): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.util.NameTransformer);
									public constructor();
									public withIgnorableProperties(param0: java.util.Set<string>): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public deserializeFromObject(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>, param3: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: java.util.Set<string>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public getValueInstantiator(): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
									public asArrayDeserializer(): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class BeanAsArrayDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.BeanAsArrayDeserializer>;
									public _delegate: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
									public _orderedProperties: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
									public getNullValue(): any;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public _deserializeNonVanilla(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBuilder, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap, param3: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>, param4: java.util.Set<string>, param5: boolean, param6: boolean);
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader);
									public withObjectIdReader(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase);
									public resolve(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): void;
									public unwrappingDeserializer(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public withBeanProperties(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
									public _deserializeUsingPropertyBased(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: boolean);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public _deserializeFromNonArray(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.util.NameTransformer);
									public constructor();
									public withIgnorableProperties(param0: java.util.Set<string>): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public deserializeFromObject(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: java.util.Set<string>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public getValueInstantiator(): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
									public asArrayDeserializer(): me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class BeanPropertyMap extends java.lang.Object {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap>;
									public _caseInsensitive: boolean;
									public hasAliases(): boolean;
									public withProperty(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap;
									public find(param0: number): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public replace(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): void;
									public getPropertiesInInsertionOrder(): native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
									public static construct(param0: java.util.Collection<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>, param1: boolean, param2: java.util.Map<string,java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>>): me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap;
									public assignIndexes(): me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap;
									public renameAll(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap;
									public wrapAndThrow(param0: java.lang.Throwable, param1: any, param2: string, param3: me.pushy.sdk.lib.jackson.databind.DeserializationContext): void;
									public constructor(param0: boolean, param1: java.util.Collection<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>);
									public withoutProperties(param0: java.util.Collection<string>): me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap;
									public remove(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): void;
									public find(param0: string): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public _rename(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public size(): number;
									public isCaseInsensitive(): boolean;
									public toString(): string;
									public constructor(param0: boolean, param1: java.util.Collection<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>, param2: java.util.Map<string,java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap, param1: boolean);
									public static construct(param0: java.util.Collection<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>, param1: boolean): me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap;
									public withCaseInsensitivity(param0: boolean): me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap;
									public iterator(): java.util.Iterator<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
									public getPropertyName(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): string;
									public findDeserializeAndSet(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any, param3: string): boolean;
									public init(param0: java.util.Collection<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class CreatorCollector {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.CreatorCollector>;
									public static C_DEFAULT: number;
									public static C_STRING: number;
									public static C_INT: number;
									public static C_LONG: number;
									public static C_DOUBLE: number;
									public static C_BOOLEAN: number;
									public static C_DELEGATE: number;
									public static C_PROPS: number;
									public static C_ARRAY_DELEGATE: number;
									public static TYPE_DESCS: native.Array<string>;
									public _beanDesc: me.pushy.sdk.lib.jackson.databind.BeanDescription;
									public _canFixAccess: boolean;
									public _forceAccess: boolean;
									public _creators: native.Array<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams>;
									public _explicitCreators: number;
									public _hasNonDefaultCreator: boolean;
									public _delegateArgs: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
									public _arrayDelegateArgs: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
									public _propertyBasedArgs: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
									public _incompleteParameter: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.BeanDescription, param1: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>);
									public addBooleanCreator(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams, param1: boolean): void;
									public hasDelegatingCreator(): boolean;
									public addIncompeteParameter(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter): void;
									public constructValueInstantiator(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
									public _isEnumValueOf(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams): boolean;
									public addIntCreator(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams, param1: boolean): void;
									public addLongCreator(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams, param1: boolean): void;
									public addDelegatingCreator(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams, param1: boolean, param2: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>): void;
									public setDefaultCreator(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams): void;
									public addDoubleCreator(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams, param1: boolean): void;
									public addStringCreator(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams, param1: boolean): void;
									public hasPropertyBasedCreator(): boolean;
									public addPropertyCreator(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams, param1: boolean, param2: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>): void;
									public verifyNonDup(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams, param1: number, param2: boolean): boolean;
									public hasDefaultCreator(): boolean;
								}
								export module CreatorCollector {
									export class StdTypeConstructor extends me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.CreatorCollector.StdTypeConstructor>;
										public static TYPE_ARRAY_LIST: number;
										public static TYPE_HASH_MAP: number;
										public static TYPE_LINKED_HASH_MAP: number;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams, param1: number);
										public getMember(): java.lang.reflect.Member;
										public equals(param0: any): boolean;
										public getName(): string;
										public hashCode(): number;
										public getType(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBindings): me.pushy.sdk.lib.jackson.databind.JavaType;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams, param1: native.Array<me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap>);
										public call(): any;
										public constructor();
										public getParameterType(param0: number): me.pushy.sdk.lib.jackson.databind.JavaType;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember);
										public getAnnotated(): java.lang.reflect.AnnotatedElement;
										public getRawType(): java.lang.Class<any>;
										public _construct(): any;
										public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap, param2: native.Array<me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap>);
										public call1(param0: any): any;
										public getValue(param0: any): any;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap);
										public getModifiers(): number;
										public getGenericParameterType(param0: number): java.lang.reflect.Type;
										public setValue(param0: any, param1: any): void;
										public static tryToOptimize(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams;
										public getDeclaringClass(): java.lang.Class<any>;
										public getRawParameterType(param0: number): java.lang.Class<any>;
										public toString(): string;
										public withAnnotations(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap): me.pushy.sdk.lib.jackson.databind.introspect.Annotated;
										public getParameterCount(): number;
										public call(param0: native.Array<any>): any;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class ErrorThrowingDeserializer extends me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.ErrorThrowingDeserializer>;
									public constructor();
									public getNullValue(): any;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.NoClassDefFoundError);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class ExternalTypeHandler {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.ExternalTypeHandler>;
									public start(): me.pushy.sdk.lib.jackson.databind.deser.impl.ExternalTypeHandler;
									public complete(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValueBuffer, param3: me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyBasedCreator): any;
									public _deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: number, param3: string): any;
									public handlePropertyValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: string, param3: any): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: native.Array<me.pushy.sdk.lib.jackson.databind.deser.impl.ExternalTypeHandler.ExtTypedProperty>, param2: java.util.Map<string,any>, param3: native.Array<string>, param4: native.Array<me.pushy.sdk.lib.jackson.databind.util.TokenBuffer>);
									public handleTypePropertyValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: string, param3: any): boolean;
									public complete(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public static builder(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.deser.impl.ExternalTypeHandler.Builder;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.ExternalTypeHandler);
									public _deserializeAndSet(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any, param3: number, param4: string): void;
								}
								export module ExternalTypeHandler {
									export class Builder {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.ExternalTypeHandler.Builder>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public build(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap): me.pushy.sdk.lib.jackson.databind.deser.impl.ExternalTypeHandler;
										public addExternal(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): void;
									}
									export class ExtTypedProperty {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.ExternalTypeHandler.ExtTypedProperty>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer);
										public hasTypePropertyName(param0: string): boolean;
										public getTypeProperty(): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
										public getTypePropertyName(): string;
										public hasDefaultType(): boolean;
										public getProperty(): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
										public linkTypeProperty(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): void;
										public getDefaultTypeId(): string;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class FailingDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.FailingDeserializer>;
									public _message: string;
									public constructor();
									public constructor(param0: string);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public getNullValue(): any;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class FieldProperty extends me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.FieldProperty>;
									public _annotated: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField;
									public _field: java.lang.reflect.Field;
									public _skipNulls: boolean;
									public isVirtual(): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public withValueDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.FieldProperty, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider);
									public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
									public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public deserializeAndSet(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): void;
									public set(param0: any, param1: any): void;
									public setAndReturn(param0: any, param1: any): any;
									public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
									public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyName, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.util.Annotations, param5: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyMetadata, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
									public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty);
									public fixAccess(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): void;
									public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
									public getName(): string;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.FieldProperty, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
									public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
									public deserializeSetAndReturn(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.util.Annotations, param4: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField);
									public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.util.Annotations);
									public isRequired(): boolean;
									public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase);
									public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public withName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public withNullProvider(param0: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.FieldProperty);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class InnerClassProperty extends me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty.Delegating {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.InnerClassProperty>;
									public _creator: java.lang.reflect.Constructor<any>;
									public _annotated: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedConstructor;
									public isVirtual(): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
									public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public deserializeAndSet(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): void;
									public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
									public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyName, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.util.Annotations, param5: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyMetadata, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
									public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty);
									public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
									public withDelegate(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public getName(): string;
									public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
									public deserializeSetAndReturn(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: java.lang.reflect.Constructor<any>);
									public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.util.Annotations);
									public isRequired(): boolean;
									public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedConstructor);
									public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class ManagedReferenceProperty extends me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty.Delegating {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.ManagedReferenceProperty>;
									public _referenceName: string;
									public _isContainer: boolean;
									public _backProperty: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public isVirtual(): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
									public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public deserializeAndSet(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): void;
									public set(param0: any, param1: any): void;
									public setAndReturn(param0: any, param1: any): any;
									public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
									public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyName, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.util.Annotations, param5: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: string, param2: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param3: boolean);
									public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyMetadata, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
									public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty);
									public fixAccess(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): void;
									public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
									public withDelegate(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public getName(): string;
									public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
									public deserializeSetAndReturn(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.util.Annotations);
									public isRequired(): boolean;
									public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase);
									public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class MergingSettableBeanProperty extends me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty.Delegating {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.MergingSettableBeanProperty>;
									public _accessor: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
									public isVirtual(): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
									public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public deserializeAndSet(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): void;
									public set(param0: any, param1: any): void;
									public setAndReturn(param0: any, param1: any): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember);
									public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
									public static construct(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.databind.deser.impl.MergingSettableBeanProperty;
									public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyName, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.util.Annotations, param5: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyMetadata, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
									public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty);
									public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
									public withDelegate(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public getName(): string;
									public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
									public deserializeSetAndReturn(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.util.Annotations);
									public isRequired(): boolean;
									public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase);
									public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.MergingSettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class MethodProperty extends me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.MethodProperty>;
									public _annotated: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
									public _setter: java.lang.reflect.Method;
									public _skipNulls: boolean;
									public isVirtual(): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public withValueDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
									public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public deserializeAndSet(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): void;
									public set(param0: any, param1: any): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.MethodProperty, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
									public setAndReturn(param0: any, param1: any): any;
									public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
									public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyName, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.util.Annotations, param5: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyMetadata, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
									public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty);
									public fixAccess(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.util.Annotations, param4: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod);
									public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.MethodProperty, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider);
									public getName(): string;
									public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
									public deserializeSetAndReturn(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.util.Annotations);
									public isRequired(): boolean;
									public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase);
									public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public withName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public withNullProvider(param0: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.MethodProperty, param1: java.lang.reflect.Method);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class NullsAsEmptyProvider extends me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.NullsAsEmptyProvider>;
									public _deserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class NullsConstantProvider extends me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.NullsConstantProvider>;
									public _nullValue: any;
									public _access: me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public static skipper(): me.pushy.sdk.lib.jackson.databind.deser.impl.NullsConstantProvider;
									public static isNuller(param0: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider): boolean;
									public static nuller(): me.pushy.sdk.lib.jackson.databind.deser.impl.NullsConstantProvider;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public constructor(param0: any);
									public static forValue(param0: any): me.pushy.sdk.lib.jackson.databind.deser.impl.NullsConstantProvider;
									public static isSkipper(param0: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider): boolean;
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class NullsFailProvider extends me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.NullsFailProvider>;
									public _name: me.pushy.sdk.lib.jackson.databind.PropertyName;
									public _type: me.pushy.sdk.lib.jackson.databind.JavaType;
									public static constructForRootValue(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.deser.impl.NullsFailProvider;
									public static constructForProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.deser.impl.NullsFailProvider;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class ObjectIdReader {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader>;
									public _idType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public propertyName: me.pushy.sdk.lib.jackson.databind.PropertyName;
									public generator: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>;
									public resolver: me.pushy.sdk.lib.jackson.annotation.ObjectIdResolver;
									public _deserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public idProperty: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public maySerializeAsObject(): boolean;
									public getDeserializer(): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public readObjectReference(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public isValidReferencePropertyName(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonParser): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.PropertyName, param2: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param4: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param5: me.pushy.sdk.lib.jackson.annotation.ObjectIdResolver);
									public getIdType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public static construct(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.PropertyName, param2: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param4: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param5: me.pushy.sdk.lib.jackson.annotation.ObjectIdResolver): me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class ObjectIdReferenceProperty extends me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReferenceProperty>;
									public isVirtual(): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public withValueDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReferenceProperty, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo);
									public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReferenceProperty, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider);
									public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public deserializeAndSet(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): void;
									public set(param0: any, param1: any): void;
									public setAndReturn(param0: any, param1: any): any;
									public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
									public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyName, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.util.Annotations, param5: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyMetadata, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
									public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty);
									public fixAccess(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): void;
									public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
									public getName(): string;
									public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
									public deserializeSetAndReturn(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.util.Annotations);
									public getCreatorIndex(): number;
									public isRequired(): boolean;
									public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase);
									public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public withName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public withNullProvider(param0: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								}
								export module ObjectIdReferenceProperty {
									export class PropertyReferring extends me.pushy.sdk.lib.jackson.databind.deser.impl.ReadableObjectId.Referring {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReferenceProperty.PropertyReferring>;
										public _pojo: any;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.UnresolvedForwardReference, param1: java.lang.Class<any>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReferenceProperty, param1: me.pushy.sdk.lib.jackson.databind.deser.UnresolvedForwardReference, param2: java.lang.Class<any>, param3: any);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.UnresolvedForwardReference, param1: me.pushy.sdk.lib.jackson.databind.JavaType);
										public handleResolvedForwardReference(param0: any, param1: any): void;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class ObjectIdValueProperty extends me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdValueProperty>;
									public _objectIdReader: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader;
									public isVirtual(): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public withValueDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
									public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public deserializeAndSet(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): void;
									public set(param0: any, param1: any): void;
									public setAndReturn(param0: any, param1: any): any;
									public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdValueProperty, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider);
									public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyName, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.util.Annotations, param5: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyMetadata, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
									public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty);
									public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader, param1: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public getName(): string;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdValueProperty, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
									public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
									public deserializeSetAndReturn(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.util.Annotations);
									public isRequired(): boolean;
									public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase);
									public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public withName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public withNullProvider(param0: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class PropertyBasedCreator {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyBasedCreator>;
									public _propertyCount: number;
									public _valueInstantiator: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
									public _propertyLookup: java.util.HashMap<string,me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
									public _allProperties: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
									public startBuilding(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader): me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValueBuffer;
									public build(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValueBuffer): any;
									public findCreatorProperty(param0: string): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public static construct(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator, param2: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>, param3: boolean): me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyBasedCreator;
									public findCreatorProperty(param0: number): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public static construct(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator, param2: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>, param3: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap): me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyBasedCreator;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator, param2: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>, param3: boolean, param4: boolean);
									public static construct(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator, param2: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>): me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyBasedCreator;
									public properties(): java.util.Collection<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
								}
								export module PropertyBasedCreator {
									export class CaseInsensitiveMap extends java.util.HashMap<string,me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyBasedCreator.CaseInsensitiveMap>;
										public get(param0: any): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
										public put(param0: string, param1: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class PropertyBasedObjectIdGenerator extends me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerators.PropertyGenerator {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator>;
									public constructor();
									public newForSerialization(param0: any): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>;
									public generateId(param0: any): any;
									public forScope(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>;
									public constructor(param0: java.lang.Class<any>);
									public key(param0: any): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator.IdKey;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export abstract class PropertyValue {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValue>;
									public next: me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValue;
									public value: any;
									public assign(param0: any): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValue, param1: any);
								}
								export module PropertyValue {
									export class Any extends me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValue {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValue.Any>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValue, param1: any, param2: me.pushy.sdk.lib.jackson.databind.deser.SettableAnyProperty, param3: string);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValue, param1: any);
										public assign(param0: any): void;
									}
									export class Map extends me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValue {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValue.Map>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValue, param1: any, param2: any);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValue, param1: any);
										public assign(param0: any): void;
									}
									export class Regular extends me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValue {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValue.Regular>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValue, param1: any);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValue, param1: any, param2: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty);
										public assign(param0: any): void;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class PropertyValueBuffer {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValueBuffer>;
									public _parser: me.pushy.sdk.lib.jackson.core.JsonParser;
									public _context: me.pushy.sdk.lib.jackson.databind.DeserializationContext;
									public _objectIdReader: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader;
									public _creatorParameters: native.Array<any>;
									public _paramsNeeded: number;
									public _paramsSeen: number;
									public _paramsSeenBig: java.util.BitSet;
									public _buffered: me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValue;
									public _idValue: any;
									public isComplete(): boolean;
									public bufferAnyProperty(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableAnyProperty, param1: string, param2: any): void;
									public readIdProperty(param0: string): boolean;
									public buffered(): me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValue;
									public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: number, param3: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader);
									public handleIdValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: any): any;
									public hasParameter(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): boolean;
									public getParameters(param0: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>): native.Array<any>;
									public _findMissing(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): any;
									public getParameter(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): any;
									public assignParameter(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: any): boolean;
									public bufferProperty(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: any): void;
									public bufferMapProperty(param0: any, param1: any): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class ReadableObjectId {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.ReadableObjectId>;
									public _item: any;
									public _key: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator.IdKey;
									public _referringProperties: java.util.LinkedList<me.pushy.sdk.lib.jackson.databind.deser.impl.ReadableObjectId.Referring>;
									public _resolver: me.pushy.sdk.lib.jackson.annotation.ObjectIdResolver;
									public tryToResolveUnresolved(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): boolean;
									public getResolver(): me.pushy.sdk.lib.jackson.annotation.ObjectIdResolver;
									public bindItem(param0: any): void;
									public hasReferringProperties(): boolean;
									public referringProperties(): java.util.Iterator<me.pushy.sdk.lib.jackson.databind.deser.impl.ReadableObjectId.Referring>;
									public constructor(param0: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator.IdKey);
									public setResolver(param0: me.pushy.sdk.lib.jackson.annotation.ObjectIdResolver): void;
									public appendReferring(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.ReadableObjectId.Referring): void;
									public resolve(): any;
									public toString(): string;
									public getKey(): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator.IdKey;
								}
								export module ReadableObjectId {
									export abstract class Referring {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.ReadableObjectId.Referring>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.UnresolvedForwardReference, param1: java.lang.Class<any>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.UnresolvedForwardReference, param1: me.pushy.sdk.lib.jackson.databind.JavaType);
										public getBeanType(): java.lang.Class<any>;
										public handleResolvedForwardReference(param0: any, param1: any): void;
										public getLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
										public hasId(param0: any): boolean;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class SetterlessProperty extends me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.SetterlessProperty>;
									public _annotated: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
									public _getter: java.lang.reflect.Method;
									public isVirtual(): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public withValueDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
									public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public deserializeAndSet(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): void;
									public set(param0: any, param1: any): void;
									public setAndReturn(param0: any, param1: any): any;
									public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
									public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyName, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.util.Annotations, param5: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyMetadata, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
									public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty);
									public fixAccess(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.util.Annotations, param4: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod);
									public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
									public getName(): string;
									public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.SetterlessProperty, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider);
									public deserializeSetAndReturn(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.util.Annotations);
									public isRequired(): boolean;
									public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase);
									public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public withName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public withNullProvider(param0: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.impl.SetterlessProperty, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class TypeWrappedDeserializer extends me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any> implements java.io.Serializable  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.TypeWrappedDeserializer>;
									public _typeDeserializer: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
									public _deserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
									public handledType(): java.lang.Class<any>;
									public getDelegatee(): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public getNullValue(): any;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public getEmptyValue(): any;
									public supportsUpdate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): java.lang.Boolean;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public getKnownPropertyNames(): java.util.Collection<any>;
									public getEmptyValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class UnwrappedPropertyHandler {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.UnwrappedPropertyHandler>;
									public _properties: java.util.List<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
									public constructor();
									public renameAll(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.deser.impl.UnwrappedPropertyHandler;
									public constructor(param0: java.util.List<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>);
									public processUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any, param3: me.pushy.sdk.lib.jackson.databind.util.TokenBuffer): any;
									public addProperty(param0: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module impl {
								export class ValueInjector extends me.pushy.sdk.lib.jackson.databind.BeanProperty.Std {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.impl.ValueInjector>;
									public _valueId: any;
									public isVirtual(): boolean;
									public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
									public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public getName(): string;
									public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
									public findValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: any): any;
									public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyName, param3: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param4: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
									public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public isRequired(): boolean;
									public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param3: any);
									public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.PropertyName, param3: me.pushy.sdk.lib.jackson.databind.util.Annotations, param4: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param5: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty.Std, param1: me.pushy.sdk.lib.jackson.databind.JavaType);
									public inject(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: any): void;
									public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
									public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class ArrayBlockingQueueDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.CollectionDeserializer {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.ArrayBlockingQueueDeserializer>;
									public getNullValue(): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.CollectionDeserializer);
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: java.util.Collection<any>): java.util.Collection<any>;
									public constructor(param0: java.lang.Class<any>);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.Collection<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<any>);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param4: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.deser.std.CollectionDeserializer;
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
									public constructor();
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param4: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.deser.std.ArrayBlockingQueueDeserializer;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.deser.std.CollectionDeserializer;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param5: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param6: java.lang.Boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.ArrayBlockingQueueDeserializer);
									public getValueInstantiator(): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
									public createDefaultInstance(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.Collection<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class AtomicBooleanDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<java.util.concurrent.atomic.AtomicBoolean> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.AtomicBooleanDeserializer>;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.concurrent.atomic.AtomicBoolean;
									public getNullValue(): any;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class AtomicReferenceDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.ReferenceTypeDeserializer<java.util.concurrent.atomic.AtomicReference<any>> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.AtomicReferenceDeserializer>;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
									public getNullValue(): any;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.deser.std.ReferenceTypeDeserializer<any>;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.deser.std.AtomicReferenceDeserializer;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param2: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public referenceValue(param0: any): any;
									public getEmptyValue(): any;
									public supportsUpdate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): java.lang.Boolean;
									public getReferenced(param0: java.util.concurrent.atomic.AtomicReference<any>): any;
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.concurrent.atomic.AtomicReference<any>;
									public updateReference(param0: any, param1: any): any;
									public referenceValue(param0: any): java.util.concurrent.atomic.AtomicReference<any>;
									public getReferenced(param0: any): any;
									public updateReference(param0: java.util.concurrent.atomic.AtomicReference<any>, param1: any): java.util.concurrent.atomic.AtomicReference<any>;
									public getEmptyValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export abstract class BaseNodeDeserializer<T>  extends me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.BaseNodeDeserializer<any>>;
									public _supportsUpdates: java.lang.Boolean;
									public _fromFloat(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor();
									public deserializeObject(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
									public getNullValue(): any;
									public deserializeArray(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
									public _fromInt(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public _fromEmbedded(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public deserializeObjectAtName(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
									public updateArray(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.node.ArrayNode): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public deserializeAny(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: java.lang.Class<any>, param1: java.lang.Boolean);
									public _handleDuplicateField(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory, param3: string, param4: me.pushy.sdk.lib.jackson.databind.node.ObjectNode, param5: me.pushy.sdk.lib.jackson.databind.JsonNode, param6: me.pushy.sdk.lib.jackson.databind.JsonNode): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public supportsUpdate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): java.lang.Boolean;
									public updateObject(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.node.ObjectNode): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
									public isCachable(): boolean;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class ByteBufferDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<java.nio.ByteBuffer> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.ByteBufferDeserializer>;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public getNullValue(): any;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.nio.ByteBuffer;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: java.nio.ByteBuffer): java.nio.ByteBuffer;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class CollectionDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<java.util.Collection<any>> implements me.pushy.sdk.lib.jackson.databind.deser.ContextualDeserializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.CollectionDeserializer>;
									public _valueDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public _valueTypeDeserializer: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
									public _valueInstantiator: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
									public _delegateDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public getNullValue(): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.CollectionDeserializer);
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: java.util.Collection<any>): java.util.Collection<any>;
									public handleNonArray(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: java.util.Collection<any>): java.util.Collection<any>;
									public constructor(param0: java.lang.Class<any>);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.Collection<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<any>);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param4: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.deser.std.CollectionDeserializer;
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
									public constructor();
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.deser.std.CollectionDeserializer;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param5: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param6: java.lang.Boolean);
									public getContentDeserializer(): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public getValueInstantiator(): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
									public createDefaultInstance(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.Collection<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
									public isCachable(): boolean;
								}
								export module CollectionDeserializer {
									export class CollectionReferring extends me.pushy.sdk.lib.jackson.databind.deser.impl.ReadableObjectId.Referring {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.CollectionDeserializer.CollectionReferring>;
										public next: java.util.List<any>;
										public handleResolvedForwardReference(param0: any, param1: any): void;
									}
									export class CollectionReferringAccumulator {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.CollectionDeserializer.CollectionReferringAccumulator>;
										public handleUnresolvedReference(param0: me.pushy.sdk.lib.jackson.databind.deser.UnresolvedForwardReference): me.pushy.sdk.lib.jackson.databind.deser.impl.ReadableObjectId.Referring;
										public constructor(param0: java.lang.Class<any>, param1: java.util.Collection<any>);
										public add(param0: any): void;
										public resolveForwardReference(param0: any, param1: any): void;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export abstract class ContainerDeserializerBase<T>  extends me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any> implements me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator.Gettable  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<any>>;
									public _containerType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public _nullProvider: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider;
									public _unwrapSingle: java.lang.Boolean;
									public _skipNullValues: boolean;
									public constructor();
									public getNullValue(): any;
									public wrapAndThrow(param0: java.lang.Throwable, param1: any, param2: string): any;
									public getValueType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public findBackReference(param0: string): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
									public getContentDeserializer(): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<any>);
									public getEmptyAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public getContentType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public getEmptyValue(): any;
									public supportsUpdate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): java.lang.Boolean;
									public getValueInstantiator(): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
									public getEmptyValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class DateDeserializers {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers>;
									public constructor();
									public static find(param0: java.lang.Class<any>, param1: string): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								}
								export module DateDeserializers {
									export class CalendarDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer<java.util.Calendar> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer>;
										public _defaultCtor: java.lang.reflect.Constructor<java.util.Calendar>;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer<any>, param1: java.text.DateFormat, param2: string);
										public withDateFormat(param0: java.text.DateFormat, param1: string): me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
										public constructor();
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.Calendar;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer, param1: java.text.DateFormat, param2: string);
										public withDateFormat(param0: java.text.DateFormat, param1: string): me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer<any>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									}
									export abstract class DateBasedDeserializer<T>  extends me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any> implements me.pushy.sdk.lib.jackson.databind.deser.ContextualDeserializer  {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer<any>>;
										public _customFormat: java.text.DateFormat;
										public _formatString: string;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer<any>, param1: java.text.DateFormat, param2: string);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
										public constructor();
										public withDateFormat(param0: java.text.DateFormat, param1: string): me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer<any>;
										public _parseDate(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.Date;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public _parseDate(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.Date;
										public constructor(param0: java.lang.Class<any>);
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									}
									export class DateDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer<java.util.Date> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.DateDeserializer>;
										public static instance: me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.DateDeserializer;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer<any>, param1: java.text.DateFormat, param2: string);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
										public constructor();
										public withDateFormat(param0: java.text.DateFormat, param1: string): me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer<any>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.DateDeserializer, param1: java.text.DateFormat, param2: string);
										public constructor(param0: java.lang.Class<any>);
										public withDateFormat(param0: java.text.DateFormat, param1: string): me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.DateDeserializer;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.Date;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									}
									export class SqlDateDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer<java.sql.Date> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer>;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer<any>, param1: java.text.DateFormat, param2: string);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
										public constructor();
										public withDateFormat(param0: java.text.DateFormat, param1: string): me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer;
										public withDateFormat(param0: java.text.DateFormat, param1: string): me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer<any>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer, param1: java.text.DateFormat, param2: string);
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.sql.Date;
									}
									export class TimestampDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer<java.sql.Timestamp> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer>;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer<any>, param1: java.text.DateFormat, param2: string);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
										public constructor();
										public withDateFormat(param0: java.text.DateFormat, param1: string): me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.sql.Timestamp;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer, param1: java.text.DateFormat, param2: string);
										public withDateFormat(param0: java.text.DateFormat, param1: string): me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer<any>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export abstract class DelegatingDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.DelegatingDeserializer>;
									public _delegatee: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public constructor();
									public getDelegatee(): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
									public getNullValue(): any;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public findBackReference(param0: string): me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public newDelegatingInstance(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public resolve(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): void;
									public getEmptyValue(): any;
									public supportsUpdate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): java.lang.Boolean;
									public getObjectIdReader(): me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public replaceDelegatee(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
									public isCachable(): boolean;
									public getEmptyValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public getKnownPropertyNames(): java.util.Collection<any>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class EnumDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any> implements me.pushy.sdk.lib.jackson.databind.deser.ContextualDeserializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.EnumDeserializer>;
									public _enumsByIndex: native.Array<any>;
									public _lookupByName: me.pushy.sdk.lib.jackson.databind.util.CompactStringObjectMap;
									public _lookupByToString: me.pushy.sdk.lib.jackson.databind.util.CompactStringObjectMap;
									public _caseInsensitive: java.lang.Boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.util.EnumResolver);
									public _getToStringLookup(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): me.pushy.sdk.lib.jackson.databind.util.CompactStringObjectMap;
									public constructor();
									public getNullValue(): any;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public withResolved(param0: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.deser.std.EnumDeserializer;
									public static deserializerForNoArgsCreator(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.util.EnumResolver, param1: java.lang.Boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.EnumDeserializer, param1: java.lang.Boolean);
									public _deserializeOther(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public _enumClass(): java.lang.Class<any>;
									public static deserializerForCreator(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public static deserializerForCreator(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod, param3: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator, param4: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public isCachable(): boolean;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class EnumMapDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<java.util.EnumMap<any,any>> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.EnumMapDeserializer>;
									public _enumClass: java.lang.Class<any>;
									public _keyDeserializer: me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
									public _valueDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public _valueTypeDeserializer: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
									public _valueInstantiator: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
									public _delegateDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public _propertyBasedCreator: me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyBasedCreator;
									public getNullValue(): any;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<any>);
									public resolve(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): void;
									public getEmptyValue(): any;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param2: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer);
									public constructMap(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.EnumMap<any,any>;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.EnumMap<any,any>;
									public _deserializeUsingProperties(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.EnumMap<any,any>;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator, param2: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param5: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
									public getContentDeserializer(): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.EnumMapDeserializer, param1: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param2: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: java.util.EnumMap): java.util.EnumMap<any,any>;
									public getValueInstantiator(): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider): me.pushy.sdk.lib.jackson.databind.deser.std.EnumMapDeserializer;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
									public isCachable(): boolean;
									public getEmptyValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class EnumSetDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<java.util.EnumSet<any>> implements me.pushy.sdk.lib.jackson.databind.deser.ContextualDeserializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.EnumSetDeserializer>;
									public _enumType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public _enumClass: java.lang.Class<java.lang.Enum>;
									public _enumDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<java.lang.Enum<any>>;
									public _unwrapSingle: java.lang.Boolean;
									public constructor();
									public getNullValue(): any;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.EnumSet<any>;
									public _deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: java.util.EnumSet): java.util.EnumSet<any>;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.deser.std.EnumSetDeserializer;
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.EnumSetDeserializer, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: java.lang.Boolean);
									public withDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.deser.std.EnumSetDeserializer;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
									public supportsUpdate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): java.lang.Boolean;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: java.util.EnumSet<any>): java.util.EnumSet<any>;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public handleNonArray(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: java.util.EnumSet): java.util.EnumSet<any>;
									public isCachable(): boolean;
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class FactoryBasedEnumDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any> implements me.pushy.sdk.lib.jackson.databind.deser.ContextualDeserializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.FactoryBasedEnumDeserializer>;
									public _inputType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public _hasArgs: boolean;
									public _factory: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
									public _deser: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public _valueInstantiator: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
									public _creatorProps: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
									public constructor();
									public getNullValue(): any;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator, param4: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>);
									public _deserializeWithErrorWrapping(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty): any;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public deserializeEnumUsingPropertyBased(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyBasedCreator): any;
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public wrapAndThrow(param0: java.lang.Throwable, param1: any, param2: string, param3: me.pushy.sdk.lib.jackson.databind.DeserializationContext): void;
									public supportsUpdate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): java.lang.Boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.FactoryBasedEnumDeserializer, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
									public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export abstract class FromStringDeserializer<T>  extends me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.FromStringDeserializer<any>>;
									public constructor();
									public getNullValue(): any;
									public _deserializeEmbedded(param0: any, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public _deserialize(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public findDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public _deserializeFromEmptyString(): any;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public static findDeserializer(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.deser.std.FromStringDeserializer.Std;
									public static types(): native.Array<java.lang.Class<any>>;
								}
								export module FromStringDeserializer {
									export class Std extends me.pushy.sdk.lib.jackson.databind.deser.std.FromStringDeserializer<any> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.FromStringDeserializer.Std>;
										public static STD_FILE: number;
										public static STD_URL: number;
										public static STD_URI: number;
										public static STD_CLASS: number;
										public static STD_JAVA_TYPE: number;
										public static STD_CURRENCY: number;
										public static STD_PATTERN: number;
										public static STD_LOCALE: number;
										public static STD_CHARSET: number;
										public static STD_TIME_ZONE: number;
										public static STD_INET_ADDRESS: number;
										public static STD_INET_SOCKET_ADDRESS: number;
										public static STD_STRING_BUILDER: number;
										public _kind: number;
										public constructor(param0: java.lang.Class<any>, param1: number);
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
										public _deserialize(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public constructor();
										public constructor(param0: java.lang.Class<any>);
										public _deserializeFromEmptyString(): any;
										public _firstHyphenOrUnderscore(param0: string): number;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class JdkDeserializers {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.JdkDeserializers>;
									public constructor();
									public static find(param0: java.lang.Class<any>, param1: string): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class JsonLocationInstantiator extends me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator.Base {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.JsonLocationInstantiator>;
									public constructor();
									public getFromObjectArguments(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
									public createFromObjectWith(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: native.Array<any>): any;
									public createFromObjectWith(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>, param2: me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValueBuffer): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public canCreateFromObjectWith(): boolean;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class JsonNodeDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.BaseNodeDeserializer<me.pushy.sdk.lib.jackson.databind.JsonNode> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.JsonNodeDeserializer>;
									public constructor();
									public static getDeserializer(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public getNullValue(): any;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: java.lang.Class<any>, param1: java.lang.Boolean);
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
								}
								export module JsonNodeDeserializer {
									export class ArrayDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.BaseNodeDeserializer<me.pushy.sdk.lib.jackson.databind.node.ArrayNode> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer>;
										public static _instance: me.pushy.sdk.lib.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.node.ArrayNode): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public constructor();
										public static getInstance(): me.pushy.sdk.lib.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer;
										public constructor(param0: java.lang.Class<any>, param1: java.lang.Boolean);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									}
									export class ObjectDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.BaseNodeDeserializer<me.pushy.sdk.lib.jackson.databind.node.ObjectNode> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer>;
										public static _instance: me.pushy.sdk.lib.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer;
										public getNullValue(): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.node.ObjectNode): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public constructor();
										public constructor(param0: java.lang.Class<any>, param1: java.lang.Boolean);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public static getInstance(): me.pushy.sdk.lib.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer;
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class MapDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<java.util.Map<any,any>> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.MapDeserializer>;
									public _keyDeserializer: me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
									public _standardStringKey: boolean;
									public _valueDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public _valueTypeDeserializer: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
									public _valueInstantiator: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
									public _delegateDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public _propertyBasedCreator: me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyBasedCreator;
									public _hasDefaultCreator: boolean;
									public _ignorableProperties: java.util.Set<string>;
									public getNullValue(): any;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param2: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param3: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param4: java.util.Set<string>): me.pushy.sdk.lib.jackson.databind.deser.std.MapDeserializer;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public constructor(param0: java.lang.Class<any>);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.Map<any,any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator, param2: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer);
									public resolve(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): void;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
									public constructor();
									public setIgnorableProperties(param0: native.Array<string>): void;
									public _readAndBindStringKeyMap(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: java.util.Map<any,any>): void;
									public _isStdKeyDeser(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.KeyDeserializer): boolean;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: java.util.Map<any,any>): java.util.Map<any,any>;
									public getValueType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getMapClass(): java.lang.Class<any>;
									public _readAndBind(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: java.util.Map<any,any>): void;
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.MapDeserializer);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
									public getContentDeserializer(): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.MapDeserializer, param1: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param2: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param5: java.util.Set<string>);
									public getValueInstantiator(): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
									public _deserializeUsingCreator(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.Map<any,any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
									public setIgnorableProperties(param0: java.util.Set<string>): void;
									public isCachable(): boolean;
								}
								export module MapDeserializer {
									export class MapReferring extends me.pushy.sdk.lib.jackson.databind.deser.impl.ReadableObjectId.Referring {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.MapDeserializer.MapReferring>;
										public next: java.util.Map<any,any>;
										public key: any;
										public handleResolvedForwardReference(param0: any, param1: any): void;
									}
									export class MapReferringAccumulator {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.MapDeserializer.MapReferringAccumulator>;
										public put(param0: any, param1: any): void;
										public handleUnresolvedReference(param0: me.pushy.sdk.lib.jackson.databind.deser.UnresolvedForwardReference, param1: any): me.pushy.sdk.lib.jackson.databind.deser.impl.ReadableObjectId.Referring;
										public resolveForwardReference(param0: any, param1: any): void;
										public constructor(param0: java.lang.Class<any>, param1: java.util.Map<any,any>);
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class MapEntryDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<java.util.Map.Entry<any,any>> implements me.pushy.sdk.lib.jackson.databind.deser.ContextualDeserializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.MapEntryDeserializer>;
									public _keyDeserializer: me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
									public _valueDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public _valueTypeDeserializer: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.MapEntryDeserializer);
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param2: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer);
									public getNullValue(): any;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.MapEntryDeserializer, param1: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param2: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
									public getContentDeserializer(): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param2: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.deser.std.MapEntryDeserializer;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<any>);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.Map.Entry<any,any>;
									public getContentType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: java.util.Map.Entry<any,any>): java.util.Map.Entry<any,any>;
									public getValueInstantiator(): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class NullifyingDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.NullifyingDeserializer>;
									public static instance: me.pushy.sdk.lib.jackson.databind.deser.std.NullifyingDeserializer;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public getNullValue(): any;
									public supportsUpdate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): java.lang.Boolean;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class NumberDeserializers {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers>;
									public constructor();
									public static find(param0: java.lang.Class<any>, param1: string): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								}
								export module NumberDeserializers {
									export class BigDecimalDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<java.math.BigDecimal> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer>;
										public static instance: me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public getEmptyValue(): any;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
										public constructor();
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.math.BigDecimal;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public getEmptyValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									}
									export class BigIntegerDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<java.math.BigInteger> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer>;
										public static instance: me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public getEmptyValue(): any;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
										public constructor();
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.math.BigInteger;
										public getEmptyValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									}
									export class BooleanDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer<java.lang.Boolean> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer>;
										public constructor(param0: java.lang.Class<java.lang.Boolean>, param1: java.lang.Boolean);
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
										public _parseBoolean(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.lang.Boolean;
										public constructor();
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.lang.Boolean;
										public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
										public constructor(param0: java.lang.Class<any>, param1: any, param2: any);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): java.lang.Boolean;
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									}
									export class ByteDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer<java.lang.Byte> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer>;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.lang.Byte;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
										public constructor();
										public constructor(param0: java.lang.Class<java.lang.Byte>, param1: java.lang.Byte);
										public constructor(param0: java.lang.Class<any>, param1: any, param2: any);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
										public _parseByte(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.lang.Byte;
									}
									export class CharacterDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer<java.lang.Character> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer>;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.lang.Character;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
										public constructor();
										public constructor(param0: java.lang.Class<any>, param1: any, param2: any);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public constructor(param0: java.lang.Class<java.lang.Character>, param1: java.lang.Character);
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									}
									export class DoubleDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer<java.lang.Double> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer>;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): java.lang.Double;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
										public constructor();
										public _parseDouble(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.lang.Double;
										public constructor(param0: java.lang.Class<java.lang.Double>, param1: java.lang.Double);
										public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.lang.Double;
										public constructor(param0: java.lang.Class<any>, param1: any, param2: any);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									}
									export class FloatDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer<java.lang.Float> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer>;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public _parseFloat(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.lang.Float;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
										public constructor();
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.lang.Float;
										public constructor(param0: java.lang.Class<java.lang.Float>, param1: java.lang.Float);
										public constructor(param0: java.lang.Class<any>, param1: any, param2: any);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									}
									export class IntegerDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer<java.lang.Integer> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer>;
										public _parseInteger(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.lang.Integer;
										public getNullValue(): any;
										public isCachable(): boolean;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
										public constructor();
										public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): java.lang.Integer;
										public constructor(param0: java.lang.Class<java.lang.Integer>, param1: java.lang.Integer);
										public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
										public constructor(param0: java.lang.Class<any>, param1: any, param2: any);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.lang.Integer;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									}
									export class LongDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer<java.lang.Long> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.LongDeserializer>;
										public getNullValue(): any;
										public isCachable(): boolean;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public _parseLong(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.lang.Long;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
										public constructor();
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.lang.Long;
										public constructor(param0: java.lang.Class<any>, param1: any, param2: any);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
										public constructor(param0: java.lang.Class<java.lang.Long>, param1: java.lang.Long);
									}
									export class NumberDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer>;
										public static instance: me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
										public constructor();
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
										public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
									}
									export abstract class PrimitiveOrWrapperDeserializer<T>  extends me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer<any>>;
										public _nullValue: any;
										public _emptyValue: any;
										public _primitive: boolean;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public constructor(param0: java.lang.Class<any>, param1: any, param2: any);
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public getEmptyValue(): any;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
										public constructor();
										public getEmptyValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public constructor(param0: java.lang.Class<any>);
									}
									export class ShortDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer<java.lang.Short> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer>;
										public constructor(param0: java.lang.Class<java.lang.Short>, param1: java.lang.Short);
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public _parseShort(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.lang.Short;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
										public constructor();
										public constructor(param0: java.lang.Class<any>, param1: any, param2: any);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.lang.Short;
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class ObjectArrayDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<native.Array<any>> implements me.pushy.sdk.lib.jackson.databind.deser.ContextualDeserializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.ObjectArrayDeserializer>;
									public static NO_OBJECTS: native.Array<any>;
									public _untyped: boolean;
									public _elementClass: java.lang.Class<any>;
									public _elementDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public _elementTypeDeserializer: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
									public getNullValue(): any;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.ObjectArrayDeserializer, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param4: java.lang.Boolean);
									public deserializeFromBase64(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<java.lang.Byte>;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<any>);
									public getEmptyAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public getEmptyValue(): any;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<any>;
									public withDeserializer(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.deser.std.ObjectArrayDeserializer;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer);
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param3: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.deser.std.ObjectArrayDeserializer;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: native.Array<any>): native.Array<any>;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
									public getContentDeserializer(): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): native.Array<any>;
									public getValueInstantiator(): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
									public isCachable(): boolean;
									public getEmptyValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public handleNonArray(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<any>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export abstract class PrimitiveArrayDeserializers<T>  extends me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any> implements me.pushy.sdk.lib.jackson.databind.deser.ContextualDeserializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<any>>;
									public _unwrapSingle: java.lang.Boolean;
									public _nuller: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider;
									public constructor();
									public getNullValue(): any;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<any>, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<any>;
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public handleNonArray(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public _concat(param0: any, param1: any): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public _constructEmpty(): any;
									public _failOnNull(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): void;
									public getEmptyAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public getEmptyValue(): any;
									public supportsUpdate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): java.lang.Boolean;
									public static forType(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public handleSingleElementUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public getEmptyValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
								}
								export module PrimitiveArrayDeserializers {
									export class BooleanDeser extends me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<native.Array<boolean>> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser>;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public handleSingleElementUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<boolean>;
										public _constructEmpty(): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<boolean>;
										public constructor();
										public _concat(param0: native.Array<boolean>, param1: native.Array<boolean>): native.Array<boolean>;
										public _concat(param0: any, param1: any): any;
										public handleSingleElementUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<any>, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
										public withResolved(param0: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<any>;
										public _constructEmpty(): native.Array<boolean>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									}
									export class ByteDeser extends me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<native.Array<number>> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser>;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public _constructEmpty(): native.Array<number>;
										public _constructEmpty(): any;
										public constructor();
										public handleSingleElementUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<number>;
										public _concat(param0: any, param1: any): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<number>;
										public handleSingleElementUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<any>, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
										public withResolved(param0: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<any>;
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
										public _concat(param0: native.Array<number>, param1: native.Array<number>): native.Array<number>;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									}
									export class CharDeser extends me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<native.Array<string>> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser>;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public _constructEmpty(): any;
										public constructor();
										public _constructEmpty(): native.Array<string>;
										public _concat(param0: any, param1: any): any;
										public handleSingleElementUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<string>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<any>, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
										public withResolved(param0: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<any>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
										public constructor(param0: java.lang.Class<any>);
										public handleSingleElementUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<string>;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
										public _concat(param0: native.Array<string>, param1: native.Array<string>): native.Array<string>;
									}
									export class DoubleDeser extends me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<native.Array<number>> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser>;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public _constructEmpty(): native.Array<number>;
										public _constructEmpty(): any;
										public constructor();
										public handleSingleElementUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<number>;
										public _concat(param0: any, param1: any): any;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<number>;
										public handleSingleElementUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<any>, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
										public withResolved(param0: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<any>;
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
										public _concat(param0: native.Array<number>, param1: native.Array<number>): native.Array<number>;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									}
									export class FloatDeser extends me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<native.Array<number>> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser>;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public _constructEmpty(): native.Array<number>;
										public _constructEmpty(): any;
										public constructor();
										public handleSingleElementUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<number>;
										public _concat(param0: any, param1: any): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<number>;
										public handleSingleElementUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<any>, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
										public withResolved(param0: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<any>;
										public constructor(param0: java.lang.Class<any>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
										public _concat(param0: native.Array<number>, param1: native.Array<number>): native.Array<number>;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									}
									export class IntDeser extends me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<native.Array<number>> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser>;
										public static instance: me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public _constructEmpty(): native.Array<number>;
										public _constructEmpty(): any;
										public constructor();
										public handleSingleElementUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<number>;
										public _concat(param0: any, param1: any): any;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<number>;
										public handleSingleElementUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<any>, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
										public withResolved(param0: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<any>;
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
										public _concat(param0: native.Array<number>, param1: native.Array<number>): native.Array<number>;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									}
									export class LongDeser extends me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<native.Array<number>> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser>;
										public static instance: me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public _constructEmpty(): native.Array<number>;
										public _constructEmpty(): any;
										public constructor();
										public handleSingleElementUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<number>;
										public _concat(param0: any, param1: any): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<number>;
										public handleSingleElementUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<any>, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
										public withResolved(param0: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<any>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
										public _concat(param0: native.Array<number>, param1: native.Array<number>): native.Array<number>;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									}
									export class ShortDeser extends me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<native.Array<number>> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public _constructEmpty(): native.Array<number>;
										public _constructEmpty(): any;
										public constructor();
										public handleSingleElementUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<number>;
										public _concat(param0: any, param1: any): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<number>;
										public handleSingleElementUnwrapped(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<any>, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
										public withResolved(param0: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers<any>;
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
										public _concat(param0: native.Array<number>, param1: native.Array<number>): native.Array<number>;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export abstract class ReferenceTypeDeserializer<T>  extends me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any> implements me.pushy.sdk.lib.jackson.databind.deser.ContextualDeserializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.ReferenceTypeDeserializer<any>>;
									public _fullType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public _valueInstantiator: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
									public _valueTypeDeserializer: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
									public _valueDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
									public getNullValue(): any;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.deser.std.ReferenceTypeDeserializer<any>;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public getValueType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param2: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public getEmptyAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public referenceValue(param0: any): any;
									public getEmptyValue(): any;
									public supportsUpdate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): java.lang.Boolean;
									public updateReference(param0: any, param1: any): any;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public getReferenced(param0: any): any;
									public getEmptyValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class StackTraceElementDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<java.lang.StackTraceElement> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.StackTraceElementDeserializer>;
									public constructor();
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.lang.StackTraceElement;
									public constructValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string, param2: string, param3: string, param4: number, param5: string, param6: string): java.lang.StackTraceElement;
									public getNullValue(): any;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
									public constructValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string, param2: string, param3: string, param4: number, param5: string, param6: string, param7: string): java.lang.StackTraceElement;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class StdDelegatingDeserializer<T>  extends me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.StdDelegatingDeserializer<any>>;
									public _converter: me.pushy.sdk.lib.jackson.databind.util.Converter<any,any>;
									public _delegateType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public _delegateDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public constructor();
									public getDelegatee(): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public handledType(): java.lang.Class<any>;
									public getNullValue(): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.util.Converter<any,any>);
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDelegatingDeserializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public convertValue(param0: any): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public resolve(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): void;
									public supportsUpdate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): java.lang.Boolean;
									public _handleIncompatibleUpdateValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public withDelegate(param0: me.pushy.sdk.lib.jackson.databind.util.Converter<any,any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.deser.std.StdDelegatingDeserializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.util.Converter<any,any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export abstract class StdDeserializer<T>  extends me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any> implements java.io.Serializable  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>>;
									public static F_MASK_INT_COERCIONS: number;
									public static F_MASK_ACCEPT_ARRAYS: number;
									public _valueClass: java.lang.Class<any>;
									public _findNullProvider(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider;
									public _parseFloatPrimitive(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): number;
									public isDefaultKeyDeserializer(param0: me.pushy.sdk.lib.jackson.databind.KeyDeserializer): boolean;
									public _parseBytePrimitive(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): number;
									public _shortOverflow(param0: number): boolean;
									public findContentNullStyle(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Nulls;
									public _verifyStringForScalarCoercion(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string): void;
									public _intOverflow(param0: number): boolean;
									public _deserializeFromEmpty(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public _coerceTextualNull(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: boolean): any;
									public _byteOverflow(param0: number): boolean;
									public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public _verifyNullForPrimitive(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): void;
									public _parseShortPrimitive(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): number;
									public _isPosInf(param0: string): boolean;
									public _parseString(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): string;
									public handledType(): java.lang.Class<any>;
									public _parseDoublePrimitive(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): number;
									public _parseDate(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.Date;
									public _parseFloatPrimitive(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string): number;
									public _parseDoublePrimitive(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string): number;
									public handleMissingEndArrayForSingle(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): void;
									public _parseDateFromArray(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.Date;
									public _isIntNumber(param0: string): boolean;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public findValueNullProvider(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty, param2: me.pushy.sdk.lib.jackson.databind.PropertyMetadata): me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider;
									public _parseIntPrimitive(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): number;
									public _verifyNumberForScalarCoercion(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.core.JsonParser): void;
									public _parseIntPrimitive(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string): number;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public static parseDouble(param0: string): number;
									public findDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public _parseBooleanFromInt(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): boolean;
									public _coerceEmptyString(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: boolean): any;
									public findConvertingContentDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public getNullValue(): any;
									public getValueClass(): java.lang.Class<any>;
									public _verifyEndArrayForSingle(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): void;
									public _isNegInf(param0: string): boolean;
									public _failDoubleToIntCoercion(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: string): void;
									public findFormatFeature(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Class<any>, param3: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature): java.lang.Boolean;
									public constructor(param0: java.lang.Class<any>);
									public _deserializeWrappedValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public _parseDate(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.Date;
									public _parseLongPrimitive(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string): number;
									public _coerceNullToken(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: boolean): any;
									public _nonNullNumber(param0: java.lang.Number): java.lang.Number;
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
									public _hasTextualNull(param0: string): boolean;
									public constructor();
									public _reportFailedNullCoerce(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: boolean, param2: java.lang.Enum<any>, param3: string): void;
									public handleUnknownProperty(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any, param3: string): void;
									public _verifyNullForScalarCoercion(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string): void;
									public getValueType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public _parseBooleanPrimitive(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): boolean;
									public _isNaN(param0: string): boolean;
									public findContentNullProvider(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider;
									public _parseLongPrimitive(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): number;
									public _deserializeFromArray(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public _coercedTypeDesc(): string;
									public _verifyNullForPrimitiveCoercion(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string): void;
									public isDefaultDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): boolean;
									public _isEmptyOrTextualNull(param0: string): boolean;
									public _coerceIntegral(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class StdKeyDeserializer extends me.pushy.sdk.lib.jackson.databind.KeyDeserializer {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.StdKeyDeserializer>;
									public static TYPE_BOOLEAN: number;
									public static TYPE_BYTE: number;
									public static TYPE_SHORT: number;
									public static TYPE_CHAR: number;
									public static TYPE_INT: number;
									public static TYPE_LONG: number;
									public static TYPE_FLOAT: number;
									public static TYPE_DOUBLE: number;
									public static TYPE_LOCALE: number;
									public static TYPE_DATE: number;
									public static TYPE_CALENDAR: number;
									public static TYPE_UUID: number;
									public static TYPE_URI: number;
									public static TYPE_URL: number;
									public static TYPE_CLASS: number;
									public static TYPE_CURRENCY: number;
									public static TYPE_BYTE_ARRAY: number;
									public _kind: number;
									public _keyClass: java.lang.Class<any>;
									public _deser: me.pushy.sdk.lib.jackson.databind.deser.std.FromStringDeserializer<any>;
									public static forType(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.deser.std.StdKeyDeserializer;
									public deserializeKey(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor();
									public _parseDouble(param0: string): number;
									public getKeyClass(): java.lang.Class<any>;
									public _parseInt(param0: string): number;
									public _parseLong(param0: string): number;
									public constructor(param0: number, param1: java.lang.Class<any>);
									public _weirdKey(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string, param2: java.lang.Exception): any;
									public _parse(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: number, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.std.FromStringDeserializer<any>);
								}
								export module StdKeyDeserializer {
									export class DelegatingKD extends me.pushy.sdk.lib.jackson.databind.KeyDeserializer {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.StdKeyDeserializer.DelegatingKD>;
										public _keyClass: java.lang.Class<any>;
										public _delegate: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
										public deserializeKey(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getKeyClass(): java.lang.Class<any>;
										public constructor();
										public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
									}
									export class EnumKD extends me.pushy.sdk.lib.jackson.databind.deser.std.StdKeyDeserializer {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.StdKeyDeserializer.EnumKD>;
										public _byNameResolver: me.pushy.sdk.lib.jackson.databind.util.EnumResolver;
										public _factory: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
										public _byToStringResolver: me.pushy.sdk.lib.jackson.databind.util.EnumResolver;
										public _parse(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public constructor(param0: number, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.std.FromStringDeserializer<any>);
										public constructor();
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.util.EnumResolver, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod);
										public constructor(param0: number, param1: java.lang.Class<any>);
									}
									export class StringCtorKeyDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.StdKeyDeserializer {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.StdKeyDeserializer.StringCtorKeyDeserializer>;
										public _ctor: java.lang.reflect.Constructor<any>;
										public _parse(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public constructor(param0: number, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.std.FromStringDeserializer<any>);
										public constructor();
										public constructor(param0: java.lang.reflect.Constructor<any>);
										public constructor(param0: number, param1: java.lang.Class<any>);
									}
									export class StringFactoryKeyDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.StdKeyDeserializer {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.StdKeyDeserializer.StringFactoryKeyDeserializer>;
										public _parse(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public constructor(param0: number, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.std.FromStringDeserializer<any>);
										public constructor();
										public constructor(param0: java.lang.reflect.Method);
										public constructor(param0: number, param1: java.lang.Class<any>);
									}
									export class StringKD extends me.pushy.sdk.lib.jackson.databind.deser.std.StdKeyDeserializer {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.StdKeyDeserializer.StringKD>;
										public deserializeKey(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public static forType(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.deser.std.StdKeyDeserializer.StringKD;
										public static forType(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.deser.std.StdKeyDeserializer;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class StdKeyDeserializers extends me.pushy.sdk.lib.jackson.databind.deser.KeyDeserializers {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.StdKeyDeserializers>;
									public constructor();
									public static constructEnumKeyDeserializer(param0: me.pushy.sdk.lib.jackson.databind.util.EnumResolver, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
									public findKeyDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
									public static constructDelegatingKeyDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
									public static constructEnumKeyDeserializer(param0: me.pushy.sdk.lib.jackson.databind.util.EnumResolver): me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
									public static findStringBasedKeyDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export abstract class StdNodeBasedDeserializer<T>  extends me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any> implements me.pushy.sdk.lib.jackson.databind.deser.ResolvableDeserializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.StdNodeBasedDeserializer<any>>;
									public _treeDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public constructor();
									public getNullValue(): any;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public convert(param0: me.pushy.sdk.lib.jackson.databind.JsonNode, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public resolve(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): void;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdNodeBasedDeserializer<any>);
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export abstract class StdScalarDeserializer<T>  extends me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>>;
									public constructor();
									public getNullValue(): any;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public getEmptyAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public supportsUpdate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): java.lang.Boolean;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class StdValueInstantiator extends me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.StdValueInstantiator>;
									public _valueTypeDesc: string;
									public _valueClass: java.lang.Class<any>;
									public _defaultCreator: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams;
									public _withArgsCreator: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams;
									public _constructorArguments: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
									public _delegateType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public _delegateCreator: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams;
									public _delegateArguments: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
									public _arrayDelegateType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public _arrayDelegateCreator: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams;
									public _arrayDelegateArguments: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
									public _fromStringCreator: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams;
									public _fromIntCreator: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams;
									public _fromLongCreator: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams;
									public _fromDoubleCreator: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams;
									public _fromBooleanCreator: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams;
									public _incompleteParameter: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter;
									public createUsingArrayDelegate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: any): any;
									public createFromInt(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: number): any;
									public canCreateFromString(): boolean;
									public canCreateFromLong(): boolean;
									public getValueClass(): java.lang.Class<any>;
									public getWithArgsCreator(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams;
									public configureFromStringCreator(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams): void;
									public getValueTypeDesc(): string;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdValueInstantiator);
									public createFromLong(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: number): any;
									public configureFromArraySettings(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>): void;
									public configureFromDoubleCreator(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams): void;
									public canCreateFromInt(): boolean;
									public createUsingDelegate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: any): any;
									public getDelegateCreator(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams;
									public getDefaultCreator(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams;
									public getFromObjectArguments(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>;
									public createFromString(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string): any;
									public rewrapCtorProblem(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
									public wrapException(param0: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
									public configureFromIntCreator(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams): void;
									public createFromObjectWith(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>, param2: me.pushy.sdk.lib.jackson.databind.deser.impl.PropertyValueBuffer): any;
									public createFromDouble(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: number): any;
									public configureFromLongCreator(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams): void;
									public canCreateUsingDefault(): boolean;
									public getDelegateType(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): me.pushy.sdk.lib.jackson.databind.JavaType;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: java.lang.Class<any>);
									public createUsingDefault(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor();
									public canCreateUsingDelegate(): boolean;
									public configureFromObjectSettings(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>, param4: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams, param5: native.Array<me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>): void;
									public configureIncompleteParameter(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter): void;
									public getIncompleteParameter(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter;
									public canCreateFromObjectWith(): boolean;
									public configureFromBooleanCreator(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams): void;
									public createFromBoolean(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: boolean): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType);
									public unwrapAndWrapException(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
									public createFromObjectWith(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: native.Array<any>): any;
									public wrapAsJsonMappingException(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
									public getArrayDelegateCreator(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams;
									public getArrayDelegateType(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): me.pushy.sdk.lib.jackson.databind.JavaType;
									public canCreateFromDouble(): boolean;
									public canCreateUsingArrayDelegate(): boolean;
									public canCreateFromBoolean(): boolean;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class StringArrayDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<native.Array<string>> implements me.pushy.sdk.lib.jackson.databind.deser.ContextualDeserializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.StringArrayDeserializer>;
									public static instance: me.pushy.sdk.lib.jackson.databind.deser.std.StringArrayDeserializer;
									public _elementDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<string>;
									public _nullProvider: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider;
									public _unwrapSingle: java.lang.Boolean;
									public _skipNullValues: boolean;
									public constructor();
									public getNullValue(): any;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: native.Array<string>): native.Array<string>;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public _deserializeCustom(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: native.Array<string>): native.Array<string>;
									public getEmptyAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public getEmptyValue(): any;
									public supportsUpdate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): java.lang.Boolean;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<string>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public getEmptyValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class StringCollectionDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<java.util.Collection<string>> implements me.pushy.sdk.lib.jackson.databind.deser.ContextualDeserializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.StringCollectionDeserializer>;
									public _valueDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<string>;
									public _valueInstantiator: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
									public _delegateDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public constructor();
									public getNullValue(): any;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param3: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.deser.std.StringCollectionDeserializer;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: java.util.Collection<string>): java.util.Collection<string>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
									public getContentDeserializer(): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator, param2: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param4: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param5: java.lang.Boolean);
									public getValueInstantiator(): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.deser.NullValueProvider, param2: java.lang.Boolean);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.Collection<string>;
									public isCachable(): boolean;
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class StringDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<string> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.StringDeserializer>;
									public static instance: me.pushy.sdk.lib.jackson.databind.deser.std.StringDeserializer;
									public constructor();
									public getNullValue(): any;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): string;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public getEmptyValue(): any;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): string;
									public isCachable(): boolean;
									public getEmptyValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class ThrowableDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializer {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.ThrowableDeserializer>;
									public static PROP_NAME_MESSAGE: string;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.util.NameTransformer);
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBuilder, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap, param3: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>, param4: java.util.HashSet<string>, param5: boolean, param6: boolean);
									public getNullValue(): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializer, param1: me.pushy.sdk.lib.jackson.databind.util.NameTransformer);
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBuilder, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap, param3: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.deser.SettableBeanProperty>, param4: java.util.Set<string>, param5: boolean, param6: boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public deserializeFromObject(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: java.util.Set<string>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.deser.impl.ObjectIdReader);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase);
									public resolve(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): void;
									public getValueInstantiator(): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
									public unwrappingDeserializer(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializer);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.deser.impl.BeanPropertyMap);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class TokenBufferDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<me.pushy.sdk.lib.jackson.databind.util.TokenBuffer> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.TokenBufferDeserializer>;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public getNullValue(): any;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): me.pushy.sdk.lib.jackson.databind.util.TokenBuffer;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
									public createBufferInstance(param0: me.pushy.sdk.lib.jackson.core.JsonParser): me.pushy.sdk.lib.jackson.databind.util.TokenBuffer;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class UUIDDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.FromStringDeserializer<java.util.UUID> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.UUIDDeserializer>;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public _deserialize(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.UUID;
									public getNullValue(): any;
									public _deserialize(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public _deserializeEmbedded(param0: any, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public _deserializeEmbedded(param0: any, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): java.util.UUID;
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module deser {
							export module std {
								export class UntypedObjectDeserializer extends me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.UntypedObjectDeserializer>;
									public static NO_OBJECTS: native.Array<any>;
									public _mapDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public _listDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public _stringDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public _numberDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public _listType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public _mapType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.JavaType);
									public mapObject(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public _clearIfStdImpl(param0: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public getNullValue(): any;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public _findCustomDeser(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public resolve(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): void;
									public supportsUpdate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): java.lang.Boolean;
									public mapArrayToArray(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<any>;
									public mapArray(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.UntypedObjectDeserializer, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param2: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param3: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>);
									public isCachable(): boolean;
									public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
								}
								export module UntypedObjectDeserializer {
									export class Vanilla extends me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla>;
										public static std: me.pushy.sdk.lib.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla;
										public getNullValue(): any;
										public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
										public mapArray(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
										public supportsUpdate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig): java.lang.Boolean;
										public constructor();
										public mapObject(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
										public deserializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer): any;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public mapArrayToArray(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): native.Array<any>;
										public constructor(param0: java.lang.Class<any>);
										public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module exc {
							export class IgnoredPropertyException extends me.pushy.sdk.lib.jackson.databind.exc.PropertyBindingException {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.exc.IgnoredPropertyException>;
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: string, param1: java.lang.Throwable);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: java.io.Closeable, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public constructor(param0: java.lang.Throwable);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public static from(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public static from(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: java.io.Closeable, param1: string, param2: java.lang.Throwable);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: java.lang.Class<any>);
								public static from(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: java.lang.Class<any>, param2: string): me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation, param3: java.lang.Class<any>, param4: string, param5: java.util.Collection<any>);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: any, param2: string, param3: java.util.Collection<any>): me.pushy.sdk.lib.jackson.databind.exc.IgnoredPropertyException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.databind.JavaType);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation, param2: java.lang.Throwable);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: string): me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException;
								public constructor(param0: java.io.Closeable, param1: string);
								public static from(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string);
								public constructor(param0: string);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation, param2: java.lang.Class<any>, param3: string, param4: java.util.Collection<any>);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string): me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module exc {
							export class InvalidDefinitionException extends me.pushy.sdk.lib.jackson.databind.JsonMappingException {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.exc.InvalidDefinitionException>;
								public _type: me.pushy.sdk.lib.jackson.databind.JavaType;
								public _beanDesc: me.pushy.sdk.lib.jackson.databind.BeanDescription;
								public _property: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition;
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: string, param1: java.lang.Throwable);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public getProperty(): me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition;
								public constructor(param0: java.io.Closeable, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public constructor(param0: java.lang.Throwable);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.exc.InvalidDefinitionException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public static from(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public getBeanDescription(): me.pushy.sdk.lib.jackson.databind.BeanDescription;
								public static from(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.exc.InvalidDefinitionException;
								public constructor(param0: java.io.Closeable, param1: string, param2: java.lang.Throwable);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition): me.pushy.sdk.lib.jackson.databind.exc.InvalidDefinitionException;
								public static from(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition): me.pushy.sdk.lib.jackson.databind.exc.InvalidDefinitionException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.databind.JavaType);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation, param2: java.lang.Throwable);
								public constructor(param0: java.io.Closeable, param1: string);
								public static from(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: string);
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string, param2: me.pushy.sdk.lib.jackson.databind.JavaType);
								public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module exc {
							export class InvalidFormatException extends me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.exc.InvalidFormatException>;
								public _value: any;
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: string, param1: java.lang.Throwable);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: any, param3: java.lang.Class<any>);
								public constructor(param0: java.io.Closeable, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public constructor(param0: java.lang.Throwable);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: any, param3: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.exc.InvalidFormatException;
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public static from(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public static from(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: java.io.Closeable, param1: string, param2: java.lang.Throwable);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: java.lang.Class<any>);
								public getValue(): any;
								public static from(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: string, param1: any, param2: java.lang.Class<any>);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: java.lang.Class<any>, param2: string): me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.databind.JavaType);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation, param2: java.lang.Throwable);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: string): me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException;
								public constructor(param0: java.io.Closeable, param1: string);
								public static from(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string);
								public constructor(param0: string);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation, param2: any, param3: java.lang.Class<any>);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string): me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module exc {
							export class InvalidNullException extends me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.exc.InvalidNullException>;
								public _propertyName: me.pushy.sdk.lib.jackson.databind.PropertyName;
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: string, param1: java.lang.Throwable);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: java.io.Closeable, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public constructor(param0: java.lang.Throwable);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public static from(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public getPropertyName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public static from(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: java.io.Closeable, param1: string, param2: java.lang.Throwable);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: java.lang.Class<any>);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string, param2: me.pushy.sdk.lib.jackson.databind.PropertyName);
								public static from(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: java.lang.Class<any>, param2: string): me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException;
								public static from(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: me.pushy.sdk.lib.jackson.databind.PropertyName, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.exc.InvalidNullException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.databind.JavaType);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation, param2: java.lang.Throwable);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: string): me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException;
								public constructor(param0: java.io.Closeable, param1: string);
								public static from(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string);
								public constructor(param0: string);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string): me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module exc {
							export class InvalidTypeIdException extends me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.exc.InvalidTypeIdException>;
								public _baseType: me.pushy.sdk.lib.jackson.databind.JavaType;
								public _typeId: string;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: string);
								public getBaseType(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: string, param1: java.lang.Throwable);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: java.io.Closeable, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public constructor(param0: java.lang.Throwable);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public static from(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: string): me.pushy.sdk.lib.jackson.databind.exc.InvalidTypeIdException;
								public static from(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: java.io.Closeable, param1: string, param2: java.lang.Throwable);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: java.lang.Class<any>);
								public static from(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public getTypeId(): string;
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: java.lang.Class<any>, param2: string): me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.databind.JavaType);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation, param2: java.lang.Throwable);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: string): me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException;
								public constructor(param0: java.io.Closeable, param1: string);
								public static from(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string);
								public constructor(param0: string);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string): me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module exc {
							export class MismatchedInputException extends me.pushy.sdk.lib.jackson.databind.JsonMappingException {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException>;
								public _targetType: java.lang.Class<any>;
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: string, param1: java.lang.Throwable);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public getTargetType(): java.lang.Class<any>;
								public constructor(param0: java.io.Closeable, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public constructor(param0: java.lang.Throwable);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public static from(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public static from(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: java.io.Closeable, param1: string, param2: java.lang.Throwable);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: java.lang.Class<any>);
								public static from(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: java.lang.Class<any>, param2: string): me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException;
								public setTargetType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.databind.JavaType);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation, param2: java.lang.Throwable);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: string): me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException;
								public constructor(param0: java.io.Closeable, param1: string);
								public static from(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: string);
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string): me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module exc {
							export abstract class PropertyBindingException extends me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.exc.PropertyBindingException>;
								public _referringClass: java.lang.Class<any>;
								public _propertyName: string;
								public _propertyIds: java.util.Collection<any>;
								public _propertiesAsString: string;
								public getReferringClass(): java.lang.Class<any>;
								public constructor(param0: java.io.Closeable, param1: string, param2: java.lang.Throwable);
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: java.lang.Class<any>);
								public constructor(param0: string, param1: java.lang.Throwable);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation, param3: java.lang.Class<any>, param4: string, param5: java.util.Collection<any>);
								public getKnownPropertyIds(): java.util.Collection<any>;
								public constructor(param0: java.io.Closeable, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public getPropertyName(): string;
								public constructor(param0: java.lang.Throwable);
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.databind.JavaType);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation, param2: java.lang.Throwable);
								public constructor(param0: java.io.Closeable, param1: string);
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string);
								public constructor(param0: string);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation, param2: java.lang.Class<any>, param3: string, param4: java.util.Collection<any>);
								public getMessageSuffix(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module exc {
							export class UnrecognizedPropertyException extends me.pushy.sdk.lib.jackson.databind.exc.PropertyBindingException {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.exc.UnrecognizedPropertyException>;
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: string, param1: java.lang.Throwable);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: java.io.Closeable, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation);
								public constructor(param0: java.lang.Throwable);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public static from(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public static from(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: java.io.Closeable, param1: string, param2: java.lang.Throwable);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: java.lang.Class<any>);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: any, param2: string, param3: java.util.Collection<any>): me.pushy.sdk.lib.jackson.databind.exc.UnrecognizedPropertyException;
								public static from(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string, param2: java.lang.Throwable): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: java.lang.Class<any>, param2: string): me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.core.JsonLocation, param3: java.lang.Class<any>, param4: string, param5: java.util.Collection<any>);
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string, param2: me.pushy.sdk.lib.jackson.databind.JavaType);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation, param2: java.lang.Throwable);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: string): me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException;
								public constructor(param0: java.io.Closeable, param1: string);
								public static from(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: string): me.pushy.sdk.lib.jackson.databind.JsonMappingException;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string);
								public constructor(param0: string);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.JsonLocation, param2: java.lang.Class<any>, param3: string, param4: java.util.Collection<any>);
								public static from(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: string): me.pushy.sdk.lib.jackson.databind.exc.MismatchedInputException;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ext {
							export class CoreXMLDeserializers extends me.pushy.sdk.lib.jackson.databind.deser.Deserializers.Base {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ext.CoreXMLDeserializers>;
								public static TYPE_DURATION: number;
								public static TYPE_G_CALENDAR: number;
								public static TYPE_QNAME: number;
								public findEnumDeserializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findCollectionDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.CollectionType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findTreeNodeDeserializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findCollectionLikeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findReferenceDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.ReferenceType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findArrayDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.ArrayType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public constructor();
								public findMapLikeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.MapLikeType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param5: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findBeanDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findMapDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.MapType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param5: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							}
							export module CoreXMLDeserializers {
								export class Std extends me.pushy.sdk.lib.jackson.databind.deser.std.FromStringDeserializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ext.CoreXMLDeserializers.Std>;
									public _kind: number;
									public constructor();
									public getNullValue(): any;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public _gregorianFromDate(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: java.util.Date): javax.xml.datatype.XMLGregorianCalendar;
									public _deserialize(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>, param1: number);
									public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ext {
							export class CoreXMLSerializers extends me.pushy.sdk.lib.jackson.databind.ser.Serializers.Base {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ext.CoreXMLSerializers>;
								public findCollectionLikeSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public findMapSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.MapType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public findCollectionSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.CollectionType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public findSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public constructor();
								public findArraySerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.ArrayType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public findMapLikeSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.MapLikeType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public findReferenceSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.ReferenceType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							}
							export module CoreXMLSerializers {
								export class XMLGregorianCalendarSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<javax.xml.datatype.XMLGregorianCalendar> implements me.pushy.sdk.lib.jackson.databind.ser.ContextualSerializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ext.CoreXMLSerializers.XMLGregorianCalendarSerializer>;
									public isEmpty(param0: any): boolean;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public _convert(param0: javax.xml.datatype.XMLGregorianCalendar): java.util.Calendar;
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
									public serialize(param0: javax.xml.datatype.XMLGregorianCalendar, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: javax.xml.datatype.XMLGregorianCalendar): boolean;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public getDelegatee(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public serializeWithType(param0: javax.xml.datatype.XMLGregorianCalendar, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ext {
							export abstract class DOMDeserializer<T>  extends me.pushy.sdk.lib.jackson.databind.deser.std.FromStringDeserializer<any> {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ext.DOMDeserializer<any>>;
								public getNullValue(): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
								public _deserialize(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
								public constructor();
								public parse(param0: string): org.w3c.dom.Document;
								public documentBuilder(): javax.xml.parsers.DocumentBuilder;
								public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
								public constructor(param0: java.lang.Class<any>);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
							}
							export module DOMDeserializer {
								export class DocumentDeserializer extends me.pushy.sdk.lib.jackson.databind.ext.DOMDeserializer<org.w3c.dom.Document> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ext.DOMDeserializer.DocumentDeserializer>;
									public constructor();
									public _deserialize(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): org.w3c.dom.Document;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public getNullValue(): any;
									public _deserialize(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
								}
								export class NodeDeserializer extends me.pushy.sdk.lib.jackson.databind.ext.DOMDeserializer<org.w3c.dom.Node> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ext.DOMDeserializer.NodeDeserializer>;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer<any>);
									public getNullValue(): any;
									public _deserialize(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public _deserialize(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): org.w3c.dom.Node;
									public getNullAccessPattern(): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getNullValue(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer<any>);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ext {
							export abstract class Java7Support {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ext.Java7Support>;
								public hasCreatorAnnotation(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Boolean;
								public getSerializerForJavaNioFilePath(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public getDeserializerForJavaNioFilePath(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public constructor();
								public getClassJavaNioFilePath(): java.lang.Class<any>;
								public findTransient(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Boolean;
								public findConstructorName(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public static instance(): me.pushy.sdk.lib.jackson.databind.ext.Java7Support;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ext {
							export class OptionalHandlerFactory {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ext.OptionalHandlerFactory>;
								public static instance: me.pushy.sdk.lib.jackson.databind.ext.OptionalHandlerFactory;
								public findDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export abstract class Annotated {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.Annotated>;
								public toString(): string;
								public getModifiers(): number;
								public isPublic(): boolean;
								public getName(): string;
								public hasOneOf(param0: native.Array<java.lang.Class<any>>): boolean;
								public equals(param0: any): boolean;
								public constructor();
								public getGenericType(): java.lang.reflect.Type;
								public getAnnotated(): java.lang.reflect.AnnotatedElement;
								public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								public getType(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBindings): me.pushy.sdk.lib.jackson.databind.JavaType;
								public hasAnnotation(param0: java.lang.Class<any>): boolean;
								public getRawType(): java.lang.Class<any>;
								public hashCode(): number;
								public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class AnnotatedClass extends me.pushy.sdk.lib.jackson.databind.introspect.Annotated implements me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass>;
								public _type: me.pushy.sdk.lib.jackson.databind.JavaType;
								public _class: java.lang.Class<any>;
								public _bindings: me.pushy.sdk.lib.jackson.databind.type.TypeBindings;
								public _superTypes: java.util.List<me.pushy.sdk.lib.jackson.databind.JavaType>;
								public _annotationIntrospector: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector;
								public _typeFactory: me.pushy.sdk.lib.jackson.databind.type.TypeFactory;
								public _mixInResolver: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver;
								public _primaryMixIn: java.lang.Class<any>;
								public _classAnnotations: me.pushy.sdk.lib.jackson.databind.util.Annotations;
								public _creators: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass.Creators;
								public _memberMethods: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethodMap;
								public _fields: java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField>;
								public _nonStaticInnerClass: java.lang.Boolean;
								public static construct(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass;
								public toString(): string;
								public isNonStaticInnerClass(): boolean;
								public getStaticMethods(): java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod>;
								public hasOneOf(param0: native.Array<java.lang.Class<any>>): boolean;
								public equals(param0: any): boolean;
								public resolveType(param0: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JavaType;
								public static construct(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass;
								public getAnnotations(): me.pushy.sdk.lib.jackson.databind.util.Annotations;
								public static constructWithoutSuperTypes(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass;
								public getType(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBindings): me.pushy.sdk.lib.jackson.databind.JavaType;
								public memberMethods(): java.lang.Iterable<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod>;
								public getFactoryMethods(): java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod>;
								public getDefaultConstructor(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedConstructor;
								public getModifiers(): number;
								public getConstructors(): java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedConstructor>;
								public getName(): string;
								public fields(): java.lang.Iterable<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField>;
								public hasAnnotations(): boolean;
								public static constructWithoutSuperTypes(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass;
								public getAnnotated(): java.lang.reflect.AnnotatedElement;
								public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								public getMemberMethodCount(): number;
								public getFieldCount(): number;
								public hasAnnotation(param0: java.lang.Class<any>): boolean;
								public getRawType(): java.lang.Class<any>;
								public findMethod(param0: string, param1: native.Array<java.lang.Class<any>>): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
								public getAnnotated(): java.lang.Class<any>;
								public hashCode(): number;
								public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
							export module AnnotatedClass {
								export class Creators {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass.Creators>;
									public defaultConstructor: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedConstructor;
									public constructors: java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedConstructor>;
									public creatorMethods: java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedConstructor, param1: java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedConstructor>, param2: java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod>);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class AnnotatedClassResolver {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClassResolver>;
								public static resolve(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass;
								public static resolveWithoutSuperTypes(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass;
								public static resolveWithoutSuperTypes(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass;
								public static resolveWithoutSuperTypes(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class AnnotatedConstructor extends me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedConstructor>;
								public _constructor: java.lang.reflect.Constructor<any>;
								public _serialization: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedConstructor.Serialization;
								public toString(): string;
								public setValue(param0: any, param1: any): void;
								public call(param0: native.Array<any>): any;
								public equals(param0: any): boolean;
								public getDeclaringClass(): java.lang.Class<any>;
								public withAnnotations(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedConstructor;
								public getMember(): java.lang.reflect.Member;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param1: java.lang.reflect.Constructor<any>, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap, param3: native.Array<me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap>);
								public call1(param0: any): any;
								public getType(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBindings): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap);
								public getModifiers(): number;
								public getParameterCount(): number;
								public getGenericParameterType(param0: number): java.lang.reflect.Type;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember);
								public getName(): string;
								public constructor();
								public getAnnotated(): java.lang.reflect.AnnotatedElement;
								public getValue(param0: any): any;
								public call(): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams, param1: native.Array<me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap>);
								public getAnnotated(): java.lang.reflect.Constructor<any>;
								public getParameterType(param0: number): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedConstructor.Serialization);
								public getRawType(): java.lang.Class<any>;
								public withAnnotations(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap): me.pushy.sdk.lib.jackson.databind.introspect.Annotated;
								public hashCode(): number;
								public getRawParameterType(param0: number): java.lang.Class<any>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap, param2: native.Array<me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap>);
								public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
							export module AnnotatedConstructor {
								export class Serialization {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedConstructor.Serialization>;
									public clazz: java.lang.Class<any>;
									public args: native.Array<java.lang.Class<any>>;
									public constructor(param0: java.lang.reflect.Constructor<any>);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class AnnotatedCreatorCollector extends me.pushy.sdk.lib.jackson.databind.introspect.CollectorBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedCreatorCollector>;
								public constructDefaultConstructor(param0: me.pushy.sdk.lib.jackson.databind.util.ClassUtil.Ctor, param1: me.pushy.sdk.lib.jackson.databind.util.ClassUtil.Ctor): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedConstructor;
								public static collectCreators(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector, param1: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass.Creators;
								public constructNonDefaultConstructor(param0: me.pushy.sdk.lib.jackson.databind.util.ClassUtil.Ctor, param1: me.pushy.sdk.lib.jackson.databind.util.ClassUtil.Ctor): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedConstructor;
								public constructFactoryCreator(param0: java.lang.reflect.Method, param1: java.lang.reflect.Method): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class AnnotatedField extends me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField>;
								public _field: java.lang.reflect.Field;
								public _serialization: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField.Serialization;
								public toString(): string;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap);
								public getModifiers(): number;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember);
								public setValue(param0: any, param1: any): void;
								public getName(): string;
								public equals(param0: any): boolean;
								public constructor();
								public getGenericType(): java.lang.reflect.Type;
								public getAnnotated(): java.lang.reflect.AnnotatedElement;
								public getDeclaringClass(): java.lang.Class<any>;
								public getValue(param0: any): any;
								public withAnnotations(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField;
								public isTransient(): boolean;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField.Serialization);
								public getMember(): java.lang.reflect.Member;
								public getAnnotated(): java.lang.reflect.Field;
								public getType(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBindings): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param1: java.lang.reflect.Field, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap);
								public getAnnotationCount(): number;
								public getRawType(): java.lang.Class<any>;
								public withAnnotations(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap): me.pushy.sdk.lib.jackson.databind.introspect.Annotated;
								public hashCode(): number;
								public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
							export module AnnotatedField {
								export class Serialization {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField.Serialization>;
									public clazz: java.lang.Class<any>;
									public name: string;
									public constructor(param0: java.lang.reflect.Field);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class AnnotatedFieldCollector extends me.pushy.sdk.lib.jackson.databind.introspect.CollectorBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedFieldCollector>;
								public static collectFields(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector, param1: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver, param3: me.pushy.sdk.lib.jackson.databind.type.TypeFactory, param4: me.pushy.sdk.lib.jackson.databind.JavaType): java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField>;
							}
							export module AnnotatedFieldCollector {
								export class FieldBuilder {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedFieldCollector.FieldBuilder>;
									public typeContext: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext;
									public field: java.lang.reflect.Field;
									public annotations: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param1: java.lang.reflect.Field);
									public build(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export abstract class AnnotatedMember extends me.pushy.sdk.lib.jackson.databind.introspect.Annotated {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember>;
								public _typeContext: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext;
								public _annotations: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap);
								public getFullName(): string;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember);
								public setValue(param0: any, param1: any): void;
								public fixAccess(param0: boolean): void;
								public hasOneOf(param0: native.Array<java.lang.Class<any>>): boolean;
								public getAllAnnotations(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap;
								public constructor();
								public getDeclaringClass(): java.lang.Class<any>;
								public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								public getValue(param0: any): any;
								public getTypeContext(): me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext;
								public getMember(): java.lang.reflect.Member;
								public hasAnnotation(param0: java.lang.Class<any>): boolean;
								public withAnnotations(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap): me.pushy.sdk.lib.jackson.databind.introspect.Annotated;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class AnnotatedMethod extends me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod>;
								public _method: java.lang.reflect.Method;
								public _paramClasses: native.Array<java.lang.Class<any>>;
								public _serialization: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod.Serialization;
								public callOnWith(param0: any, param1: native.Array<any>): any;
								public toString(): string;
								public getFullName(): string;
								public setValue(param0: any, param1: any): void;
								public hasReturnType(): boolean;
								public call(param0: native.Array<any>): any;
								public getMember(): java.lang.reflect.Method;
								public equals(param0: any): boolean;
								public callOn(param0: any): any;
								public getGenericType(): java.lang.reflect.Type;
								public getDeclaringClass(): java.lang.Class<any>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param1: java.lang.reflect.Method, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap, param3: native.Array<me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap>);
								public getMember(): java.lang.reflect.Member;
								public getGenericParameterTypes(): native.Array<java.lang.reflect.Type>;
								public getRawParameterTypes(): native.Array<java.lang.Class<any>>;
								public call1(param0: any): any;
								public getType(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBindings): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod.Serialization);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap);
								public getModifiers(): number;
								public getParameterCount(): number;
								public getGenericParameterType(param0: number): java.lang.reflect.Type;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember);
								public getName(): string;
								public constructor();
								public withAnnotations(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
								public getAnnotated(): java.lang.reflect.AnnotatedElement;
								public getAnnotated(): java.lang.reflect.Method;
								public getValue(param0: any): any;
								public call(): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams, param1: native.Array<me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap>);
								public getParameterType(param0: number): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getRawType(): java.lang.Class<any>;
								public getRawReturnType(): java.lang.Class<any>;
								public withAnnotations(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap): me.pushy.sdk.lib.jackson.databind.introspect.Annotated;
								public hashCode(): number;
								public getRawParameterType(param0: number): java.lang.Class<any>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap, param2: native.Array<me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap>);
								public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
							export module AnnotatedMethod {
								export class Serialization {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod.Serialization>;
									public clazz: java.lang.Class<any>;
									public name: string;
									public args: native.Array<java.lang.Class<any>>;
									public constructor(param0: java.lang.reflect.Method);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class AnnotatedMethodCollector extends me.pushy.sdk.lib.jackson.databind.introspect.CollectorBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethodCollector>;
								public static collectMethods(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector, param1: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver, param3: me.pushy.sdk.lib.jackson.databind.type.TypeFactory, param4: me.pushy.sdk.lib.jackson.databind.JavaType, param5: java.util.List<me.pushy.sdk.lib.jackson.databind.JavaType>, param6: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethodMap;
								public _addMethodMixIns(param0: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param1: java.lang.Class<any>, param2: java.util.Map<me.pushy.sdk.lib.jackson.databind.introspect.MemberKey,me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethodCollector.MethodBuilder>, param3: java.lang.Class<any>): void;
							}
							export module AnnotatedMethodCollector {
								export class MethodBuilder {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethodCollector.MethodBuilder>;
									public typeContext: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext;
									public method: java.lang.reflect.Method;
									public annotations: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param1: java.lang.reflect.Method, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector);
									public build(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class AnnotatedMethodMap extends java.lang.Iterable<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod> {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethodMap>;
								public _methods: java.util.Map<me.pushy.sdk.lib.jackson.databind.introspect.MemberKey,me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod>;
								public size(): number;
								public constructor(param0: java.util.Map<me.pushy.sdk.lib.jackson.databind.introspect.MemberKey,me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod>);
								public iterator(): java.util.Iterator<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod>;
								public find(param0: string, param1: native.Array<java.lang.Class<any>>): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
								public constructor();
								public find(param0: java.lang.reflect.Method): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class AnnotatedParameter extends me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter>;
								public _owner: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams;
								public _type: me.pushy.sdk.lib.jackson.databind.JavaType;
								public _index: number;
								public toString(): string;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap);
								public getModifiers(): number;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember);
								public setValue(param0: any, param1: any): void;
								public getName(): string;
								public getParameterType(): java.lang.reflect.Type;
								public equals(param0: any): boolean;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param3: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap, param4: number);
								public constructor();
								public getGenericType(): java.lang.reflect.Type;
								public getAnnotated(): java.lang.reflect.AnnotatedElement;
								public getDeclaringClass(): java.lang.Class<any>;
								public getValue(param0: any): any;
								public getOwner(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams;
								public getMember(): java.lang.reflect.Member;
								public getType(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBindings): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withAnnotations(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter;
								public getRawType(): java.lang.Class<any>;
								public withAnnotations(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap): me.pushy.sdk.lib.jackson.databind.introspect.Annotated;
								public hashCode(): number;
								public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getIndex(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export abstract class AnnotatedWithParams extends me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams>;
								public _paramAnnotations: native.Array<me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap);
								public getParameterCount(): number;
								public getGenericParameterType(param0: number): java.lang.reflect.Type;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember);
								public call(param0: native.Array<any>): any;
								public getParameterAnnotations(param0: number): me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap;
								public constructor();
								public getParameter(param0: number): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter;
								public call(): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedWithParams, param1: native.Array<me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap>);
								public call1(param0: any): any;
								public getParameterType(param0: number): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getAnnotationCount(): number;
								public replaceParameterAnnotations(param0: number, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter;
								public addOrOverrideParam(param0: number, param1: java.lang.annotation.Annotation): void;
								public getRawParameterType(param0: number): java.lang.Class<any>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap, param2: native.Array<me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap>);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export abstract class AnnotationCollector {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector>;
								public static NO_ANNOTATIONS: me.pushy.sdk.lib.jackson.databind.util.Annotations;
								public _data: any;
								public constructor(param0: any);
								public addOrOverride(param0: java.lang.annotation.Annotation): me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector;
								public static emptyAnnotations(): me.pushy.sdk.lib.jackson.databind.util.Annotations;
								public static emptyCollector(param0: any): me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector;
								public asAnnotationMap(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap;
								public getData(): any;
								public isPresent(param0: java.lang.annotation.Annotation): boolean;
								public static emptyCollector(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector;
								public asAnnotations(): me.pushy.sdk.lib.jackson.databind.util.Annotations;
							}
							export module AnnotationCollector {
								export class EmptyCollector extends me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector.EmptyCollector>;
									public static instance: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector.EmptyCollector;
									public addOrOverride(param0: java.lang.annotation.Annotation): me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector;
									public isPresent(param0: java.lang.annotation.Annotation): boolean;
									public asAnnotations(): me.pushy.sdk.lib.jackson.databind.util.Annotations;
									public asAnnotationMap(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap;
								}
								export class NCollector extends me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector.NCollector>;
									public _annotations: java.util.HashMap<java.lang.Class<any>,java.lang.annotation.Annotation>;
									public addOrOverride(param0: java.lang.annotation.Annotation): me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector;
									public isPresent(param0: java.lang.annotation.Annotation): boolean;
									public constructor(param0: any);
									public asAnnotations(): me.pushy.sdk.lib.jackson.databind.util.Annotations;
									public constructor(param0: any, param1: java.lang.Class<any>, param2: java.lang.annotation.Annotation, param3: java.lang.Class<any>, param4: java.lang.annotation.Annotation);
									public asAnnotationMap(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap;
								}
								export class NoAnnotations extends me.pushy.sdk.lib.jackson.databind.util.Annotations {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector.NoAnnotations>;
									public size(): number;
									public hasOneOf(param0: native.Array<java.lang.Class<any>>): boolean;
									public has(param0: java.lang.Class<any>): boolean;
									public get(param0: java.lang.Class): java.lang.annotation.Annotation;
								}
								export class OneAnnotation extends me.pushy.sdk.lib.jackson.databind.util.Annotations {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector.OneAnnotation>;
									public size(): number;
									public hasOneOf(param0: native.Array<java.lang.Class<any>>): boolean;
									public has(param0: java.lang.Class<any>): boolean;
									public constructor(param0: java.lang.Class<any>, param1: java.lang.annotation.Annotation);
									public get(param0: java.lang.Class): java.lang.annotation.Annotation;
								}
								export class OneCollector extends me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector.OneCollector>;
									public addOrOverride(param0: java.lang.annotation.Annotation): me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector;
									public isPresent(param0: java.lang.annotation.Annotation): boolean;
									public constructor(param0: any, param1: java.lang.Class<any>, param2: java.lang.annotation.Annotation);
									public constructor(param0: any);
									public asAnnotations(): me.pushy.sdk.lib.jackson.databind.util.Annotations;
									public asAnnotationMap(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap;
								}
								export class TwoAnnotations extends me.pushy.sdk.lib.jackson.databind.util.Annotations {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector.TwoAnnotations>;
									public size(): number;
									public constructor(param0: java.lang.Class<any>, param1: java.lang.annotation.Annotation, param2: java.lang.Class<any>, param3: java.lang.annotation.Annotation);
									public hasOneOf(param0: native.Array<java.lang.Class<any>>): boolean;
									public has(param0: java.lang.Class<any>): boolean;
									public get(param0: java.lang.Class): java.lang.annotation.Annotation;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class AnnotationIntrospectorPair extends me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotationIntrospectorPair>;
								public _primary: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector;
								public _secondary: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector;
								public findPropertyContentTypeResolver(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>;
								public findTypeName(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): string;
								public hasIgnoreMarker(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): boolean;
								public findContentDeserializer(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
								public findPropertyIgnorals(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public findNameForSerialization(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public findPOJOBuilder(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): java.lang.Class<any>;
								public findIgnoreUnknownProperties(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): java.lang.Boolean;
								public findCreatorAnnotation(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.annotation.JsonCreator.Mode;
								public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public findCreatorBinding(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.annotation.JsonCreator.Mode;
								public findObjectReferenceInfo(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo): me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo;
								public findKeySerializer(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
								public findDeserializationContentConverter(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): any;
								public findTypeResolver(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>;
								public findSerializationConverter(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
								public findInjectableValueId(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): any;
								public hasAnyGetter(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Boolean;
								public findPropertyDescription(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): string;
								public findWrapperName(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public findDefaultEnumValue(param0: java.lang.Class<java.lang.Enum<any>>): java.lang.Enum<any>;
								public findReferenceType(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector.ReferenceProperty;
								public findSerializationPropertyOrder(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): native.Array<string>;
								public findSerializationTyping(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize.Typing;
								public findNameForDeserialization(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public findAndAddVirtualProperties(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass, param2: java.util.List<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>): void;
								public refineDeserializationType(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public _isExplicitClassOrOb(param0: any, param1: java.lang.Class<any>): boolean;
								public resolveSetterConflict(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
								public constructor();
								public findFormat(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public findEnumValue(param0: java.lang.Enum<any>): string;
								public findViews(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): native.Array<java.lang.Class<any>>;
								public findObjectIdInfo(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo;
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public findDeserializationConverter(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
								public findNamingStrategy(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): any;
								public findDeserializationKeyType(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.databind.JavaType): java.lang.Class<any>;
								public isAnnotationBundle(param0: java.lang.annotation.Annotation): boolean;
								public findDeserializationType(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.databind.JavaType): java.lang.Class<any>;
								public findSerializationContentConverter(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): any;
								public static create(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector, param1: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector;
								public findSerializationInclusionForContent(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
								public allIntrospectors(param0: java.util.Collection<me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector>): java.util.Collection<me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector>;
								public isIgnorableType(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): java.lang.Boolean;
								public findInjectableValue(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.annotation.JacksonInject.Value;
								public findSubtypes(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.util.List<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>;
								public findPropertiesToIgnore(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): native.Array<string>;
								public findContentSerializer(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
								public findPropertyAccess(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.annotation.JsonProperty.Access;
								public findSetterInfo(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value;
								public findUnwrappingNameTransformer(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.databind.util.NameTransformer;
								public hasCreatorAnnotation(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): boolean;
								public findImplicitPropertyName(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): string;
								public findKeyDeserializer(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
								public findSerializationKeyType(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.databind.JavaType): java.lang.Class<any>;
								public hasAsValueAnnotation(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
								public findSerializationInclusion(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include;
								public findRootName(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public hasAnySetter(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Boolean;
								public findPOJOBuilderConfig(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): me.pushy.sdk.lib.jackson.databind.annotation.JsonPOJOBuilder.Value;
								public findPropertiesToIgnore(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: boolean): native.Array<string>;
								public _explicitClassOrOb(param0: any, param1: java.lang.Class<any>): any;
								public findAutoDetectVisibility(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass, param1: me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>): me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>;
								public findDeserializer(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
								public findClassDescription(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): string;
								public findDeserializationContentType(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.databind.JavaType): java.lang.Class<any>;
								public findSerializationSortAlphabetically(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Boolean;
								public hasAsValue(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Boolean;
								public findValueInstantiator(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): any;
								public findMergeInfo(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Boolean;
								public findNullSerializer(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
								public findEnumValues(param0: java.lang.Class<any>, param1: native.Array<java.lang.Enum<any>>, param2: native.Array<string>): native.Array<string>;
								public allIntrospectors(): java.util.Collection<me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector>;
								public findFilterId(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
								public findPropertyDefaultValue(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): string;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector, param1: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector);
								public findSerializer(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
								public findPropertyIndex(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Integer;
								public isTypeId(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): java.lang.Boolean;
								public findSerializationContentType(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.databind.JavaType): java.lang.Class<any>;
								public hasAnyGetterAnnotation(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
								public findPropertyTypeResolver(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>;
								public hasRequiredMarker(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): java.lang.Boolean;
								public refineSerializationType(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public findPropertyAliases(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
								public findSerializationType(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Class<any>;
								public hasAnySetterAnnotation(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class AnnotationMap extends me.pushy.sdk.lib.jackson.databind.util.Annotations {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap>;
								public _annotations: java.util.HashMap<java.lang.Class<any>,java.lang.annotation.Annotation>;
								public get(param0: java.lang.Class): java.lang.annotation.Annotation;
								public static merge(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap): me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap;
								public toString(): string;
								public annotations(): java.lang.Iterable<java.lang.annotation.Annotation>;
								public size(): number;
								public addIfNotPresent(param0: java.lang.annotation.Annotation): boolean;
								public hasOneOf(param0: native.Array<java.lang.Class<any>>): boolean;
								public static of(param0: java.lang.Class<any>, param1: java.lang.annotation.Annotation): me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap;
								public constructor();
								public add(param0: java.lang.annotation.Annotation): boolean;
								public has(param0: java.lang.Class<any>): boolean;
								public _add(param0: java.lang.annotation.Annotation): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class BasicBeanDescription extends me.pushy.sdk.lib.jackson.databind.BeanDescription {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.BasicBeanDescription>;
								public _propCollector: me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertiesCollector;
								public _config: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>;
								public _annotationIntrospector: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector;
								public _classInfo: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass;
								public _defaultViews: native.Array<java.lang.Class<any>>;
								public _defaultViewsResolved: boolean;
								public _objectIdInfo: me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo;
								public findProperties(): java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition>;
								public findDeserializationConverter(): me.pushy.sdk.lib.jackson.databind.util.Converter<any,any>;
								public removeProperty(param0: string): boolean;
								public findDefaultViews(): native.Array<java.lang.Class<any>>;
								public addProperty(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition): boolean;
								public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public getIgnoredPropertyNames(): java.util.Set<string>;
								public findInjectables(): java.util.Map<any,me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember>;
								public resolveType(param0: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getClassAnnotations(): me.pushy.sdk.lib.jackson.databind.util.Annotations;
								public static forOtherUse(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): me.pushy.sdk.lib.jackson.databind.introspect.BasicBeanDescription;
								public hasKnownClassAnnotations(): boolean;
								public findClassDescription(): string;
								public isFactoryMethod(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
								public findAnyGetter(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public static forDeserialization(param0: me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertiesCollector): me.pushy.sdk.lib.jackson.databind.introspect.BasicBeanDescription;
								public static forSerialization(param0: me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertiesCollector): me.pushy.sdk.lib.jackson.databind.introspect.BasicBeanDescription;
								public findDefaultConstructor(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedConstructor;
								public findPOJOBuilderConfig(): me.pushy.sdk.lib.jackson.databind.annotation.JsonPOJOBuilder.Value;
								public _findCreatorPropertyName(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertiesCollector, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass);
								public findJsonValueMethod(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
								public findBackReferenceProperties(): java.util.Map<string,me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember>;
								public getFactoryMethods(): java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod>;
								public _findPropertyFields(param0: java.util.Collection<string>, param1: boolean): java.util.LinkedHashMap<string,me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField>;
								public getObjectIdInfo(): me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo;
								public getConstructors(): java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedConstructor>;
								public findSingleArgConstructor(param0: native.Array<java.lang.Class<any>>): java.lang.reflect.Constructor<any>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
								public findSerializationConverter(): me.pushy.sdk.lib.jackson.databind.util.Converter<any,any>;
								public bindingsForBeanType(): me.pushy.sdk.lib.jackson.databind.type.TypeBindings;
								public _properties(): java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass, param3: java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition>);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertiesCollector);
								public getClassInfo(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass;
								public findJsonValueAccessor(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public findProperty(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition;
								public findBackReferences(): java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition>;
								public findAnySetterAccessor(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public _createConverter(param0: any): me.pushy.sdk.lib.jackson.databind.util.Converter<any,any>;
								public findExpectedFormat(param0: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public findPOJOBuilder(): java.lang.Class<any>;
								public hasProperty(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): boolean;
								public findMethod(param0: string, param1: native.Array<java.lang.Class<any>>): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
								public findFactoryMethod(param0: native.Array<java.lang.Class<any>>): java.lang.reflect.Method;
								public instantiateBean(param0: boolean): any;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class BasicClassIntrospector extends me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.BasicClassIntrospector>;
								public static STRING_DESC: me.pushy.sdk.lib.jackson.databind.introspect.BasicBeanDescription;
								public static BOOLEAN_DESC: me.pushy.sdk.lib.jackson.databind.introspect.BasicBeanDescription;
								public static INT_DESC: me.pushy.sdk.lib.jackson.databind.introspect.BasicBeanDescription;
								public static LONG_DESC: me.pushy.sdk.lib.jackson.databind.introspect.BasicBeanDescription;
								public _cachedFCA: me.pushy.sdk.lib.jackson.databind.util.LRUMap<me.pushy.sdk.lib.jackson.databind.JavaType,me.pushy.sdk.lib.jackson.databind.introspect.BasicBeanDescription>;
								public forDirectClassAnnotations(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.introspect.BasicBeanDescription;
								public forSerialization(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.introspect.BasicBeanDescription;
								public constructor();
								public forDeserialization(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.introspect.BasicBeanDescription;
								public forDeserializationWithBuilder(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.introspect.BasicBeanDescription;
								public forDeserializationWithBuilder(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.BeanDescription;
								public forCreation(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.BeanDescription;
								public forClassAnnotations(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.BeanDescription;
								public collectPropertiesWithBuilder(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver, param3: boolean): me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertiesCollector;
								public _findStdJdkCollectionDesc(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.introspect.BasicBeanDescription;
								public forDeserialization(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.BeanDescription;
								public _resolveAnnotatedClass(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass;
								public _resolveAnnotatedWithoutSuperTypes(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass;
								public forCreation(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.introspect.BasicBeanDescription;
								public forDirectClassAnnotations(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.BeanDescription;
								public collectProperties(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver, param3: boolean, param4: string): me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertiesCollector;
								public forClassAnnotations(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.introspect.BasicBeanDescription;
								public constructPropertyCollector(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: boolean, param4: string): me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertiesCollector;
								public _isStdJDKCollection(param0: me.pushy.sdk.lib.jackson.databind.JavaType): boolean;
								public forSerialization(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.BeanDescription;
								public _findStdTypeDesc(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.introspect.BasicBeanDescription;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export abstract class BeanPropertyDefinition extends me.pushy.sdk.lib.jackson.databind.util.Named {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition>;
								public static EMPTY_INCLUDE: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public isRequired(): boolean;
								public couldDeserialize(): boolean;
								public hasSetter(): boolean;
								public getPrimaryType(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getMutator(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public isTypeId(): boolean;
								public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public hasConstructorParameter(): boolean;
								public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public hasField(): boolean;
								public withSimpleName(param0: string): me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition;
								public getPrimaryMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public findViews(): native.Array<java.lang.Class<any>>;
								public isExplicitlyNamed(): boolean;
								public getAccessor(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
								public getRawPrimaryType(): java.lang.Class<any>;
								public getField(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField;
								public withName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition;
								public getNonConstructorMutator(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public findObjectIdInfo(): me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo;
								public getName(): string;
								public getSetter(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
								public constructor();
								public hasName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): boolean;
								public hasGetter(): boolean;
								public getGetter(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
								public getConstructorParameters(): java.util.Iterator<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter>;
								public findReferenceName(): string;
								public isExplicitlyIncluded(): boolean;
								public findInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public findReferenceType(): me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector.ReferenceProperty;
								public getInternalName(): string;
								public getConstructorParameter(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter;
								public couldSerialize(): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export abstract class ClassIntrospector {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector>;
								public forDeserializationWithBuilder(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.BeanDescription;
								public forCreation(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.BeanDescription;
								public forClassAnnotations(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.BeanDescription;
								public forDeserialization(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.BeanDescription;
								public forDirectClassAnnotations(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.BeanDescription;
								public constructor();
								public forSerialization(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.BeanDescription;
							}
							export module ClassIntrospector {
								export class MixInResolver {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver>;
									/**
									 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector$MixInResolver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: {
										findMixInClassFor(param0: java.lang.Class<any>): java.lang.Class<any>;
										copy(): me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver;
									});
									public constructor();
									public copy(): me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver;
									public findMixInClassFor(param0: java.lang.Class<any>): java.lang.Class<any>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class CollectorBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.CollectorBase>;
								public static NO_ANNOTATION_MAPS: native.Array<me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap>;
								public static NO_ANNOTATIONS: native.Array<java.lang.annotation.Annotation>;
								public _intr: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector;
								public collectAnnotations(param0: native.Array<java.lang.annotation.Annotation>): me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector;
								public static _ignorableAnnotation(param0: java.lang.annotation.Annotation): boolean;
								public collectAnnotations(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector, param1: native.Array<java.lang.annotation.Annotation>): me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector;
								public collectFromBundle(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector, param1: java.lang.annotation.Annotation): me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector;
								public collectDefaultAnnotations(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector, param1: native.Array<java.lang.annotation.Annotation>): me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector);
								public collectDefaultFromBundle(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector, param1: java.lang.annotation.Annotation): me.pushy.sdk.lib.jackson.databind.introspect.AnnotationCollector;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export abstract class ConcreteBeanPropertyBase extends me.pushy.sdk.lib.jackson.databind.BeanProperty {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase>;
								public _metadata: me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
								public _propertyFormat: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public _aliases: java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
								public isRequired(): boolean;
								public isVirtual(): boolean;
								public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public getName(): string;
								public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase);
								public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
								public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
								public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class JacksonAnnotationIntrospector extends me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.JacksonAnnotationIntrospector>;
								public _annotationsInside: me.pushy.sdk.lib.jackson.databind.util.LRUMap<java.lang.Class<any>,java.lang.Boolean>;
								public _cfgConstructorPropertiesImpliesCreator: boolean;
								public hasIgnoreMarker(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): boolean;
								public findPropertyContentTypeResolver(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>;
								public findTypeName(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): string;
								public findContentDeserializer(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
								public findPropertyIgnorals(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.annotation.JsonIgnoreProperties.Value;
								public findNameForSerialization(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public findPOJOBuilder(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): java.lang.Class<any>;
								public findCreatorAnnotation(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.annotation.JsonCreator.Mode;
								public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public findCreatorBinding(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.annotation.JsonCreator.Mode;
								public findObjectReferenceInfo(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo): me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo;
								public findKeySerializer(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
								public findDeserializationContentConverter(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): any;
								public setConstructorPropertiesImpliesCreator(param0: boolean): me.pushy.sdk.lib.jackson.databind.introspect.JacksonAnnotationIntrospector;
								public findTypeResolver(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>;
								public findSerializationConverter(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
								public findInjectableValueId(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): any;
								public hasAnyGetter(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Boolean;
								public findPropertyDescription(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): string;
								public findDefaultEnumValue(param0: java.lang.Class<java.lang.Enum<any>>): java.lang.Enum<any>;
								public findReferenceType(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector.ReferenceProperty;
								public findSerializationPropertyOrder(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): native.Array<string>;
								public _findConstructorName(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public _constructStdTypeResolverBuilder(): me.pushy.sdk.lib.jackson.databind.jsontype.impl.StdTypeResolverBuilder;
								public findSerializationTyping(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.annotation.JsonSerialize.Typing;
								public findNameForDeserialization(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public findAndAddVirtualProperties(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass, param2: java.util.List<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>): void;
								public refineDeserializationType(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public resolveSetterConflict(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
								public constructor();
								public findFormat(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public findEnumValue(param0: java.lang.Enum<any>): string;
								public _classIfExplicit(param0: java.lang.Class<any>): java.lang.Class<any>;
								public findViews(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): native.Array<java.lang.Class<any>>;
								public findObjectIdInfo(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo;
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public findDeserializationConverter(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
								public _classIfExplicit(param0: java.lang.Class<any>, param1: java.lang.Class<any>): java.lang.Class<any>;
								public findNamingStrategy(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): any;
								public findDeserializationKeyType(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.databind.JavaType): java.lang.Class<any>;
								public readResolve(): any;
								public isAnnotationBundle(param0: java.lang.annotation.Annotation): boolean;
								public _propertyName(param0: string, param1: string): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public findDeserializationType(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.databind.JavaType): java.lang.Class<any>;
								public _constructVirtualProperty(param0: me.pushy.sdk.lib.jackson.databind.annotation.JsonAppend.Attr, param1: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass, param3: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter;
								public findSerializationContentConverter(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): any;
								public _isIgnorable(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): boolean;
								public isIgnorableType(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): java.lang.Boolean;
								public findInjectableValue(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.annotation.JacksonInject.Value;
								public findSubtypes(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.util.List<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>;
								public findPropertyAccess(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.annotation.JsonProperty.Access;
								public findContentSerializer(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
								public _constructVirtualProperty(param0: me.pushy.sdk.lib.jackson.databind.annotation.JsonAppend.Prop, param1: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter;
								public findSetterInfo(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.annotation.JsonSetter.Value;
								public findUnwrappingNameTransformer(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.databind.util.NameTransformer;
								public hasCreatorAnnotation(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): boolean;
								public findImplicitPropertyName(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): string;
								public findKeyDeserializer(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
								public findSerializationKeyType(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.databind.JavaType): java.lang.Class<any>;
								public hasAsValueAnnotation(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
								public findRootName(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public hasAnySetter(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Boolean;
								public findPOJOBuilderConfig(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): me.pushy.sdk.lib.jackson.databind.annotation.JsonPOJOBuilder.Value;
								public _constructNoTypeResolverBuilder(): me.pushy.sdk.lib.jackson.databind.jsontype.impl.StdTypeResolverBuilder;
								public findAutoDetectVisibility(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass, param1: me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>): me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>;
								public findDeserializer(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
								public findClassDescription(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): string;
								public findDeserializationContentType(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.databind.JavaType): java.lang.Class<any>;
								public findSerializationSortAlphabetically(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Boolean;
								public hasAsValue(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Boolean;
								public findValueInstantiator(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): any;
								public findMergeInfo(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Boolean;
								public _findTypeResolver(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>;
								public findNullSerializer(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
								public findEnumValues(param0: java.lang.Class<any>, param1: native.Array<java.lang.Enum<any>>, param2: native.Array<string>): native.Array<string>;
								public findFilterId(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
								public findPropertyDefaultValue(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): string;
								public findPropertyIndex(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Integer;
								public findSerializer(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): any;
								public isTypeId(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): java.lang.Boolean;
								public findSerializationContentType(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: me.pushy.sdk.lib.jackson.databind.JavaType): java.lang.Class<any>;
								public hasAnyGetterAnnotation(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
								public hasRequiredMarker(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): java.lang.Boolean;
								public findPropertyTypeResolver(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>;
								public refineSerializationType(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public findPropertyAliases(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
								public findSerializationType(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): java.lang.Class<any>;
								public hasAnySetterAnnotation(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class MemberKey {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.MemberKey>;
								public toString(): string;
								public constructor(param0: string, param1: native.Array<java.lang.Class<any>>);
								public equals(param0: any): boolean;
								public constructor(param0: java.lang.reflect.Method);
								public hashCode(): number;
								public constructor(param0: java.lang.reflect.Constructor<any>);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export abstract class NopAnnotationIntrospector extends me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.NopAnnotationIntrospector>;
								public static instance: me.pushy.sdk.lib.jackson.databind.introspect.NopAnnotationIntrospector;
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class ObjectIdInfo {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo>;
								public _propertyName: me.pushy.sdk.lib.jackson.databind.PropertyName;
								public _generator: java.lang.Class<any>;
								public _resolver: java.lang.Class<any>;
								public _scope: java.lang.Class<any>;
								public _alwaysAsId: boolean;
								public toString(): string;
								public withAlwaysAsId(param0: boolean): me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo;
								public getGeneratorType(): java.lang.Class<any>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: java.lang.Class<any>, param2: java.lang.Class<any>, param3: boolean);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: java.lang.Class<any>, param2: java.lang.Class<any>, param3: boolean, param4: java.lang.Class<any>);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyName, param1: java.lang.Class<any>, param2: java.lang.Class<any>, param3: java.lang.Class<any>);
								public getScope(): java.lang.Class<any>;
								public getResolverType(): java.lang.Class<any>;
								public getAlwaysAsId(): boolean;
								public static empty(): me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo;
								public getPropertyName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class POJOPropertiesCollector {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertiesCollector>;
								public _config: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>;
								public _forSerialization: boolean;
								public _stdBeanNaming: boolean;
								public _type: me.pushy.sdk.lib.jackson.databind.JavaType;
								public _classDef: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass;
								public _visibilityChecker: me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>;
								public _annotationIntrospector: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector;
								public _useAnnotations: boolean;
								public _mutatorPrefix: string;
								public _collected: boolean;
								public _properties: java.util.LinkedHashMap<string,me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>;
								public _creatorProperties: java.util.LinkedList<me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>;
								public _anyGetters: java.util.LinkedList<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember>;
								public _anySetters: java.util.LinkedList<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod>;
								public _anySetterField: java.util.LinkedList<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember>;
								public _jsonValueAccessors: java.util.LinkedList<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember>;
								public _ignoredPropertyNames: java.util.HashSet<string>;
								public _injectables: java.util.LinkedHashMap<any,me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember>;
								public getClassDef(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass;
								public _addMethods(param0: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>): void;
								public getConfig(): me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>;
								public getIgnoredPropertyNames(): java.util.Set<string>;
								public getAnyGetter(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public _addGetterMethod(param0: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod, param2: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): void;
								public getJsonValueMethod(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
								public getProperties(): java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition>;
								public _renameUsing(param0: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>, param1: me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy): void;
								public _sortProperties(param0: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>): void;
								public getAnySetterField(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public _addCreators(param0: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>): void;
								public _property(param0: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>, param1: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder;
								public _property(param0: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>, param1: string): me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder;
								public collectAll(): void;
								public _removeUnwantedProperties(param0: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>): void;
								public _doAddInjectable(param0: me.pushy.sdk.lib.jackson.annotation.JacksonInject.Value, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): void;
								public _removeUnwantedAccessor(param0: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>): void;
								public findPOJOBuilderClass(): java.lang.Class<any>;
								public getInjectables(): java.util.Map<any,me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember>;
								public getObjectIdInfo(): me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: boolean, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass, param4: string);
								public reportProblem(param0: string, param1: native.Array<any>): void;
								public getJsonValueAccessor(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public _addInjectables(param0: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>): void;
								public getPropertyMap(): java.util.Map<string,me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>;
								public _addSetterMethod(param0: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod, param2: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): void;
								public _addCreatorParam(param0: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter): void;
								public getAnnotationIntrospector(): me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector;
								public _renameProperties(param0: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>): void;
								public getAnySetterMethod(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
								public _addFields(param0: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>): void;
								public _updateCreatorProperty(param0: me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder, param1: java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>): void;
								public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public _renameWithWrappers(param0: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class POJOPropertyBuilder extends me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition implements java.lang.Comparable<me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>  {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>;
								public _forSerialization: boolean;
								public _config: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>;
								public _annotationIntrospector: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector;
								public _name: me.pushy.sdk.lib.jackson.databind.PropertyName;
								public _internalName: me.pushy.sdk.lib.jackson.databind.PropertyName;
								public _fields: me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.Linked<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField>;
								public _ctorParameters: me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.Linked<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter>;
								public _getters: me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.Linked<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod>;
								public _setters: me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.Linked<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod>;
								public _metadata: me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
								public _referenceInfo: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector.ReferenceProperty;
								public addField(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField, param1: me.pushy.sdk.lib.jackson.databind.PropertyName, param2: boolean, param3: boolean, param4: boolean): void;
								public hasSetter(): boolean;
								public getPrimaryType(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public isTypeId(): boolean;
								public addSetter(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod, param1: me.pushy.sdk.lib.jackson.databind.PropertyName, param2: boolean, param3: boolean, param4: boolean): void;
								public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public findViews(): native.Array<java.lang.Class<any>>;
								public withSimpleName(param0: string): me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder;
								public isExplicitlyNamed(): boolean;
								public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
								public withName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder;
								public getRawPrimaryType(): java.lang.Class<any>;
								public getField(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField;
								public findExplicitNames(): java.util.Set<me.pushy.sdk.lib.jackson.databind.PropertyName>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector, param2: boolean, param3: me.pushy.sdk.lib.jackson.databind.PropertyName);
								public _getterPriority(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): number;
								public withName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition;
								public removeConstructors(): void;
								public constructor();
								public removeIgnored(): void;
								public hasName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): boolean;
								public hasGetter(): boolean;
								public getConstructorParameters(): java.util.Iterator<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter>;
								public isExplicitlyIncluded(): boolean;
								public _getSetterInfo(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
								public findReferenceType(): me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector.ReferenceProperty;
								public getInternalName(): string;
								public getConstructorParameter(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter;
								public couldSerialize(): boolean;
								public fromMemberAnnotationsExcept(param0: me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.WithMember<any>, param1: any): any;
								public couldDeserialize(): boolean;
								public anyVisible(): boolean;
								public toString(): string;
								public addAll(param0: me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder): void;
								public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public hasConstructorParameter(): boolean;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector, param2: boolean, param3: me.pushy.sdk.lib.jackson.databind.PropertyName, param4: me.pushy.sdk.lib.jackson.databind.PropertyName);
								public _findDefaultValue(): string;
								public hasField(): boolean;
								public mergeAnnotations(param0: boolean): void;
								public withSimpleName(param0: string): me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition;
								public getPrimaryMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public addGetter(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod, param1: me.pushy.sdk.lib.jackson.databind.PropertyName, param2: boolean, param3: boolean, param4: boolean): void;
								public trimByVisibility(): void;
								public _findRequired(): java.lang.Boolean;
								public removeNonVisible(param0: boolean): me.pushy.sdk.lib.jackson.annotation.JsonProperty.Access;
								public anyIgnorals(): boolean;
								public findObjectIdInfo(): me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo;
								public getName(): string;
								public getSetter(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
								public compareTo(param0: me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder): number;
								public _setterPriority(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): number;
								public _findDescription(): string;
								public getGetter(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
								public findInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public explode(param0: java.util.Collection<me.pushy.sdk.lib.jackson.databind.PropertyName>): java.util.Collection<me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder>;
								public addCtor(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter, param1: me.pushy.sdk.lib.jackson.databind.PropertyName, param2: boolean, param3: boolean, param4: boolean): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
								public findAccess(): me.pushy.sdk.lib.jackson.annotation.JsonProperty.Access;
								public fromMemberAnnotations(param0: me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.WithMember<any>): any;
								public _findIndex(): java.lang.Integer;
							}
							export module POJOPropertyBuilder {
								export class Linked<T>  extends java.lang.Object {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.Linked<any>>;
									public value: T;
									public next: me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.Linked<T>;
									public name: me.pushy.sdk.lib.jackson.databind.PropertyName;
									public isNameExplicit: boolean;
									public isVisible: boolean;
									public isMarkedIgnored: boolean;
									public withoutIgnored(): me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.Linked<T>;
									public trimByVisibility(): me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.Linked<T>;
									public constructor(param0: T, param1: me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.Linked<T>, param2: me.pushy.sdk.lib.jackson.databind.PropertyName, param3: boolean, param4: boolean, param5: boolean);
									public withNext(param0: me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.Linked<T>): me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.Linked<T>;
									public append(param0: me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.Linked<T>): me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.Linked<T>;
									public withValue(param0: T): me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.Linked<T>;
									public withoutNext(): me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.Linked<T>;
									public withoutNonVisible(): me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.Linked<T>;
									public toString(): string;
								}
								export class MemberIterator<T>  extends java.util.Iterator<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.MemberIterator<any>>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.Linked<any>);
									public hasNext(): boolean;
									public remove(): void;
									public next(): any;
								}
								export class WithMember<T>  extends java.lang.Object {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.WithMember<any>>;
									/**
									 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder$WithMember interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: {
										withMember(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): T;
									});
									public constructor();
									public withMember(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): T;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class SimpleMixInResolver extends me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.SimpleMixInResolver>;
								public _overrides: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver;
								public _localMixIns: java.util.Map<me.pushy.sdk.lib.jackson.databind.type.ClassKey,java.lang.Class<any>>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver);
								public withOverrides(param0: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver): me.pushy.sdk.lib.jackson.databind.introspect.SimpleMixInResolver;
								public withoutLocalDefinitions(): me.pushy.sdk.lib.jackson.databind.introspect.SimpleMixInResolver;
								public setLocalDefinitions(param0: java.util.Map<java.lang.Class<any>,java.lang.Class<any>>): void;
								public addLocalDefinition(param0: java.lang.Class<any>, param1: java.lang.Class<any>): void;
								public findMixInClassFor(param0: java.lang.Class<any>): java.lang.Class<any>;
								public copy(): me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver;
								public localSize(): number;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ClassIntrospector.MixInResolver, param1: java.util.Map<me.pushy.sdk.lib.jackson.databind.type.ClassKey,java.lang.Class<any>>);
								public copy(): me.pushy.sdk.lib.jackson.databind.introspect.SimpleMixInResolver;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class TypeResolutionContext {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									resolveType(param0: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JavaType;
								});
								public constructor();
								public resolveType(param0: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
							export module TypeResolutionContext {
								export class Basic extends me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext.Basic>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.type.TypeFactory, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings);
									public resolveType(param0: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JavaType;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class VirtualAnnotatedMember extends me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.VirtualAnnotatedMember>;
								public _declaringClass: java.lang.Class<any>;
								public _type: me.pushy.sdk.lib.jackson.databind.JavaType;
								public _name: string;
								public toString(): string;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap);
								public getModifiers(): number;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember);
								public setValue(param0: any, param1: any): void;
								public getName(): string;
								public equals(param0: any): boolean;
								public constructor();
								public getAnnotated(): java.lang.reflect.AnnotatedElement;
								public getDeclaringClass(): java.lang.Class<any>;
								public getValue(param0: any): any;
								public getMember(): java.lang.reflect.Member;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.TypeResolutionContext, param1: java.lang.Class<any>, param2: string, param3: me.pushy.sdk.lib.jackson.databind.JavaType);
								public getAnnotated(): java.lang.reflect.Field;
								public getType(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBindings): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getAnnotationCount(): number;
								public getRawType(): java.lang.Class<any>;
								public withAnnotations(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotationMap): me.pushy.sdk.lib.jackson.databind.introspect.Annotated;
								public hashCode(): number;
								public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class VisibilityChecker<T>  extends java.lang.Object {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any>>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									with(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect): T;
									withOverrides(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value): T;
									with(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): T;
									withVisibility(param0: me.pushy.sdk.lib.jackson.annotation.PropertyAccessor, param1: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): T;
									withGetterVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): T;
									withIsGetterVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): T;
									withSetterVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): T;
									withCreatorVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): T;
									withFieldVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): T;
									isGetterVisible(param0: java.lang.reflect.Method): boolean;
									isGetterVisible(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
									isIsGetterVisible(param0: java.lang.reflect.Method): boolean;
									isIsGetterVisible(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
									isSetterVisible(param0: java.lang.reflect.Method): boolean;
									isSetterVisible(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
									isCreatorVisible(param0: java.lang.reflect.Member): boolean;
									isCreatorVisible(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): boolean;
									isFieldVisible(param0: java.lang.reflect.Field): boolean;
									isFieldVisible(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField): boolean;
								});
								public constructor();
								public withOverrides(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value): T;
								public with(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): T;
								public isIsGetterVisible(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
								public with(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect): T;
								public isIsGetterVisible(param0: java.lang.reflect.Method): boolean;
								public isCreatorVisible(param0: java.lang.reflect.Member): boolean;
								public isSetterVisible(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
								public isSetterVisible(param0: java.lang.reflect.Method): boolean;
								public withSetterVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): T;
								public withFieldVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): T;
								public isGetterVisible(param0: java.lang.reflect.Method): boolean;
								public withGetterVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): T;
								public isGetterVisible(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
								public withIsGetterVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): T;
								public isFieldVisible(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField): boolean;
								public isCreatorVisible(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): boolean;
								public withVisibility(param0: me.pushy.sdk.lib.jackson.annotation.PropertyAccessor, param1: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): T;
								public withCreatorVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): T;
								public isFieldVisible(param0: java.lang.reflect.Field): boolean;
							}
							export module VisibilityChecker {
								export class Std extends java.lang.Object {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker.Std>;
									public static DEFAULT: me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker.Std;
									public _getterMinLevel: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
									public _isGetterMinLevel: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
									public _setterMinLevel: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
									public _creatorMinLevel: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
									public _fieldMinLevel: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility;
									public isIsGetterVisible(param0: java.lang.reflect.Method): boolean;
									public with(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect): any;
									public static construct(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value): me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker.Std;
									public isFieldVisible(param0: java.lang.reflect.Field): boolean;
									public isCreatorVisible(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): boolean;
									public _with(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility, param1: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility, param2: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility, param3: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility, param4: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker.Std;
									public isCreatorVisible(param0: java.lang.reflect.Member): boolean;
									public withGetterVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): any;
									public with(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect): me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker.Std;
									public withFieldVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): any;
									public isGetterVisible(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
									public withFieldVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker.Std;
									public withOverrides(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility);
									public isSetterVisible(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
									public with(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): any;
									public withOverrides(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Value): me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker.Std;
									public toString(): string;
									public withIsGetterVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect);
									public withGetterVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker.Std;
									public constructor(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility, param1: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility, param2: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility, param3: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility, param4: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility);
									public withIsGetterVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker.Std;
									public withCreatorVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker.Std;
									public static defaultInstance(): me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker.Std;
									public isFieldVisible(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField): boolean;
									public withSetterVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): any;
									public withSetterVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker.Std;
									public isSetterVisible(param0: java.lang.reflect.Method): boolean;
									public withVisibility(param0: me.pushy.sdk.lib.jackson.annotation.PropertyAccessor, param1: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker.Std;
									public isGetterVisible(param0: java.lang.reflect.Method): boolean;
									public with(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker.Std;
									public isIsGetterVisible(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
									public withVisibility(param0: me.pushy.sdk.lib.jackson.annotation.PropertyAccessor, param1: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): any;
									public withCreatorVisibility(param0: me.pushy.sdk.lib.jackson.annotation.JsonAutoDetect.Visibility): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module introspect {
							export class WithMember<T>  extends java.lang.Object {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.introspect.WithMember<any>>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.introspect.WithMember<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									withMember(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): T;
								});
								public constructor();
								public withMember(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): T;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsonFormatVisitors {
							export class JsonAnyFormatVisitor {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
							export module JsonAnyFormatVisitor {
								export class Base extends me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor.Base>;
									public constructor();
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsonFormatVisitors {
							export class JsonArrayFormatVisitor extends me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWithSerializerProvider {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									itemsFormat(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitable, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
									itemsFormat(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatTypes): void;
									getProvider(): me.pushy.sdk.lib.jackson.databind.SerializerProvider;
									setProvider(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								});
								public constructor();
								public itemsFormat(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitable, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								public getProvider(): me.pushy.sdk.lib.jackson.databind.SerializerProvider;
								public itemsFormat(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatTypes): void;
								public setProvider(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
							}
							export module JsonArrayFormatVisitor {
								export class Base extends me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor.Base>;
									public _provider: me.pushy.sdk.lib.jackson.databind.SerializerProvider;
									public constructor();
									public itemsFormat(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitable, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
									public setProvider(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider);
									public getProvider(): me.pushy.sdk.lib.jackson.databind.SerializerProvider;
									public itemsFormat(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatTypes): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsonFormatVisitors {
							export class JsonBooleanFormatVisitor extends me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									format(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat): void;
									enumTypes(param0: java.util.Set<string>): void;
								});
								public constructor();
								public format(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat): void;
								public enumTypes(param0: java.util.Set<string>): void;
							}
							export module JsonBooleanFormatVisitor {
								export class Base extends me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor.Base implements me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor.Base>;
									public constructor();
									public enumTypes(param0: java.util.Set<string>): void;
									public format(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsonFormatVisitors {
							export class JsonFormatTypes {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatTypes>;
								public static STRING: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatTypes;
								public static NUMBER: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatTypes;
								public static INTEGER: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatTypes;
								public static BOOLEAN: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatTypes;
								public static OBJECT: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatTypes;
								public static ARRAY: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatTypes;
								public static NULL: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatTypes;
								public static ANY: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatTypes;
								public static values(): native.Array<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatTypes>;
								public value(): string;
								public static valueOf(param0: string): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatTypes;
								public static forValue(param0: string): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatTypes;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsonFormatVisitors {
							export class JsonFormatVisitable {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitable>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								});
								public constructor();
								public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsonFormatVisitors {
							export class JsonFormatVisitorWithSerializerProvider {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWithSerializerProvider>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWithSerializerProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									getProvider(): me.pushy.sdk.lib.jackson.databind.SerializerProvider;
									setProvider(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								});
								public constructor();
								public getProvider(): me.pushy.sdk.lib.jackson.databind.SerializerProvider;
								public setProvider(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsonFormatVisitors {
							export class JsonFormatVisitorWrapper extends me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWithSerializerProvider {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									expectObjectFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor;
									expectArrayFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor;
									expectStringFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor;
									expectNumberFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor;
									expectIntegerFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor;
									expectBooleanFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor;
									expectNullFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor;
									expectAnyFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor;
									expectMapFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor;
									getProvider(): me.pushy.sdk.lib.jackson.databind.SerializerProvider;
									setProvider(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								});
								public constructor();
								public expectStringFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor;
								public expectObjectFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor;
								public expectBooleanFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor;
								public expectIntegerFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor;
								public expectNullFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor;
								public expectAnyFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor;
								public getProvider(): me.pushy.sdk.lib.jackson.databind.SerializerProvider;
								public expectMapFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor;
								public expectArrayFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor;
								public expectNumberFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor;
								public setProvider(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
							}
							export module JsonFormatVisitorWrapper {
								export class Base extends me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper.Base>;
									public _provider: me.pushy.sdk.lib.jackson.databind.SerializerProvider;
									public constructor();
									public expectNullFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor;
									public setProvider(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public expectStringFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider);
									public expectIntegerFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor;
									public expectBooleanFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor;
									public expectAnyFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor;
									public expectNumberFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor;
									public getProvider(): me.pushy.sdk.lib.jackson.databind.SerializerProvider;
									public expectObjectFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor;
									public expectMapFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor;
									public expectArrayFormat(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsonFormatVisitors {
							export class JsonIntegerFormatVisitor extends me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									numberType(param0: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType): void;
									format(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat): void;
									enumTypes(param0: java.util.Set<string>): void;
								});
								public constructor();
								public numberType(param0: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType): void;
								public format(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat): void;
								public enumTypes(param0: java.util.Set<string>): void;
							}
							export module JsonIntegerFormatVisitor {
								export class Base extends me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor.Base implements me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor.Base>;
									public constructor();
									public numberType(param0: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType): void;
									public enumTypes(param0: java.util.Set<string>): void;
									public format(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsonFormatVisitors {
							export class JsonMapFormatVisitor extends me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWithSerializerProvider {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									keyFormat(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitable, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
									valueFormat(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitable, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
									getProvider(): me.pushy.sdk.lib.jackson.databind.SerializerProvider;
									setProvider(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								});
								public constructor();
								public keyFormat(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitable, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								public valueFormat(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitable, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								public getProvider(): me.pushy.sdk.lib.jackson.databind.SerializerProvider;
								public setProvider(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
							}
							export module JsonMapFormatVisitor {
								export class Base extends me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor.Base>;
									public _provider: me.pushy.sdk.lib.jackson.databind.SerializerProvider;
									public keyFormat(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitable, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
									public constructor();
									public setProvider(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public valueFormat(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitable, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider);
									public getProvider(): me.pushy.sdk.lib.jackson.databind.SerializerProvider;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsonFormatVisitors {
							export class JsonNullFormatVisitor {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
							export module JsonNullFormatVisitor {
								export class Base extends me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor.Base>;
									public constructor();
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsonFormatVisitors {
							export class JsonNumberFormatVisitor extends me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									numberType(param0: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType): void;
									format(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat): void;
									enumTypes(param0: java.util.Set<string>): void;
								});
								public constructor();
								public numberType(param0: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType): void;
								public format(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat): void;
								public enumTypes(param0: java.util.Set<string>): void;
							}
							export module JsonNumberFormatVisitor {
								export class Base extends me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor.Base implements me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor.Base>;
									public constructor();
									public numberType(param0: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType): void;
									public enumTypes(param0: java.util.Set<string>): void;
									public format(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsonFormatVisitors {
							export class JsonObjectFormatVisitor extends me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWithSerializerProvider {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									property(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): void;
									property(param0: string, param1: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitable, param2: me.pushy.sdk.lib.jackson.databind.JavaType): void;
									optionalProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): void;
									optionalProperty(param0: string, param1: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitable, param2: me.pushy.sdk.lib.jackson.databind.JavaType): void;
									getProvider(): me.pushy.sdk.lib.jackson.databind.SerializerProvider;
									setProvider(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								});
								public constructor();
								public property(param0: string, param1: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitable, param2: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								public optionalProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): void;
								public getProvider(): me.pushy.sdk.lib.jackson.databind.SerializerProvider;
								public property(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): void;
								public optionalProperty(param0: string, param1: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitable, param2: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								public setProvider(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
							}
							export module JsonObjectFormatVisitor {
								export class Base extends me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor.Base>;
									public _provider: me.pushy.sdk.lib.jackson.databind.SerializerProvider;
									public constructor();
									public setProvider(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public property(param0: string, param1: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitable, param2: me.pushy.sdk.lib.jackson.databind.JavaType): void;
									public optionalProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider);
									public getProvider(): me.pushy.sdk.lib.jackson.databind.SerializerProvider;
									public property(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): void;
									public optionalProperty(param0: string, param1: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitable, param2: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsonFormatVisitors {
							export class JsonStringFormatVisitor extends me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									format(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat): void;
									enumTypes(param0: java.util.Set<string>): void;
								});
								public constructor();
								public format(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat): void;
								public enumTypes(param0: java.util.Set<string>): void;
							}
							export module JsonStringFormatVisitor {
								export class Base extends me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor.Base implements me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor.Base>;
									public constructor();
									public enumTypes(param0: java.util.Set<string>): void;
									public format(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsonFormatVisitors {
							export class JsonValueFormat {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat>;
								public static COLOR: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat;
								public static DATE: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat;
								public static DATE_TIME: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat;
								public static EMAIL: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat;
								public static HOST_NAME: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat;
								public static IP_ADDRESS: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat;
								public static IPV6: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat;
								public static PHONE: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat;
								public static REGEX: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat;
								public static STYLE: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat;
								public static TIME: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat;
								public static URI: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat;
								public static UTC_MILLISEC: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat;
								public toString(): string;
								public static valueOf(param0: string): me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat;
								public static values(): native.Array<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsonFormatVisitors {
							export class JsonValueFormatVisitor {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									format(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat): void;
									enumTypes(param0: java.util.Set<string>): void;
								});
								public constructor();
								public format(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat): void;
								public enumTypes(param0: java.util.Set<string>): void;
							}
							export module JsonValueFormatVisitor {
								export class Base extends me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor.Base>;
									public constructor();
									public enumTypes(param0: java.util.Set<string>): void;
									public format(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsonschema {
							export class JsonSchema {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonschema.JsonSchema>;
								public toString(): string;
								public static getDefaultSchemaNode(): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public equals(param0: any): boolean;
								public hashCode(): number;
								public getSchemaNode(): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.node.ObjectNode);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsonschema {
							export class JsonSerializableSchema {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonschema.JsonSerializableSchema>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.jsonschema.JsonSerializableSchema interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									id(): string;
									schemaType(): string;
									schemaObjectPropertiesDefinition(): string;
									schemaItemDefinition(): string;
								});
								public constructor();
								public static NO_VALUE: string;
								public schemaItemDefinition(): string;
								public schemaObjectPropertiesDefinition(): string;
								public schemaType(): string;
								public id(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsonschema {
							export class SchemaAware {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsonschema.SchemaAware>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.jsonschema.SchemaAware interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
								});
								public constructor();
								public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export class NamedType {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>;
								public _class: java.lang.Class<any>;
								public _hashCode: number;
								public _name: string;
								public hasName(): boolean;
								public toString(): string;
								public setName(param0: string): void;
								public getName(): string;
								public getType(): java.lang.Class<any>;
								public equals(param0: any): boolean;
								public constructor(param0: java.lang.Class<any>);
								public hashCode(): number;
								public constructor(param0: java.lang.Class<any>, param1: string);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export abstract class SubtypeResolver {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.SubtypeResolver>;
								public registerSubtypes(param0: native.Array<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>): void;
								public collectAndResolveSubtypesByTypeId(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.JavaType): java.util.Collection<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>;
								public collectAndResolveSubtypes(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass, param1: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param2: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): java.util.Collection<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>;
								public collectAndResolveSubtypesByTypeId(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): java.util.Collection<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>;
								public registerSubtypes(param0: native.Array<java.lang.Class<any>>): void;
								public collectAndResolveSubtypesByClass(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): java.util.Collection<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>;
								public constructor();
								public collectAndResolveSubtypes(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param1: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param2: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector, param3: me.pushy.sdk.lib.jackson.databind.JavaType): java.util.Collection<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>;
								public collectAndResolveSubtypesByClass(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.JavaType): java.util.Collection<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export abstract class TypeDeserializer {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer>;
								public deserializeTypedFromAny(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public static deserializeIfNatural(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.JavaType): any;
								public deserializeTypedFromScalar(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public static deserializeIfNatural(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: java.lang.Class<any>): any;
								public getPropertyName(): string;
								public getTypeInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
								public deserializeTypedFromArray(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								public getDefaultImpl(): java.lang.Class<any>;
								public constructor();
								public getTypeIdResolver(): me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver;
								public forProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
								public deserializeTypedFromObject(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export class TypeIdResolver {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									init(param0: me.pushy.sdk.lib.jackson.databind.JavaType): void;
									idFromValue(param0: any): string;
									idFromValueAndType(param0: any, param1: java.lang.Class<any>): string;
									idFromBaseType(): string;
									typeFromId(param0: me.pushy.sdk.lib.jackson.databind.DatabindContext, param1: string): me.pushy.sdk.lib.jackson.databind.JavaType;
									getDescForKnownTypeIds(): string;
									getMechanism(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id;
								});
								public constructor();
								public typeFromId(param0: me.pushy.sdk.lib.jackson.databind.DatabindContext, param1: string): me.pushy.sdk.lib.jackson.databind.JavaType;
								public idFromValue(param0: any): string;
								public getDescForKnownTypeIds(): string;
								public getMechanism(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id;
								public idFromBaseType(): string;
								public idFromValueAndType(param0: any, param1: java.lang.Class<any>): string;
								public init(param0: me.pushy.sdk.lib.jackson.databind.JavaType): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export class TypeResolverBuilder<T>  extends java.lang.Object {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any>>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									getDefaultImpl(): java.lang.Class<any>;
									buildTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: java.util.Collection<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>): me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
									buildTypeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: java.util.Collection<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>): me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
									init(param0: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver): T;
									inclusion(param0: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As): T;
									typeProperty(param0: string): T;
									defaultImpl(param0: java.lang.Class<any>): T;
									typeIdVisibility(param0: boolean): T;
								});
								public constructor();
								public getDefaultImpl(): java.lang.Class<any>;
								public buildTypeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: java.util.Collection<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>): me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
								public inclusion(param0: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As): T;
								public init(param0: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver): T;
								public buildTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: java.util.Collection<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>): me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
								public typeProperty(param0: string): T;
								public defaultImpl(param0: java.lang.Class<any>): T;
								public typeIdVisibility(param0: boolean): T;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export abstract class TypeSerializer {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer>;
								public writeTypePrefixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public writeCustomTypePrefixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
								public writeCustomTypeSuffixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
								public writeTypeSuffixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public constructor();
								public writeTypePrefixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public writeCustomTypeSuffixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
								public forProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
								public getTypeIdResolver(): me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver;
								public getPropertyName(): string;
								public writeCustomTypePrefixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
								public writeTypePrefixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public writeTypeSuffixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public writeTypePrefixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: java.lang.Class<any>): void;
								public writeTypePrefixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: java.lang.Class<any>): void;
								public writeCustomTypeSuffixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
								public getTypeInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
								public writeTypeSuffixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public writeTypePrefixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: java.lang.Class<any>): void;
								public writeCustomTypePrefixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export module impl {
								export class AsArrayTypeDeserializer extends me.pushy.sdk.lib.jackson.databind.jsontype.impl.TypeDeserializerBase {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsArrayTypeDeserializer>;
									public forProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.impl.TypeDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver, param2: string, param3: boolean, param4: me.pushy.sdk.lib.jackson.databind.JavaType);
									public deserializeTypedFromScalar(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public deserializeTypedFromArray(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public _locateTypeId(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): string;
									public deserializeTypedFromAny(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public _deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public deserializeTypedFromObject(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsArrayTypeDeserializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public getTypeInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
									public _usesExternalId(): boolean;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export module impl {
								export class AsArrayTypeSerializer extends me.pushy.sdk.lib.jackson.databind.jsontype.impl.TypeSerializerBase {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsArrayTypeSerializer>;
									public writeTypePrefixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
									public writeTypeSuffixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
									public constructor();
									public writeCustomTypePrefixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public writeTypePrefixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: java.lang.Class<any>): void;
									public writeCustomTypeSuffixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public writeCustomTypeSuffixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public writeCustomTypeSuffixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public _writeTypeId(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string): void;
									public forProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
									public forProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsArrayTypeSerializer;
									public writeTypePrefixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: java.lang.Class<any>): void;
									public writeTypeSuffixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
									public writeCustomTypePrefixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public writeTypePrefixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: java.lang.Class<any>): void;
									public writeTypePrefixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
									public writeCustomTypePrefixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public getTypeInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
									public writeTypePrefixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
									public writeTypeSuffixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export module impl {
								export class AsExistingPropertyTypeSerializer extends me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsPropertyTypeSerializer {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer>;
									public constructor();
									public forProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsPropertyTypeSerializer;
									public forProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsArrayTypeSerializer;
									public forProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
									public writeTypePrefixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: java.lang.Class<any>): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: string);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public writeCustomTypePrefixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public getTypeInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
									public forProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer;
									public writeTypePrefixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export module impl {
								export class AsExternalTypeDeserializer extends me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsArrayTypeDeserializer {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsExternalTypeDeserializer>;
									public forProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.impl.TypeDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver, param2: string, param3: boolean, param4: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsExternalTypeDeserializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsArrayTypeDeserializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public getTypeInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
									public _usesExternalId(): boolean;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export module impl {
								export class AsExternalTypeSerializer extends me.pushy.sdk.lib.jackson.databind.jsontype.impl.TypeSerializerBase {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsExternalTypeSerializer>;
									public _typePropertyName: string;
									public writeTypePrefixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
									public writeTypeSuffixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
									public _writeArraySuffix(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public _writeScalarSuffix(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public writeTypePrefixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: java.lang.Class<any>): void;
									public forProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsExternalTypeSerializer;
									public writeCustomTypeSuffixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public forProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
									public writeTypePrefixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: java.lang.Class<any>): void;
									public _writeObjectPrefix(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
									public _writeScalarPrefix(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
									public getPropertyName(): string;
									public writeTypeSuffixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
									public constructor();
									public writeCustomTypePrefixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: string);
									public writeCustomTypeSuffixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public writeCustomTypeSuffixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public _writeArrayPrefix(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
									public writeTypePrefixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: java.lang.Class<any>): void;
									public writeTypeSuffixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
									public writeCustomTypePrefixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public writeTypePrefixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
									public writeCustomTypePrefixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public getTypeInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
									public _writeObjectSuffix(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public writeTypePrefixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export module impl {
								export class AsPropertyTypeDeserializer extends me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsArrayTypeDeserializer {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer>;
									public _inclusion: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
									public forProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.impl.TypeDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver, param2: string, param3: boolean, param4: me.pushy.sdk.lib.jackson.databind.JavaType, param5: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As);
									public _deserializeTypedForId(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.util.TokenBuffer): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver, param2: string, param3: boolean, param4: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public deserializeTypedFromObject(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public _deserializeTypedUsingDefaultImpl(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: me.pushy.sdk.lib.jackson.databind.util.TokenBuffer): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsArrayTypeDeserializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public getTypeInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
									public deserializeTypedFromAny(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export module impl {
								export class AsPropertyTypeSerializer extends me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsArrayTypeSerializer {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsPropertyTypeSerializer>;
									public _typePropertyName: string;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: string);
									public writeCustomTypeSuffixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public forProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsArrayTypeSerializer;
									public forProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
									public forProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsPropertyTypeSerializer;
									public writeTypePrefixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: java.lang.Class<any>): void;
									public writeTypeSuffixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
									public writeCustomTypePrefixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public getTypeInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
									public writeTypePrefixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
									public getPropertyName(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export module impl {
								export class AsWrapperTypeDeserializer extends me.pushy.sdk.lib.jackson.databind.jsontype.impl.TypeDeserializerBase {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer>;
									public forProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.impl.TypeDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public constructor();
									public _deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver, param2: string, param3: boolean, param4: me.pushy.sdk.lib.jackson.databind.JavaType);
									public deserializeTypedFromObject(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public deserializeTypedFromScalar(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public deserializeTypedFromArray(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public getTypeInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public deserializeTypedFromAny(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export module impl {
								export class AsWrapperTypeSerializer extends me.pushy.sdk.lib.jackson.databind.jsontype.impl.TypeSerializerBase {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsWrapperTypeSerializer>;
									public writeTypePrefixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
									public writeTypeSuffixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
									public constructor();
									public writeCustomTypePrefixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public writeTypePrefixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: java.lang.Class<any>): void;
									public writeCustomTypeSuffixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public forProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.jsontype.impl.AsWrapperTypeSerializer;
									public writeCustomTypeSuffixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public writeCustomTypeSuffixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public _validTypeId(param0: string): string;
									public _writeTypeId(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: string): void;
									public forProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
									public writeTypePrefixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: java.lang.Class<any>): void;
									public writeTypeSuffixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
									public writeCustomTypePrefixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public writeTypePrefixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: java.lang.Class<any>): void;
									public writeTypePrefixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
									public writeCustomTypePrefixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									public getTypeInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
									public writeTypePrefixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
									public writeTypeSuffixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export module impl {
								export class ClassNameIdResolver extends me.pushy.sdk.lib.jackson.databind.jsontype.impl.TypeIdResolverBase {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.impl.ClassNameIdResolver>;
									public getMechanism(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id;
									public constructor();
									public idFromValueAndType(param0: any, param1: java.lang.Class<any>): string;
									public _idFrom(param0: any, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.type.TypeFactory): string;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.type.TypeFactory);
									public getDescForKnownTypeIds(): string;
									public init(param0: me.pushy.sdk.lib.jackson.databind.JavaType): void;
									public idFromValue(param0: any): string;
									public typeFromId(param0: me.pushy.sdk.lib.jackson.databind.DatabindContext, param1: string): me.pushy.sdk.lib.jackson.databind.JavaType;
									public _typeFromId(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DatabindContext): me.pushy.sdk.lib.jackson.databind.JavaType;
									public registerSubtype(param0: java.lang.Class<any>, param1: string): void;
									public idFromBaseType(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export module impl {
								export class MinimalClassNameIdResolver extends me.pushy.sdk.lib.jackson.databind.jsontype.impl.ClassNameIdResolver {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.impl.MinimalClassNameIdResolver>;
									public _basePackageName: string;
									public _basePackagePrefix: string;
									public getMechanism(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id;
									public constructor();
									public idFromValueAndType(param0: any, param1: java.lang.Class<any>): string;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.type.TypeFactory);
									public init(param0: me.pushy.sdk.lib.jackson.databind.JavaType): void;
									public getDescForKnownTypeIds(): string;
									public idFromValue(param0: any): string;
									public _typeFromId(param0: string, param1: me.pushy.sdk.lib.jackson.databind.DatabindContext): me.pushy.sdk.lib.jackson.databind.JavaType;
									public typeFromId(param0: me.pushy.sdk.lib.jackson.databind.DatabindContext, param1: string): me.pushy.sdk.lib.jackson.databind.JavaType;
									public idFromBaseType(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export module impl {
								export class StdSubtypeResolver extends me.pushy.sdk.lib.jackson.databind.jsontype.SubtypeResolver {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.impl.StdSubtypeResolver>;
									public _registeredSubtypes: java.util.LinkedHashSet<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>;
									public constructor();
									public collectAndResolveSubtypesByClass(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): java.util.Collection<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>;
									public collectAndResolveSubtypesByClass(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.JavaType): java.util.Collection<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>;
									public registerSubtypes(param0: native.Array<java.lang.Class<any>>): void;
									public collectAndResolveSubtypesByTypeId(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass): java.util.Collection<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>;
									public _collectAndResolve(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass, param1: me.pushy.sdk.lib.jackson.databind.jsontype.NamedType, param2: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param3: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector, param4: java.util.HashMap<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType,me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>): void;
									public collectAndResolveSubtypesByTypeId(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.JavaType): java.util.Collection<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>;
									public _combineNamedAndUnnamed(param0: java.util.Set<java.lang.Class<any>>, param1: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>): java.util.Collection<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>;
									public _collectAndResolveByTypeId(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass, param1: me.pushy.sdk.lib.jackson.databind.jsontype.NamedType, param2: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param3: java.util.Set<java.lang.Class<any>>, param4: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>): void;
									public registerSubtypes(param0: native.Array<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export module impl {
								export class StdTypeResolverBuilder extends me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder<me.pushy.sdk.lib.jackson.databind.jsontype.impl.StdTypeResolverBuilder> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.impl.StdTypeResolverBuilder>;
									public _idType: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id;
									public _includeAs: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
									public _typeProperty: string;
									public _typeIdVisible: boolean;
									public _defaultImpl: java.lang.Class<any>;
									public _customIdResolver: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver;
									public constructor();
									public idResolver(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: java.util.Collection<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>, param3: boolean, param4: boolean): me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver;
									public isTypeIdVisible(): boolean;
									public typeProperty(param0: string): me.pushy.sdk.lib.jackson.databind.jsontype.impl.StdTypeResolverBuilder;
									public getDefaultImpl(): java.lang.Class<any>;
									public typeProperty(param0: string): any;
									public buildTypeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: java.util.Collection<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>): me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
									public init(param0: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver): any;
									public inclusion(param0: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As): any;
									public typeIdVisibility(param0: boolean): any;
									public typeIdVisibility(param0: boolean): me.pushy.sdk.lib.jackson.databind.jsontype.impl.StdTypeResolverBuilder;
									public buildTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: java.util.Collection<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>): me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
									public defaultImpl(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.jsontype.impl.StdTypeResolverBuilder;
									public inclusion(param0: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As): me.pushy.sdk.lib.jackson.databind.jsontype.impl.StdTypeResolverBuilder;
									public init(param0: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver): me.pushy.sdk.lib.jackson.databind.jsontype.impl.StdTypeResolverBuilder;
									public constructor(param0: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id, param1: me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As, param2: string);
									public getTypeProperty(): string;
									public defaultImpl(param0: java.lang.Class<any>): any;
									public static noTypeInfoBuilder(): me.pushy.sdk.lib.jackson.databind.jsontype.impl.StdTypeResolverBuilder;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export module impl {
								export abstract class TypeDeserializerBase extends me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.impl.TypeDeserializerBase>;
									public _idResolver: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver;
									public _baseType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public _property: me.pushy.sdk.lib.jackson.databind.BeanProperty;
									public _defaultImpl: me.pushy.sdk.lib.jackson.databind.JavaType;
									public _typePropertyName: string;
									public _typeIdVisible: boolean;
									public _deserializers: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>>;
									public _defaultImplDeserializer: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public forProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.impl.TypeDeserializerBase, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public baseTypeName(): string;
									public _deserializeWithNativeTypeId(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param2: any): any;
									public _handleUnknownTypeId(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string): me.pushy.sdk.lib.jackson.databind.JavaType;
									public getTypeIdResolver(): me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver;
									public _handleMissingTypeId(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string): me.pushy.sdk.lib.jackson.databind.JavaType;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver, param2: string, param3: boolean, param4: me.pushy.sdk.lib.jackson.databind.JavaType);
									public getDefaultImpl(): java.lang.Class<any>;
									public toString(): string;
									public baseType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public _findDefaultImplDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public _findDeserializer(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: string): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
									public _deserializeWithNativeTypeId(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): any;
									public getTypeInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
									public getPropertyName(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export module impl {
								export abstract class TypeIdResolverBase extends me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.impl.TypeIdResolverBase>;
									public _typeFactory: me.pushy.sdk.lib.jackson.databind.type.TypeFactory;
									public _baseType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public getMechanism(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id;
									public constructor();
									public idFromValueAndType(param0: any, param1: java.lang.Class<any>): string;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.type.TypeFactory);
									public init(param0: me.pushy.sdk.lib.jackson.databind.JavaType): void;
									public getDescForKnownTypeIds(): string;
									public idFromValue(param0: any): string;
									public typeFromId(param0: me.pushy.sdk.lib.jackson.databind.DatabindContext, param1: string): me.pushy.sdk.lib.jackson.databind.JavaType;
									public idFromBaseType(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export module impl {
								export class TypeNameIdResolver extends me.pushy.sdk.lib.jackson.databind.jsontype.impl.TypeIdResolverBase {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.impl.TypeNameIdResolver>;
									public _config: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>;
									public _typeToId: java.util.Map<string,string>;
									public _idToType: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.JavaType>;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: java.util.Map<string,string>, param3: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.JavaType>);
									public getDescForKnownTypeIds(): string;
									public idFromValue(param0: any): string;
									public static _defaultTypeId(param0: java.lang.Class<any>): string;
									public toString(): string;
									public static construct(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: java.util.Collection<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>, param3: boolean, param4: boolean): me.pushy.sdk.lib.jackson.databind.jsontype.impl.TypeNameIdResolver;
									public typeFromId(param0: me.pushy.sdk.lib.jackson.databind.DatabindContext, param1: string): me.pushy.sdk.lib.jackson.databind.JavaType;
									public _typeFromId(param0: string): me.pushy.sdk.lib.jackson.databind.JavaType;
									public idFromBaseType(): string;
									public idFromClass(param0: java.lang.Class<any>): string;
									public getMechanism(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.Id;
									public idFromValueAndType(param0: any, param1: java.lang.Class<any>): string;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.type.TypeFactory);
									public init(param0: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module jsontype {
							export module impl {
								export abstract class TypeSerializerBase extends me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.jsontype.impl.TypeSerializerBase>;
									public _idResolver: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver;
									public _property: me.pushy.sdk.lib.jackson.databind.BeanProperty;
									public constructor();
									public getTypeIdResolver(): me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver;
									public idFromValueAndType(param0: any, param1: java.lang.Class<any>): string;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public idFromValue(param0: any): string;
									public handleMissingId(param0: any): void;
									public getTypeInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
									public getPropertyName(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module module {
							export class SimpleAbstractTypeResolver extends me.pushy.sdk.lib.jackson.databind.AbstractTypeResolver {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.module.SimpleAbstractTypeResolver>;
								public _mappings: java.util.HashMap<me.pushy.sdk.lib.jackson.databind.type.ClassKey,java.lang.Class<any>>;
								public addMapping(param0: java.lang.Class, param1: java.lang.Class): me.pushy.sdk.lib.jackson.databind.module.SimpleAbstractTypeResolver;
								public findTypeMapping(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public resolveAbstractType(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public resolveAbstractType(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module module {
							export class SimpleDeserializers extends me.pushy.sdk.lib.jackson.databind.deser.Deserializers {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.module.SimpleDeserializers>;
								public _classMappings: java.util.HashMap<me.pushy.sdk.lib.jackson.databind.type.ClassKey,me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>>;
								public _hasEnumDeserializer: boolean;
								public findEnumDeserializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findCollectionDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.CollectionType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public constructor(param0: java.util.Map<java.lang.Class<any>,me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>>);
								public addDeserializer(param0: java.lang.Class, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): void;
								public findCollectionLikeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findTreeNodeDeserializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findReferenceDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.ReferenceType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public constructor();
								public findMapLikeDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.MapLikeType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param5: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findBeanDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public addDeserializers(param0: java.util.Map<java.lang.Class<any>,me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>>): void;
								public findArrayDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.ArrayType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param4: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
								public findMapDeserializer(param0: me.pushy.sdk.lib.jackson.databind.type.MapType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.KeyDeserializer, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeDeserializer, param5: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module module {
							export class SimpleKeyDeserializers extends me.pushy.sdk.lib.jackson.databind.deser.KeyDeserializers {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.module.SimpleKeyDeserializers>;
								public _classMappings: java.util.HashMap<me.pushy.sdk.lib.jackson.databind.type.ClassKey,me.pushy.sdk.lib.jackson.databind.KeyDeserializer>;
								public findKeyDeserializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.KeyDeserializer;
								public constructor();
								public addDeserializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.KeyDeserializer): me.pushy.sdk.lib.jackson.databind.module.SimpleKeyDeserializers;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module module {
							export class SimpleModule extends me.pushy.sdk.lib.jackson.databind.Module {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.module.SimpleModule>;
								public _name: string;
								public _version: me.pushy.sdk.lib.jackson.core.Version;
								public _serializers: me.pushy.sdk.lib.jackson.databind.module.SimpleSerializers;
								public _deserializers: me.pushy.sdk.lib.jackson.databind.module.SimpleDeserializers;
								public _keySerializers: me.pushy.sdk.lib.jackson.databind.module.SimpleSerializers;
								public _keyDeserializers: me.pushy.sdk.lib.jackson.databind.module.SimpleKeyDeserializers;
								public _abstractTypes: me.pushy.sdk.lib.jackson.databind.module.SimpleAbstractTypeResolver;
								public _valueInstantiators: me.pushy.sdk.lib.jackson.databind.module.SimpleValueInstantiators;
								public _deserializerModifier: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerModifier;
								public _serializerModifier: me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerModifier;
								public _mixins: java.util.HashMap<java.lang.Class<any>,java.lang.Class<any>>;
								public _subtypes: java.util.LinkedHashSet<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>;
								public _namingStrategy: me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy;
								public addDeserializer(param0: java.lang.Class, param1: me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>): me.pushy.sdk.lib.jackson.databind.module.SimpleModule;
								public registerSubtypes(param0: native.Array<me.pushy.sdk.lib.jackson.databind.jsontype.NamedType>): me.pushy.sdk.lib.jackson.databind.module.SimpleModule;
								public registerSubtypes(param0: native.Array<java.lang.Class<any>>): me.pushy.sdk.lib.jackson.databind.module.SimpleModule;
								public addValueInstantiator(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator): me.pushy.sdk.lib.jackson.databind.module.SimpleModule;
								public addAbstractTypeMapping(param0: java.lang.Class, param1: java.lang.Class): me.pushy.sdk.lib.jackson.databind.module.SimpleModule;
								public setSerializers(param0: me.pushy.sdk.lib.jackson.databind.module.SimpleSerializers): void;
								public setDeserializers(param0: me.pushy.sdk.lib.jackson.databind.module.SimpleDeserializers): void;
								public setKeySerializers(param0: me.pushy.sdk.lib.jackson.databind.module.SimpleSerializers): void;
								public setSerializerModifier(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerModifier): me.pushy.sdk.lib.jackson.databind.module.SimpleModule;
								public _checkNotNull(param0: any, param1: string): void;
								public getTypeId(): any;
								public addKeySerializer(param0: java.lang.Class, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.module.SimpleModule;
								public setKeyDeserializers(param0: me.pushy.sdk.lib.jackson.databind.module.SimpleKeyDeserializers): void;
								public setNamingStrategy(param0: me.pushy.sdk.lib.jackson.databind.PropertyNamingStrategy): me.pushy.sdk.lib.jackson.databind.module.SimpleModule;
								public addSerializer(param0: java.lang.Class, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.module.SimpleModule;
								public setAbstractTypes(param0: me.pushy.sdk.lib.jackson.databind.module.SimpleAbstractTypeResolver): void;
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.Version);
								public setValueInstantiators(param0: me.pushy.sdk.lib.jackson.databind.module.SimpleValueInstantiators): void;
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.Version, param2: java.util.List<me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>>);
								public setupModule(param0: me.pushy.sdk.lib.jackson.databind.Module.SetupContext): void;
								public constructor();
								public constructor(param0: me.pushy.sdk.lib.jackson.core.Version);
								public setMixInAnnotation(param0: java.lang.Class<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.module.SimpleModule;
								public setDeserializerModifier(param0: me.pushy.sdk.lib.jackson.databind.deser.BeanDeserializerModifier): me.pushy.sdk.lib.jackson.databind.module.SimpleModule;
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.Version, param2: java.util.Map<java.lang.Class<any>,me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>>, param3: java.util.List<me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>>);
								public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.core.Version, param2: java.util.Map<java.lang.Class<any>,me.pushy.sdk.lib.jackson.databind.JsonDeserializer<any>>);
								public getModuleName(): string;
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public addKeyDeserializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.KeyDeserializer): me.pushy.sdk.lib.jackson.databind.module.SimpleModule;
								public constructor(param0: string);
								public addSerializer(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.module.SimpleModule;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module module {
							export class SimpleSerializers extends me.pushy.sdk.lib.jackson.databind.ser.Serializers.Base {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.module.SimpleSerializers>;
								public _classMappings: java.util.HashMap<me.pushy.sdk.lib.jackson.databind.type.ClassKey,me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>>;
								public _interfaceMappings: java.util.HashMap<me.pushy.sdk.lib.jackson.databind.type.ClassKey,me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>>;
								public _hasEnumSerializer: boolean;
								public findCollectionLikeSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public addSerializer(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): void;
								public addSerializers(param0: java.util.List<me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>>): void;
								public findCollectionSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.CollectionType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public _findInterfaceMapping(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.ClassKey): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public constructor();
								public findArraySerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.ArrayType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public _addSerializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): void;
								public addSerializer(param0: java.lang.Class, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): void;
								public findReferenceSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.ReferenceType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public constructor(param0: java.util.List<me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>>);
								public findMapSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.MapType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public findSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public findMapLikeSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.MapLikeType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module module {
							export class SimpleValueInstantiators extends me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiators.Base {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.module.SimpleValueInstantiators>;
								public _classMappings: java.util.HashMap<me.pushy.sdk.lib.jackson.databind.type.ClassKey,me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator>;
								public addValueInstantiator(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator): me.pushy.sdk.lib.jackson.databind.module.SimpleValueInstantiators;
								public constructor();
								public findValueInstantiator(param0: me.pushy.sdk.lib.jackson.databind.DeserializationConfig, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator): me.pushy.sdk.lib.jackson.databind.deser.ValueInstantiator;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export class ArrayNode extends me.pushy.sdk.lib.jackson.databind.node.ContainerNode<me.pushy.sdk.lib.jackson.databind.node.ArrayNode> {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.ArrayNode>;
								public numberNode(param0: java.lang.Short): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public isContainerNode(): boolean;
								public path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public equals(param0: any): boolean;
								public insert(param0: number, param1: java.lang.Long): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public isValueNode(): boolean;
								public traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public findValuesAsText(param0: string): java.util.List<string>;
								public insert(param0: number, param1: java.lang.Float): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory, param1: number);
								public numberNode(param0: java.math.BigInteger): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory, param1: java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>);
								public findValue(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public addAll(param0: me.pushy.sdk.lib.jackson.databind.node.ArrayNode): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public findParents(param0: string): java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>;
								public numberNode(param0: number): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public add(param0: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public insert(param0: number, param1: boolean): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public remove(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isMissingNode(): boolean;
								public _insert(param0: number, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public add(param0: java.lang.Double): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public rawValueNode(param0: me.pushy.sdk.lib.jackson.databind.util.RawValue): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberNode(param0: java.lang.Integer): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public insert(param0: number, param1: java.lang.Double): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
								public removeAll(): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public removeAll(): any;
								public deepCopy(): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public add(param0: java.lang.Float): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public insert(param0: number, param1: java.math.BigInteger): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public toString(): string;
								public path(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public findValues(param0: string, param1: java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>): java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>;
								public size(): number;
								public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): boolean;
								public getNodeType(): me.pushy.sdk.lib.jackson.databind.node.JsonNodeType;
								public numberNode(param0: number): me.pushy.sdk.lib.jackson.databind.node.NumericNode;
								public nullNode(): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public add(param0: java.math.BigDecimal): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public insertPOJO(param0: number, param1: any): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public equals(param0: java.util.Comparator<me.pushy.sdk.lib.jackson.databind.JsonNode>, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): boolean;
								public insert(param0: number, param1: java.lang.Integer): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public numberNode(param0: java.lang.Double): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public insertObject(param0: number): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public addRawValue(param0: me.pushy.sdk.lib.jackson.databind.util.RawValue): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public numberNode(param0: java.lang.Byte): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberNode(param0: java.math.BigDecimal): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public get(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public addArray(): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public numberNode(param0: java.lang.Long): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public nullNode(): me.pushy.sdk.lib.jackson.databind.node.NullNode;
								public binaryNode(param0: native.Array<number>): me.pushy.sdk.lib.jackson.databind.node.BinaryNode;
								public _add(param0: me.pushy.sdk.lib.jackson.databind.JsonNode): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public add(param0: boolean): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public add(param0: java.lang.Integer): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public add(param0: java.math.BigInteger): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public addObject(): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public insert(param0: number, param1: number): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public _at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public add(param0: string): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public addNull(): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public isObject(): boolean;
								public textNode(param0: string): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public insert(param0: number, param1: java.math.BigDecimal): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public binaryNode(param0: native.Array<number>, param1: number, param2: number): me.pushy.sdk.lib.jackson.databind.node.BinaryNode;
								public deepCopy(): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public add(param0: native.Array<number>): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public elements(): java.util.Iterator<me.pushy.sdk.lib.jackson.databind.JsonNode>;
								public binaryNode(param0: native.Array<number>): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory);
								public constructor();
								public arrayNode(): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public findValuesAsText(param0: string, param1: java.util.List<string>): java.util.List<string>;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public textNode(param0: string): me.pushy.sdk.lib.jackson.databind.node.TextNode;
								public add(param0: number): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public pojoNode(param0: any): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public binaryNode(param0: native.Array<number>, param1: number, param2: number): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public booleanNode(param0: boolean): me.pushy.sdk.lib.jackson.databind.node.BooleanNode;
								public add(param0: me.pushy.sdk.lib.jackson.databind.JsonNode): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public insert(param0: number, param1: native.Array<number>): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public insertArray(param0: number): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public arrayNode(param0: number): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public _childrenEqual(param0: me.pushy.sdk.lib.jackson.databind.node.ArrayNode): boolean;
								public findValues(param0: string): java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>;
								public get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public findParents(param0: string, param1: java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>): java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>;
								public addAll(param0: java.util.Collection<any>): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public insert(param0: number, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public findParent(param0: string): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
								public get(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public findParent(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public numberNode(param0: java.lang.Float): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public addPOJO(param0: any): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public insert(param0: number, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public path(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public insert(param0: number, param1: string): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public insertNull(param0: number): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public booleanNode(param0: boolean): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public add(param0: java.lang.Long): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public at(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public set(param0: number, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isArray(): boolean;
								public fieldNames(): java.util.Iterator<string>;
								public hashCode(): number;
								public objectNode(): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export abstract class BaseJsonNode extends me.pushy.sdk.lib.jackson.databind.JsonNode implements me.pushy.sdk.lib.jackson.databind.JsonSerializable {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.BaseJsonNode>;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public path(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public size(): number;
								public isContainerNode(): boolean;
								public path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public isValueNode(): boolean;
								public traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public isObject(): boolean;
								public at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
								public get(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public isMissingNode(): boolean;
								public get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public path(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public constructor();
								public asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public at(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
								public get(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isArray(): boolean;
								public path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public fieldNames(): java.util.Iterator<string>;
								public findPath(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export class BigIntegerNode extends me.pushy.sdk.lib.jackson.databind.node.NumericNode {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.BigIntegerNode>;
								public _value: java.math.BigInteger;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public path(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public canConvertToInt(): boolean;
								public size(): number;
								public asText(): string;
								public isContainerNode(): boolean;
								public path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public equals(param0: any): boolean;
								public isValueNode(): boolean;
								public traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public asBoolean(param0: boolean): boolean;
								public equals(param0: java.util.Comparator<me.pushy.sdk.lib.jackson.databind.JsonNode>, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): boolean;
								public doubleValue(): number;
								public isObject(): boolean;
								public bigIntegerValue(): java.math.BigInteger;
								public at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public shortValue(): number;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
								public canConvertToLong(): boolean;
								public get(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public intValue(): number;
								public longValue(): number;
								public asBoolean(): boolean;
								public isIntegralNumber(): boolean;
								public decimalValue(): java.math.BigDecimal;
								public isMissingNode(): boolean;
								public get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public floatValue(): number;
								public path(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public constructor();
								public numberValue(): java.lang.Number;
								public asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public at(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public get(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isArray(): boolean;
								public path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public fieldNames(): java.util.Iterator<string>;
								public constructor(param0: java.math.BigInteger);
								public isBigInteger(): boolean;
								public asText(param0: string): string;
								public static valueOf(param0: java.math.BigInteger): me.pushy.sdk.lib.jackson.databind.node.BigIntegerNode;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export class BinaryNode extends me.pushy.sdk.lib.jackson.databind.node.ValueNode {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.BinaryNode>;
								public _data: native.Array<number>;
								public toString(): string;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public path(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public size(): number;
								public asText(): string;
								public isContainerNode(): boolean;
								public path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public getNodeType(): me.pushy.sdk.lib.jackson.databind.node.JsonNodeType;
								public binaryValue(): native.Array<number>;
								public equals(param0: any): boolean;
								public isValueNode(): boolean;
								public traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public constructor(param0: native.Array<number>);
								public static valueOf(param0: native.Array<number>, param1: number, param2: number): me.pushy.sdk.lib.jackson.databind.node.BinaryNode;
								public get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public equals(param0: java.util.Comparator<me.pushy.sdk.lib.jackson.databind.JsonNode>, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): boolean;
								public constructor(param0: native.Array<number>, param1: number, param2: number);
								public isObject(): boolean;
								public at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
								public get(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public static valueOf(param0: native.Array<number>): me.pushy.sdk.lib.jackson.databind.node.BinaryNode;
								public isMissingNode(): boolean;
								public get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public path(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public constructor();
								public asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public at(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public get(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isArray(): boolean;
								public path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public fieldNames(): java.util.Iterator<string>;
								public asText(param0: string): string;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export class BooleanNode extends me.pushy.sdk.lib.jackson.databind.node.ValueNode {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.BooleanNode>;
								public static TRUE: me.pushy.sdk.lib.jackson.databind.node.BooleanNode;
								public static FALSE: me.pushy.sdk.lib.jackson.databind.node.BooleanNode;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public path(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public size(): number;
								public asText(): string;
								public isContainerNode(): boolean;
								public path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public getNodeType(): me.pushy.sdk.lib.jackson.databind.node.JsonNodeType;
								public equals(param0: any): boolean;
								public isValueNode(): boolean;
								public traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public asBoolean(param0: boolean): boolean;
								public asLong(param0: number): number;
								public equals(param0: java.util.Comparator<me.pushy.sdk.lib.jackson.databind.JsonNode>, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): boolean;
								public isObject(): boolean;
								public at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
								public get(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public asBoolean(): boolean;
								public isMissingNode(): boolean;
								public get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public path(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public asDouble(): number;
								public asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public asDouble(param0: number): number;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public static getTrue(): me.pushy.sdk.lib.jackson.databind.node.BooleanNode;
								public at(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public static getFalse(): me.pushy.sdk.lib.jackson.databind.node.BooleanNode;
								public get(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isArray(): boolean;
								public path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public fieldNames(): java.util.Iterator<string>;
								public asText(param0: string): string;
								public asLong(): number;
								public booleanValue(): boolean;
								public asInt(param0: number): number;
								public asInt(): number;
								public static valueOf(param0: boolean): me.pushy.sdk.lib.jackson.databind.node.BooleanNode;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export abstract class ContainerNode<T>  extends me.pushy.sdk.lib.jackson.databind.node.BaseJsonNode implements me.pushy.sdk.lib.jackson.databind.node.JsonNodeCreator  {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.ContainerNode<any>>;
								public _nodeFactory: me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory;
								public numberNode(param0: java.lang.Short): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public asText(): string;
								public isContainerNode(): boolean;
								public path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public isValueNode(): boolean;
								public traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public numberNode(param0: java.math.BigInteger): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public isObject(): boolean;
								public textNode(param0: string): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public binaryNode(param0: native.Array<number>, param1: number, param2: number): me.pushy.sdk.lib.jackson.databind.node.BinaryNode;
								public numberNode(param0: number): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public binaryNode(param0: native.Array<number>): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory);
								public isMissingNode(): boolean;
								public constructor();
								public arrayNode(): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public textNode(param0: string): me.pushy.sdk.lib.jackson.databind.node.TextNode;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public rawValueNode(param0: me.pushy.sdk.lib.jackson.databind.util.RawValue): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberNode(param0: java.lang.Integer): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
								public pojoNode(param0: any): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public removeAll(): any;
								public binaryNode(param0: native.Array<number>, param1: number, param2: number): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public path(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public size(): number;
								public booleanNode(param0: boolean): me.pushy.sdk.lib.jackson.databind.node.BooleanNode;
								public numberNode(param0: number): me.pushy.sdk.lib.jackson.databind.node.NumericNode;
								public nullNode(): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public arrayNode(param0: number): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
								public get(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public numberNode(param0: java.lang.Float): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberNode(param0: java.lang.Double): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public path(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public booleanNode(param0: boolean): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberNode(param0: java.lang.Byte): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberNode(param0: java.math.BigDecimal): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public at(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public get(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isArray(): boolean;
								public path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public fieldNames(): java.util.Iterator<string>;
								public numberNode(param0: java.lang.Long): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public nullNode(): me.pushy.sdk.lib.jackson.databind.node.NullNode;
								public binaryNode(param0: native.Array<number>): me.pushy.sdk.lib.jackson.databind.node.BinaryNode;
								public asText(param0: string): string;
								public objectNode(): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export class DecimalNode extends me.pushy.sdk.lib.jackson.databind.node.NumericNode {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.DecimalNode>;
								public static ZERO: me.pushy.sdk.lib.jackson.databind.node.DecimalNode;
								public _value: java.math.BigDecimal;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public path(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public canConvertToInt(): boolean;
								public size(): number;
								public asText(): string;
								public isContainerNode(): boolean;
								public path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public equals(param0: any): boolean;
								public isValueNode(): boolean;
								public traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public equals(param0: java.util.Comparator<me.pushy.sdk.lib.jackson.databind.JsonNode>, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): boolean;
								public constructor(param0: java.math.BigDecimal);
								public static valueOf(param0: java.math.BigDecimal): me.pushy.sdk.lib.jackson.databind.node.DecimalNode;
								public doubleValue(): number;
								public isObject(): boolean;
								public bigIntegerValue(): java.math.BigInteger;
								public at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public shortValue(): number;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
								public canConvertToLong(): boolean;
								public get(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public intValue(): number;
								public longValue(): number;
								public isFloatingPointNumber(): boolean;
								public decimalValue(): java.math.BigDecimal;
								public isMissingNode(): boolean;
								public get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public floatValue(): number;
								public path(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public constructor();
								public isBigDecimal(): boolean;
								public numberValue(): java.lang.Number;
								public asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public at(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public get(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isArray(): boolean;
								public path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public fieldNames(): java.util.Iterator<string>;
								public asText(param0: string): string;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export class DoubleNode extends me.pushy.sdk.lib.jackson.databind.node.NumericNode {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.DoubleNode>;
								public _value: number;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public path(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isDouble(): boolean;
								public canConvertToInt(): boolean;
								public size(): number;
								public asText(): string;
								public isContainerNode(): boolean;
								public path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public equals(param0: any): boolean;
								public isValueNode(): boolean;
								public traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public equals(param0: java.util.Comparator<me.pushy.sdk.lib.jackson.databind.JsonNode>, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): boolean;
								public static valueOf(param0: number): me.pushy.sdk.lib.jackson.databind.node.DoubleNode;
								public doubleValue(): number;
								public isObject(): boolean;
								public bigIntegerValue(): java.math.BigInteger;
								public at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public shortValue(): number;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
								public canConvertToLong(): boolean;
								public get(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public intValue(): number;
								public longValue(): number;
								public isFloatingPointNumber(): boolean;
								public decimalValue(): java.math.BigDecimal;
								public isMissingNode(): boolean;
								public get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public floatValue(): number;
								public path(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public constructor();
								public numberValue(): java.lang.Number;
								public asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public constructor(param0: number);
								public at(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isNaN(): boolean;
								public get(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isArray(): boolean;
								public path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public fieldNames(): java.util.Iterator<string>;
								public asText(param0: string): string;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export class FloatNode extends me.pushy.sdk.lib.jackson.databind.node.NumericNode {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.FloatNode>;
								public _value: number;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public path(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public canConvertToInt(): boolean;
								public size(): number;
								public asText(): string;
								public isContainerNode(): boolean;
								public path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public equals(param0: any): boolean;
								public isValueNode(): boolean;
								public traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public equals(param0: java.util.Comparator<me.pushy.sdk.lib.jackson.databind.JsonNode>, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): boolean;
								public doubleValue(): number;
								public static valueOf(param0: number): me.pushy.sdk.lib.jackson.databind.node.FloatNode;
								public isObject(): boolean;
								public bigIntegerValue(): java.math.BigInteger;
								public at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public shortValue(): number;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
								public canConvertToLong(): boolean;
								public get(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public intValue(): number;
								public longValue(): number;
								public isFloatingPointNumber(): boolean;
								public decimalValue(): java.math.BigDecimal;
								public isMissingNode(): boolean;
								public get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public floatValue(): number;
								public path(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public constructor();
								public numberValue(): java.lang.Number;
								public asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public constructor(param0: number);
								public at(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isNaN(): boolean;
								public get(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isArray(): boolean;
								public path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public fieldNames(): java.util.Iterator<string>;
								public asText(param0: string): string;
								public isFloat(): boolean;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export class IntNode extends me.pushy.sdk.lib.jackson.databind.node.NumericNode {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.IntNode>;
								public _value: number;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public path(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public canConvertToInt(): boolean;
								public size(): number;
								public asText(): string;
								public isContainerNode(): boolean;
								public path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public equals(param0: any): boolean;
								public isValueNode(): boolean;
								public traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public asBoolean(param0: boolean): boolean;
								public equals(param0: java.util.Comparator<me.pushy.sdk.lib.jackson.databind.JsonNode>, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): boolean;
								public doubleValue(): number;
								public isObject(): boolean;
								public bigIntegerValue(): java.math.BigInteger;
								public at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public shortValue(): number;
								public isInt(): boolean;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
								public canConvertToLong(): boolean;
								public get(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public intValue(): number;
								public longValue(): number;
								public asBoolean(): boolean;
								public isIntegralNumber(): boolean;
								public decimalValue(): java.math.BigDecimal;
								public isMissingNode(): boolean;
								public get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public floatValue(): number;
								public path(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public constructor();
								public numberValue(): java.lang.Number;
								public asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public constructor(param0: number);
								public at(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public static valueOf(param0: number): me.pushy.sdk.lib.jackson.databind.node.IntNode;
								public get(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isArray(): boolean;
								public path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public fieldNames(): java.util.Iterator<string>;
								public asText(param0: string): string;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export class JsonNodeCreator {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.JsonNodeCreator>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.node.JsonNodeCreator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									booleanNode(param0: boolean): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
									nullNode(): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
									numberNode(param0: number): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
									numberNode(param0: java.lang.Byte): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
									numberNode(param0: number): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
									numberNode(param0: java.lang.Short): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
									numberNode(param0: number): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
									numberNode(param0: java.lang.Integer): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
									numberNode(param0: number): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
									numberNode(param0: java.lang.Long): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
									numberNode(param0: java.math.BigInteger): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
									numberNode(param0: number): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
									numberNode(param0: java.lang.Float): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
									numberNode(param0: number): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
									numberNode(param0: java.lang.Double): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
									numberNode(param0: java.math.BigDecimal): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
									textNode(param0: string): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
									binaryNode(param0: native.Array<number>): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
									binaryNode(param0: native.Array<number>, param1: number, param2: number): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
									pojoNode(param0: any): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
									rawValueNode(param0: me.pushy.sdk.lib.jackson.databind.util.RawValue): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
									arrayNode(): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
									arrayNode(param0: number): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
									objectNode(): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								});
								public constructor();
								public numberNode(param0: java.lang.Short): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public binaryNode(param0: native.Array<number>, param1: number, param2: number): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public binaryNode(param0: native.Array<number>): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberNode(param0: java.lang.Float): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberNode(param0: java.lang.Double): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public arrayNode(): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public nullNode(): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public booleanNode(param0: boolean): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public arrayNode(param0: number): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public numberNode(param0: java.lang.Byte): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberNode(param0: java.math.BigDecimal): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public rawValueNode(param0: me.pushy.sdk.lib.jackson.databind.util.RawValue): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberNode(param0: java.lang.Integer): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberNode(param0: java.math.BigInteger): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public pojoNode(param0: any): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberNode(param0: java.lang.Long): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public textNode(param0: string): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberNode(param0: number): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public objectNode(): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export class JsonNodeFactory extends me.pushy.sdk.lib.jackson.databind.node.JsonNodeCreator {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory>;
								public static instance: me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory;
								public numberNode(param0: java.lang.Short): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public binaryNode(param0: native.Array<number>, param1: number, param2: number): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public booleanNode(param0: boolean): me.pushy.sdk.lib.jackson.databind.node.BooleanNode;
								public numberNode(param0: number): me.pushy.sdk.lib.jackson.databind.node.NumericNode;
								public nullNode(): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public arrayNode(param0: number): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public numberNode(param0: java.math.BigInteger): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public textNode(param0: string): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public binaryNode(param0: native.Array<number>, param1: number, param2: number): me.pushy.sdk.lib.jackson.databind.node.BinaryNode;
								public constructor(param0: boolean);
								public numberNode(param0: number): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public binaryNode(param0: native.Array<number>): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public static withExactBigDecimals(param0: boolean): me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory;
								public numberNode(param0: java.lang.Float): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberNode(param0: java.lang.Double): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public constructor();
								public arrayNode(): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public booleanNode(param0: boolean): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberNode(param0: java.lang.Byte): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public textNode(param0: string): me.pushy.sdk.lib.jackson.databind.node.TextNode;
								public numberNode(param0: java.math.BigDecimal): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public rawValueNode(param0: me.pushy.sdk.lib.jackson.databind.util.RawValue): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberNode(param0: java.lang.Integer): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public pojoNode(param0: any): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberNode(param0: java.lang.Long): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public nullNode(): me.pushy.sdk.lib.jackson.databind.node.NullNode;
								public binaryNode(param0: native.Array<number>): me.pushy.sdk.lib.jackson.databind.node.BinaryNode;
								public _inIntRange(param0: number): boolean;
								public objectNode(): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export class JsonNodeType {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.JsonNodeType>;
								public static ARRAY: me.pushy.sdk.lib.jackson.databind.node.JsonNodeType;
								public static BINARY: me.pushy.sdk.lib.jackson.databind.node.JsonNodeType;
								public static BOOLEAN: me.pushy.sdk.lib.jackson.databind.node.JsonNodeType;
								public static MISSING: me.pushy.sdk.lib.jackson.databind.node.JsonNodeType;
								public static NULL: me.pushy.sdk.lib.jackson.databind.node.JsonNodeType;
								public static NUMBER: me.pushy.sdk.lib.jackson.databind.node.JsonNodeType;
								public static OBJECT: me.pushy.sdk.lib.jackson.databind.node.JsonNodeType;
								public static POJO: me.pushy.sdk.lib.jackson.databind.node.JsonNodeType;
								public static STRING: me.pushy.sdk.lib.jackson.databind.node.JsonNodeType;
								public static values(): native.Array<me.pushy.sdk.lib.jackson.databind.node.JsonNodeType>;
								public static valueOf(param0: string): me.pushy.sdk.lib.jackson.databind.node.JsonNodeType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export class LongNode extends me.pushy.sdk.lib.jackson.databind.node.NumericNode {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.LongNode>;
								public _value: number;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public path(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public canConvertToInt(): boolean;
								public size(): number;
								public asText(): string;
								public isContainerNode(): boolean;
								public path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public equals(param0: any): boolean;
								public isValueNode(): boolean;
								public traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public asBoolean(param0: boolean): boolean;
								public equals(param0: java.util.Comparator<me.pushy.sdk.lib.jackson.databind.JsonNode>, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): boolean;
								public doubleValue(): number;
								public isObject(): boolean;
								public bigIntegerValue(): java.math.BigInteger;
								public isLong(): boolean;
								public at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public shortValue(): number;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
								public canConvertToLong(): boolean;
								public get(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public intValue(): number;
								public longValue(): number;
								public asBoolean(): boolean;
								public isIntegralNumber(): boolean;
								public decimalValue(): java.math.BigDecimal;
								public isMissingNode(): boolean;
								public get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public floatValue(): number;
								public path(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public constructor();
								public numberValue(): java.lang.Number;
								public asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public constructor(param0: number);
								public at(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public get(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
								public static valueOf(param0: number): me.pushy.sdk.lib.jackson.databind.node.LongNode;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isArray(): boolean;
								public path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public fieldNames(): java.util.Iterator<string>;
								public asText(param0: string): string;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export class MissingNode extends me.pushy.sdk.lib.jackson.databind.node.ValueNode {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.MissingNode>;
								public toString(): string;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public path(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public size(): number;
								public asText(): string;
								public isContainerNode(): boolean;
								public path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public getNodeType(): me.pushy.sdk.lib.jackson.databind.node.JsonNodeType;
								public equals(param0: any): boolean;
								public isValueNode(): boolean;
								public traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public equals(param0: java.util.Comparator<me.pushy.sdk.lib.jackson.databind.JsonNode>, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): boolean;
								public isObject(): boolean;
								public at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
								public get(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public isMissingNode(): boolean;
								public get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public path(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public at(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public get(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isArray(): boolean;
								public path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public fieldNames(): java.util.Iterator<string>;
								public static getInstance(): me.pushy.sdk.lib.jackson.databind.node.MissingNode;
								public asText(param0: string): string;
								public hashCode(): number;
								public deepCopy(): me.pushy.sdk.lib.jackson.databind.JsonNode;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export abstract class NodeCursor extends me.pushy.sdk.lib.jackson.core.JsonStreamContext {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.NodeCursor>;
								public _parent: me.pushy.sdk.lib.jackson.databind.node.NodeCursor;
								public _currentName: string;
								public _currentValue: any;
								public getCurrentName(): string;
								public endToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public currentNode(): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public nextToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public getCurrentValue(): any;
								public currentHasChildren(): boolean;
								public constructor();
								public getParent(): me.pushy.sdk.lib.jackson.core.JsonStreamContext;
								public nextValue(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public setCurrentValue(param0: any): void;
								public iterateChildren(): me.pushy.sdk.lib.jackson.databind.node.NodeCursor;
								public overrideCurrentName(param0: string): void;
								public getParent(): me.pushy.sdk.lib.jackson.databind.node.NodeCursor;
								public constructor(param0: number, param1: me.pushy.sdk.lib.jackson.databind.node.NodeCursor);
							}
							export module NodeCursor {
								export class ArrayCursor extends me.pushy.sdk.lib.jackson.databind.node.NodeCursor {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.NodeCursor.ArrayCursor>;
									public _contents: java.util.Iterator<me.pushy.sdk.lib.jackson.databind.JsonNode>;
									public _currentNode: me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor();
									public currentNode(): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public currentHasChildren(): boolean;
									public constructor(param0: number, param1: me.pushy.sdk.lib.jackson.databind.node.NodeCursor);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JsonNode, param1: me.pushy.sdk.lib.jackson.databind.node.NodeCursor);
									public endToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
									public nextValue(): me.pushy.sdk.lib.jackson.core.JsonToken;
									public nextToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								}
								export class ObjectCursor extends me.pushy.sdk.lib.jackson.databind.node.NodeCursor {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.NodeCursor.ObjectCursor>;
									public _contents: java.util.Iterator<java.util.Map.Entry<string,me.pushy.sdk.lib.jackson.databind.JsonNode>>;
									public _current: java.util.Map.Entry<string,me.pushy.sdk.lib.jackson.databind.JsonNode>;
									public _needEntry: boolean;
									public constructor();
									public currentNode(): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public currentHasChildren(): boolean;
									public constructor(param0: number, param1: me.pushy.sdk.lib.jackson.databind.node.NodeCursor);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JsonNode, param1: me.pushy.sdk.lib.jackson.databind.node.NodeCursor);
									public endToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
									public nextValue(): me.pushy.sdk.lib.jackson.core.JsonToken;
									public nextToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								}
								export class RootCursor extends me.pushy.sdk.lib.jackson.databind.node.NodeCursor {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.NodeCursor.RootCursor>;
									public _node: me.pushy.sdk.lib.jackson.databind.JsonNode;
									public _done: boolean;
									public constructor();
									public currentNode(): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public overrideCurrentName(param0: string): void;
									public currentHasChildren(): boolean;
									public constructor(param0: number, param1: me.pushy.sdk.lib.jackson.databind.node.NodeCursor);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JsonNode, param1: me.pushy.sdk.lib.jackson.databind.node.NodeCursor);
									public endToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
									public nextValue(): me.pushy.sdk.lib.jackson.core.JsonToken;
									public nextToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export class NullNode extends me.pushy.sdk.lib.jackson.databind.node.ValueNode {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.NullNode>;
								public static instance: me.pushy.sdk.lib.jackson.databind.node.NullNode;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public path(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public size(): number;
								public asText(): string;
								public isContainerNode(): boolean;
								public path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public getNodeType(): me.pushy.sdk.lib.jackson.databind.node.JsonNodeType;
								public equals(param0: any): boolean;
								public isValueNode(): boolean;
								public traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public equals(param0: java.util.Comparator<me.pushy.sdk.lib.jackson.databind.JsonNode>, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): boolean;
								public isObject(): boolean;
								public at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
								public get(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public static getInstance(): me.pushy.sdk.lib.jackson.databind.node.NullNode;
								public isMissingNode(): boolean;
								public get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public path(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public at(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public get(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isArray(): boolean;
								public path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public fieldNames(): java.util.Iterator<string>;
								public asText(param0: string): string;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export abstract class NumericNode extends me.pushy.sdk.lib.jackson.databind.node.ValueNode {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.NumericNode>;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public path(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public canConvertToInt(): boolean;
								public size(): number;
								public asText(): string;
								public isContainerNode(): boolean;
								public path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public getNodeType(): me.pushy.sdk.lib.jackson.databind.node.JsonNodeType;
								public isValueNode(): boolean;
								public traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public asLong(param0: number): number;
								public doubleValue(): number;
								public isObject(): boolean;
								public bigIntegerValue(): java.math.BigInteger;
								public at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
								public canConvertToLong(): boolean;
								public get(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public intValue(): number;
								public longValue(): number;
								public decimalValue(): java.math.BigDecimal;
								public isMissingNode(): boolean;
								public get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public path(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public constructor();
								public numberValue(): java.lang.Number;
								public asDouble(): number;
								public asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public asDouble(param0: number): number;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public at(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isNaN(): boolean;
								public get(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isArray(): boolean;
								public path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public fieldNames(): java.util.Iterator<string>;
								public asText(param0: string): string;
								public asLong(): number;
								public asInt(param0: number): number;
								public asInt(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export class ObjectNode extends me.pushy.sdk.lib.jackson.databind.node.ContainerNode<me.pushy.sdk.lib.jackson.databind.node.ObjectNode> {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.ObjectNode>;
								public _children: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.JsonNode>;
								public numberNode(param0: java.lang.Short): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public isContainerNode(): boolean;
								public path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public put(param0: string, param1: java.lang.Integer): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public equals(param0: any): boolean;
								public isValueNode(): boolean;
								public traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public findValuesAsText(param0: string): java.util.List<string>;
								public numberNode(param0: java.math.BigInteger): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public findValue(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public retain(param0: native.Array<string>): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory, param1: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.JsonNode>);
								public findParents(param0: string): java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>;
								public numberNode(param0: number): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public putAll(param0: me.pushy.sdk.lib.jackson.databind.node.ObjectNode): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public with(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public setAll(param0: java.util.Map<string,any>): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public put(param0: string, param1: string): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public isMissingNode(): boolean;
								public putAll(param0: java.util.Map<string,any>): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public without(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public put(param0: string, param1: java.lang.Float): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public rawValueNode(param0: me.pushy.sdk.lib.jackson.databind.util.RawValue): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberNode(param0: java.lang.Integer): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
								public retain(param0: java.util.Collection<string>): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public removeAll(): any;
								public deepCopy(): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public putPOJO(param0: string, param1: any): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public toString(): string;
								public path(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public findValues(param0: string, param1: java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>): java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>;
								public putNull(param0: string): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public size(): number;
								public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): boolean;
								public put(param0: string, param1: boolean): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public getNodeType(): me.pushy.sdk.lib.jackson.databind.node.JsonNodeType;
								public numberNode(param0: number): me.pushy.sdk.lib.jackson.databind.node.NumericNode;
								public remove(param0: java.util.Collection<string>): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public nullNode(): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public remove(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public equals(param0: java.util.Comparator<me.pushy.sdk.lib.jackson.databind.JsonNode>, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): boolean;
								public replace(param0: string, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public putObject(param0: string): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public withArray(param0: string): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public put(param0: string, param1: java.lang.Double): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public numberNode(param0: java.lang.Double): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public numberNode(param0: java.lang.Byte): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public numberNode(param0: java.math.BigDecimal): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public get(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public put(param0: string, param1: native.Array<number>): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public without(param0: java.util.Collection<string>): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public numberNode(param0: java.lang.Long): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public nullNode(): me.pushy.sdk.lib.jackson.databind.node.NullNode;
								public binaryNode(param0: native.Array<number>): me.pushy.sdk.lib.jackson.databind.node.BinaryNode;
								public put(param0: string, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public set(param0: string, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public _at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public putRawValue(param0: string, param1: me.pushy.sdk.lib.jackson.databind.util.RawValue): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public _childrenEqual(param0: me.pushy.sdk.lib.jackson.databind.node.ObjectNode): boolean;
								public isObject(): boolean;
								public textNode(param0: string): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public binaryNode(param0: native.Array<number>, param1: number, param2: number): me.pushy.sdk.lib.jackson.databind.node.BinaryNode;
								public elements(): java.util.Iterator<me.pushy.sdk.lib.jackson.databind.JsonNode>;
								public binaryNode(param0: native.Array<number>): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.node.JsonNodeFactory);
								public constructor();
								public arrayNode(): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public findValuesAsText(param0: string, param1: java.util.List<string>): java.util.List<string>;
								public fields(): java.util.Iterator<java.util.Map.Entry<string,me.pushy.sdk.lib.jackson.databind.JsonNode>>;
								public removeAll(): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public textNode(param0: string): me.pushy.sdk.lib.jackson.databind.node.TextNode;
								public put(param0: string, param1: number): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public pojoNode(param0: any): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public putArray(param0: string): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public withArray(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public setAll(param0: me.pushy.sdk.lib.jackson.databind.node.ObjectNode): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public binaryNode(param0: native.Array<number>, param1: number, param2: number): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public put(param0: string, param1: java.math.BigInteger): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public booleanNode(param0: boolean): me.pushy.sdk.lib.jackson.databind.node.BooleanNode;
								public arrayNode(param0: number): me.pushy.sdk.lib.jackson.databind.node.ArrayNode;
								public findValues(param0: string): java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>;
								public get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public with(param0: string): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public findParents(param0: string, param1: java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>): java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>;
								public findParent(param0: string): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
								public get(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public findParent(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public numberNode(param0: java.lang.Float): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public path(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public put(param0: string, param1: java.lang.Long): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public deepCopy(): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public _put(param0: string, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public booleanNode(param0: boolean): me.pushy.sdk.lib.jackson.databind.node.ValueNode;
								public put(param0: string, param1: java.lang.Short): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public at(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public fieldNames(): java.util.Iterator<string>;
								public isArray(): boolean;
								public hashCode(): number;
								public put(param0: string, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public put(param0: string, param1: java.math.BigDecimal): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public objectNode(): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export class POJONode extends me.pushy.sdk.lib.jackson.databind.node.ValueNode {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.POJONode>;
								public _value: any;
								public constructor(param0: any);
								public toString(): string;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public path(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public size(): number;
								public asText(): string;
								public isContainerNode(): boolean;
								public path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public getNodeType(): me.pushy.sdk.lib.jackson.databind.node.JsonNodeType;
								public binaryValue(): native.Array<number>;
								public equals(param0: any): boolean;
								public isValueNode(): boolean;
								public traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public asBoolean(param0: boolean): boolean;
								public asLong(param0: number): number;
								public equals(param0: java.util.Comparator<me.pushy.sdk.lib.jackson.databind.JsonNode>, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): boolean;
								public isObject(): boolean;
								public at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
								public get(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public getPojo(): any;
								public asBoolean(): boolean;
								public isMissingNode(): boolean;
								public get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public path(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public constructor();
								public asDouble(): number;
								public asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public asDouble(param0: number): number;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public at(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public get(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isArray(): boolean;
								public path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public fieldNames(): java.util.Iterator<string>;
								public asText(param0: string): string;
								public asLong(): number;
								public asInt(param0: number): number;
								public asInt(): number;
								public _pojoEquals(param0: me.pushy.sdk.lib.jackson.databind.node.POJONode): boolean;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export class ShortNode extends me.pushy.sdk.lib.jackson.databind.node.NumericNode {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.ShortNode>;
								public _value: number;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public path(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public canConvertToInt(): boolean;
								public size(): number;
								public asText(): string;
								public isContainerNode(): boolean;
								public path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public equals(param0: any): boolean;
								public isValueNode(): boolean;
								public isShort(): boolean;
								public traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public static valueOf(param0: number): me.pushy.sdk.lib.jackson.databind.node.ShortNode;
								public get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public asBoolean(param0: boolean): boolean;
								public equals(param0: java.util.Comparator<me.pushy.sdk.lib.jackson.databind.JsonNode>, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): boolean;
								public doubleValue(): number;
								public isObject(): boolean;
								public bigIntegerValue(): java.math.BigInteger;
								public at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public shortValue(): number;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
								public canConvertToLong(): boolean;
								public get(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public intValue(): number;
								public longValue(): number;
								public asBoolean(): boolean;
								public isIntegralNumber(): boolean;
								public decimalValue(): java.math.BigDecimal;
								public isMissingNode(): boolean;
								public get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public floatValue(): number;
								public path(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public constructor();
								public numberValue(): java.lang.Number;
								public asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public constructor(param0: number);
								public at(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public get(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isArray(): boolean;
								public path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public fieldNames(): java.util.Iterator<string>;
								public asText(param0: string): string;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export class TextNode extends me.pushy.sdk.lib.jackson.databind.node.ValueNode {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.TextNode>;
								public _value: string;
								public getBinaryValue(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): native.Array<number>;
								public toString(): string;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public path(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public size(): number;
								public asText(): string;
								public isContainerNode(): boolean;
								public path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public static valueOf(param0: string): me.pushy.sdk.lib.jackson.databind.node.TextNode;
								public getNodeType(): me.pushy.sdk.lib.jackson.databind.node.JsonNodeType;
								public binaryValue(): native.Array<number>;
								public equals(param0: any): boolean;
								public isValueNode(): boolean;
								public traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public textValue(): string;
								public get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public asBoolean(param0: boolean): boolean;
								public static appendQuoted(param0: java.lang.StringBuilder, param1: string): void;
								public asLong(param0: number): number;
								public equals(param0: java.util.Comparator<me.pushy.sdk.lib.jackson.databind.JsonNode>, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): boolean;
								public isObject(): boolean;
								public at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
								public get(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public asBoolean(): boolean;
								public isMissingNode(): boolean;
								public get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public path(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public constructor();
								public asDouble(): number;
								public asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public asDouble(param0: number): number;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public at(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public get(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isArray(): boolean;
								public path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public fieldNames(): java.util.Iterator<string>;
								public asText(param0: string): string;
								public asLong(): number;
								public asInt(param0: number): number;
								public constructor(param0: string);
								public asInt(): number;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export class TreeTraversingParser extends me.pushy.sdk.lib.jackson.core.base.ParserMinimalBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.TreeTraversingParser>;
								public _objectCodec: me.pushy.sdk.lib.jackson.core.ObjectCodec;
								public _nodeCursor: me.pushy.sdk.lib.jackson.databind.node.NodeCursor;
								public _nextToken: me.pushy.sdk.lib.jackson.core.JsonToken;
								public _startContainer: boolean;
								public _closed: boolean;
								public getBinaryValue(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): native.Array<number>;
								public _handleEOF(): void;
								public getNumberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public getDecimalValue(): java.math.BigDecimal;
								public getTokenLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
								public currentNode(): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JsonNode, param1: me.pushy.sdk.lib.jackson.core.ObjectCodec);
								public nextToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public getLongValue(): number;
								public getCodec(): me.pushy.sdk.lib.jackson.core.ObjectCodec;
								public overrideCurrentName(param0: string): void;
								public getText(): string;
								public setCodec(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): void;
								public readBinaryValue(param0: java.io.OutputStream): number;
								public getText(param0: java.io.Writer): number;
								public getDoubleValue(): number;
								public getFloatValue(): number;
								public getTextOffset(): number;
								public getCurrentName(): string;
								public getEmbeddedObject(): any;
								public getBinaryValue(): native.Array<number>;
								public hasTextCharacters(): boolean;
								public constructor();
								public getIntValue(): number;
								public skipChildren(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public readBinaryValue(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.OutputStream): number;
								public constructor(param0: number);
								public getNumberValue(): java.lang.Number;
								public getParsingContext(): me.pushy.sdk.lib.jackson.core.JsonStreamContext;
								public isNaN(): boolean;
								public isClosed(): boolean;
								public getTextLength(): number;
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public currentNumericNode(): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public close(): void;
								public getCurrentLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
								public getBigIntegerValue(): java.math.BigInteger;
								public getTextCharacters(): native.Array<string>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JsonNode);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module node {
							export abstract class ValueNode extends me.pushy.sdk.lib.jackson.databind.node.BaseJsonNode {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.node.ValueNode>;
								public toString(): string;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public path(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public findValues(param0: string, param1: java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>): java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>;
								public size(): number;
								public isContainerNode(): boolean;
								public path(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public hasNonNull(param0: number): boolean;
								public isValueNode(): boolean;
								public traverse(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public findValuesAsText(param0: string): java.util.List<string>;
								public _at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public findValues(param0: string): java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>;
								public get(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public has(param0: number): boolean;
								public findParents(param0: string, param1: java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>): java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>;
								public findValue(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isObject(): boolean;
								public at(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public findParent(param0: string): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.core.TreeNode;
								public get(param0: number): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public findParents(param0: string): java.util.List<me.pushy.sdk.lib.jackson.databind.JsonNode>;
								public numberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
								public findParent(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isMissingNode(): boolean;
								public get(param0: string): me.pushy.sdk.lib.jackson.core.TreeNode;
								public has(param0: string): boolean;
								public path(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public constructor();
								public findValuesAsText(param0: string, param1: java.util.List<string>): java.util.List<string>;
								public asToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public at(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public get(param0: string): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public traverse(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
								public at(param0: me.pushy.sdk.lib.jackson.core.JsonPointer): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public isArray(): boolean;
								public path(param0: number): me.pushy.sdk.lib.jackson.core.TreeNode;
								public fieldNames(): java.util.Iterator<string>;
								public deepCopy(): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public hasNonNull(param0: string): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export class AnyGetterWriter {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.AnyGetterWriter>;
								public _property: me.pushy.sdk.lib.jackson.databind.BeanProperty;
								public _accessor: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public _serializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public _mapSerializer: me.pushy.sdk.lib.jackson.databind.ser.std.MapSerializer;
								public resolve(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public getAndSerialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
								public getAndFilter(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.ser.PropertyFilter): void;
								public fixAccess(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export abstract class BasicSerializerFactory extends me.pushy.sdk.lib.jackson.databind.ser.SerializerFactory {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.BasicSerializerFactory>;
								public static _concrete: java.util.HashMap<string,me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>>;
								public static _concreteLazy: java.util.HashMap<string,java.lang.Class<any>>;
								public _factoryConfig: me.pushy.sdk.lib.jackson.databind.cfg.SerializerFactoryConfig;
								public buildContainerSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: boolean): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public _checkMapContentInclusion(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.ser.std.MapSerializer): me.pushy.sdk.lib.jackson.databind.ser.std.MapSerializer;
								public withConfig(param0: me.pushy.sdk.lib.jackson.databind.cfg.SerializerFactoryConfig): me.pushy.sdk.lib.jackson.databind.ser.SerializerFactory;
								public buildEnumSetSerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public buildMapSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.type.MapType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: boolean, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param5: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param6: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public _findContentSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public buildEnumSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public _findInclusionWithContent(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public createSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public findSerializerByAnnotations(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public buildArraySerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.type.ArrayType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: boolean, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public findSerializerByPrimaryType(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: boolean): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public customSerializers(): java.lang.Iterable<me.pushy.sdk.lib.jackson.databind.ser.Serializers>;
								public findOptionalStdSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: boolean): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public createKeySerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public findConverter(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.util.Converter<any,any>;
								public withAdditionalKeySerializers(param0: me.pushy.sdk.lib.jackson.databind.ser.Serializers): me.pushy.sdk.lib.jackson.databind.ser.SerializerFactory;
								public withAdditionalSerializers(param0: me.pushy.sdk.lib.jackson.databind.ser.Serializers): me.pushy.sdk.lib.jackson.databind.ser.SerializerFactory;
								public buildCollectionSerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: boolean, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>;
								public buildIteratorSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: boolean, param4: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public getFactoryConfig(): me.pushy.sdk.lib.jackson.databind.cfg.SerializerFactoryConfig;
								public buildIterableSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: boolean, param4: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public _findKeySerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public buildMapEntrySerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: boolean, param4: me.pushy.sdk.lib.jackson.databind.JavaType, param5: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public withSerializerModifier(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerModifier): me.pushy.sdk.lib.jackson.databind.ser.SerializerFactory;
								public constructor();
								public createTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
								public buildCollectionSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.type.CollectionType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: boolean, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public usesStaticTyping(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): boolean;
								public findSerializerByAddonType(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: boolean): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public buildIndexedListSerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: boolean, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>;
								public findSerializerFromAnnotation(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.SerializerFactoryConfig);
								public findConvertingSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public findFilterId(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription): any;
								public findSerializerByLookup(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: boolean): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public isIndexedList(param0: java.lang.Class<any>): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export class BeanPropertyFilter {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyFilter>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyFilter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									serializeAsField(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter): void;
									depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.node.ObjectNode, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								});
								public constructor();
								public serializeAsField(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter): void;
								public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.node.ObjectNode, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export class BeanPropertyWriter extends me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>;
								public static MARKER_FOR_EMPTY: any;
								public _name: me.pushy.sdk.lib.jackson.core.io.SerializedString;
								public _wrapperName: me.pushy.sdk.lib.jackson.databind.PropertyName;
								public _declaredType: me.pushy.sdk.lib.jackson.databind.JavaType;
								public _cfgSerializationType: me.pushy.sdk.lib.jackson.databind.JavaType;
								public _nonTrivialBaseType: me.pushy.sdk.lib.jackson.databind.JavaType;
								public _contextAnnotations: me.pushy.sdk.lib.jackson.databind.util.Annotations;
								public _member: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public _accessorMethod: java.lang.reflect.Method;
								public _field: java.lang.reflect.Field;
								public _serializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public _nullSerializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public _typeSerializer: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
								public _dynamicSerializers: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap;
								public _suppressNulls: boolean;
								public _suppressableValue: any;
								public _includeInViews: native.Array<java.lang.Class<any>>;
								public _internalSettings: java.util.HashMap<any,any>;
								public assignTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public getTypeSerializer(): me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
								public willSuppressNulls(): boolean;
								public assignSerializer(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): void;
								public unwrappingWriter(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter;
								public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public serializeAsField(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public _findAndAddDynamic(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
								public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
								public getSerializer(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter);
								public serializeAsOmittedField(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.node.ObjectNode, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public setInternalSetting(param0: any, param1: any): any;
								public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter);
								public constructor();
								public fixAccess(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase);
								public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public hasSerializer(): boolean;
								public getSerializationType(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
								public isRequired(): boolean;
								public toString(): string;
								public getInternalSetting(param0: any): any;
								public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public assignNullSerializer(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): void;
								public _handleSelfReference(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): boolean;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.core.io.SerializedString);
								public serializeAsPlaceholder(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public isUnwrapping(): boolean;
								public hasNullSerializer(): boolean;
								public getGenericPropertyType(): java.lang.reflect.Type;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.util.Annotations, param3: me.pushy.sdk.lib.jackson.databind.JavaType, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param5: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param6: me.pushy.sdk.lib.jackson.databind.JavaType, param7: boolean, param8: any, param9: native.Array<java.lang.Class<any>>);
								public getViews(): native.Array<java.lang.Class<any>>;
								public isVirtual(): boolean;
								public getName(): string;
								public get(param0: any): any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.util.Annotations, param3: me.pushy.sdk.lib.jackson.databind.JavaType, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param5: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param6: me.pushy.sdk.lib.jackson.databind.JavaType, param7: boolean, param8: any);
								public serializeAsElement(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public getRawSerializationType(): java.lang.Class<any>;
								public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								public getSerializedName(): me.pushy.sdk.lib.jackson.core.SerializableString;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition);
								public setNonTrivialBaseType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								public wouldConflictWithName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): boolean;
								public removeInternalSetting(param0: any): any;
								public getPropertyType(): java.lang.Class<any>;
								public _new(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
								public _depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.node.ObjectNode, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): void;
								public rename(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter;
								public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export class BeanSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.BeanSerializer>;
								public toString(): string;
								public withFilterId(param0: any): me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase);
								public static createDummy(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.ser.BeanSerializer;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>, param2: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: native.Array<string>);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: java.util.Set<string>);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: me.pushy.sdk.lib.jackson.databind.util.NameTransformer);
								public asArraySerializer(): me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase;
								public withFilterId(param0: any): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public constructor(param0: java.lang.Class<any>);
								public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerBuilder, param2: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>, param3: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
								public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								public resolve(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public constructor();
								public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public unwrappingSerializer(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter, param2: any);
								public withObjectIdWriter(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter): me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase;
								public withIgnorals(param0: java.util.Set<string>): me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase;
								public withIgnorals(param0: native.Array<string>): me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase;
								public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public constructor(param0: java.lang.Class<any>, param1: boolean);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export class BeanSerializerBuilder {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerBuilder>;
								public _beanDesc: me.pushy.sdk.lib.jackson.databind.BeanDescription;
								public _config: me.pushy.sdk.lib.jackson.databind.SerializationConfig;
								public _properties: java.util.List<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>;
								public _filteredProperties: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>;
								public _anyGetter: me.pushy.sdk.lib.jackson.databind.ser.AnyGetterWriter;
								public _filterId: any;
								public _typeId: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public _objectIdWriter: me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter;
								public setTypeId(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): void;
								public getAnyGetter(): me.pushy.sdk.lib.jackson.databind.ser.AnyGetterWriter;
								public getFilterId(): any;
								public getTypeId(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.BeanDescription);
								public setAnyGetter(param0: me.pushy.sdk.lib.jackson.databind.ser.AnyGetterWriter): void;
								public getObjectIdWriter(): me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter;
								public getProperties(): java.util.List<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>;
								public createDummy(): me.pushy.sdk.lib.jackson.databind.ser.BeanSerializer;
								public setConfig(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig): void;
								public getClassInfo(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerBuilder);
								public setObjectIdWriter(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter): void;
								public hasProperties(): boolean;
								public build(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public setProperties(param0: java.util.List<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>): void;
								public getFilteredProperties(): native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>;
								public setFilterId(param0: any): void;
								public setFilteredProperties(param0: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>): void;
								public getBeanDescription(): me.pushy.sdk.lib.jackson.databind.BeanDescription;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export class BeanSerializerFactory extends me.pushy.sdk.lib.jackson.databind.ser.BasicSerializerFactory {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerFactory>;
								public static instance: me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerFactory;
								public constructFilteredBeanWriter(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: native.Array<java.lang.Class<any>>): me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter;
								public findReferenceSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.type.ReferenceType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: boolean): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public findPropertyContentTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
								public findPropertyTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param2: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
								public withConfig(param0: me.pushy.sdk.lib.jackson.databind.cfg.SerializerFactoryConfig): me.pushy.sdk.lib.jackson.databind.ser.SerializerFactory;
								public constructBeanSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public findBeanProperties(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerBuilder): java.util.List<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>;
								public findBeanSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public _constructWriter(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param2: me.pushy.sdk.lib.jackson.databind.ser.PropertyBuilder, param3: boolean, param4: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter;
								public constructor();
								public createSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public filterBeanProperties(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: java.util.List<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>): java.util.List<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>;
								public processViews(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerBuilder): void;
								public isPotentialBeanType(param0: java.lang.Class<any>): boolean;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.cfg.SerializerFactoryConfig);
								public customSerializers(): java.lang.Iterable<me.pushy.sdk.lib.jackson.databind.ser.Serializers>;
								public _createSerializer2(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: boolean): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public constructBeanSerializerBuilder(param0: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerBuilder;
								public constructObjectIdHandler(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: java.util.List<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>): me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter;
								public removeOverlappingTypeIds(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerBuilder, param3: java.util.List<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>): java.util.List<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>;
								public buildAtomicReferenceSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.type.ReferenceType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: boolean, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public constructPropertyBuilder(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.ser.PropertyBuilder;
								public removeSetterlessGetters(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition>): void;
								public removeIgnorableTypes(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: java.util.List<me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition>): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export abstract class BeanSerializerModifier {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerModifier>;
								public modifyMapLikeSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.MapLikeType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public modifyKeySerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public changeProperties(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: java.util.List<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>): java.util.List<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>;
								public modifyArraySerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.ArrayType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public orderProperties(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: java.util.List<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>): java.util.List<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>;
								public constructor();
								public modifyMapSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.MapType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public updateBuilder(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerBuilder): me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerBuilder;
								public modifySerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public modifyEnumSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public modifyCollectionLikeSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public modifyCollectionSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.CollectionType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export abstract class ContainerSerializer<T>  extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any> {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
								public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public getContentType(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor();
								public hasSingleElement(param0: any): boolean;
								public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
								public getContentSerializer(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public _withValueTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>);
								public hasContentTypeAnnotation(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): boolean;
								public withValueTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>;
								public constructor(param0: java.lang.Class<any>);
								public constructor(param0: java.lang.Class<any>, param1: boolean);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export class ContextualSerializer {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.ContextualSerializer>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.ser.ContextualSerializer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								});
								public constructor();
								public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export abstract class DefaultSerializerProvider extends me.pushy.sdk.lib.jackson.databind.SerializerProvider {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.DefaultSerializerProvider>;
								public _seenObjectIds: java.util.Map<any,me.pushy.sdk.lib.jackson.databind.ser.impl.WritableObjectId>;
								public _objectIdGenerators: java.util.ArrayList<me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>>;
								public _generator: me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public getGenerator(): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param2: me.pushy.sdk.lib.jackson.databind.ser.SerializerFactory);
								public serializeValue(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: any): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider);
								public copy(): me.pushy.sdk.lib.jackson.databind.ser.DefaultSerializerProvider;
								public includeFilterInstance(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: java.lang.Class<any>): any;
								public serializeValue(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: any, param2: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								public createInstance(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.ser.SerializerFactory): me.pushy.sdk.lib.jackson.databind.ser.DefaultSerializerProvider;
								public constructor();
								public serializePolymorphic(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: any, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public cachedSerializersCount(): number;
								public serializerInstance(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: any): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public includeFilterSuppressNulls(param0: any): boolean;
								public serializeValue(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: any, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): void;
								public hasSerializerFor(param0: java.lang.Class<any>, param1: java.util.concurrent.atomic.AtomicReference<java.lang.Throwable>): boolean;
								public _serializeNull(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.DefaultSerializerProvider);
								public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper): void;
								public _createObjectIdMap(): java.util.Map<any,me.pushy.sdk.lib.jackson.databind.ser.impl.WritableObjectId>;
								public findObjectId(param0: any, param1: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>): me.pushy.sdk.lib.jackson.databind.ser.impl.WritableObjectId;
								public flushCachedSerializers(): void;
								public generateJsonSchema(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.jsonschema.JsonSchema;
							}
							export module DefaultSerializerProvider {
								export class Impl extends me.pushy.sdk.lib.jackson.databind.ser.DefaultSerializerProvider {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.DefaultSerializerProvider.Impl>;
									public copy(): me.pushy.sdk.lib.jackson.databind.ser.DefaultSerializerProvider;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.DefaultSerializerProvider);
									public createInstance(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.ser.SerializerFactory): me.pushy.sdk.lib.jackson.databind.ser.DefaultSerializerProvider.Impl;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.DefaultSerializerProvider.Impl);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param2: me.pushy.sdk.lib.jackson.databind.ser.SerializerFactory);
									public createInstance(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.ser.SerializerFactory): me.pushy.sdk.lib.jackson.databind.ser.DefaultSerializerProvider;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export abstract class FilterProvider {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.FilterProvider>;
								public findPropertyFilter(param0: any, param1: any): me.pushy.sdk.lib.jackson.databind.ser.PropertyFilter;
								public constructor();
								public findFilter(param0: any): me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyFilter;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export class PropertyBuilder {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.PropertyBuilder>;
								public _config: me.pushy.sdk.lib.jackson.databind.SerializationConfig;
								public _beanDesc: me.pushy.sdk.lib.jackson.databind.BeanDescription;
								public _annotationIntrospector: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector;
								public _defaultBean: any;
								public _defaultInclusion: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public _useRealPropertyDefaults: boolean;
								public getDefaultBean(): any;
								public getDefaultValue(param0: me.pushy.sdk.lib.jackson.databind.JavaType): any;
								public _throwWrapped(param0: java.lang.Exception, param1: string, param2: any): any;
								public buildWriter(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param5: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param6: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param7: boolean): me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.BeanDescription);
								public getClassAnnotations(): me.pushy.sdk.lib.jackson.databind.util.Annotations;
								public findSerializationType(param0: me.pushy.sdk.lib.jackson.databind.introspect.Annotated, param1: boolean, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getPropertyDefaultValue(param0: string, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.JavaType): any;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export class PropertyFilter {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.PropertyFilter>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.ser.PropertyFilter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									serializeAsField(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter): void;
									serializeAsElement(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter): void;
									depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.node.ObjectNode, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								});
								public constructor();
								public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.node.ObjectNode, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public serializeAsElement(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter): void;
								public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public serializeAsField(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export abstract class PropertyWriter extends me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter>;
								public isRequired(): boolean;
								public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public findAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								public serializeAsField(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public serializeAsPlaceholder(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
								public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
								public serializeAsOmittedField(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.node.ObjectNode, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public isVirtual(): boolean;
								public getName(): string;
								public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter);
								public serializeAsElement(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase);
								public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
								public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export class ResolvableSerializer {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.ResolvableSerializer>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.ser.ResolvableSerializer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									resolve(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								});
								public constructor();
								public resolve(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export class SerializerCache {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.SerializerCache>;
								public size(): number;
								public typedValueSerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public getReadOnlyLookupMap(): me.pushy.sdk.lib.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap;
								public addAndResolveNonTypedSerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public constructor();
								public addTypedSerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): void;
								public untypedValueSerializer(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public addAndResolveNonTypedSerializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public flush(): void;
								public untypedValueSerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public typedValueSerializer(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public addTypedSerializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): void;
								public addAndResolveNonTypedSerializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export abstract class SerializerFactory {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.SerializerFactory>;
								public createKeySerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public withSerializerModifier(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerModifier): me.pushy.sdk.lib.jackson.databind.ser.SerializerFactory;
								public constructor();
								public withAdditionalKeySerializers(param0: me.pushy.sdk.lib.jackson.databind.ser.Serializers): me.pushy.sdk.lib.jackson.databind.ser.SerializerFactory;
								public createSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public createTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
								public withAdditionalSerializers(param0: me.pushy.sdk.lib.jackson.databind.ser.Serializers): me.pushy.sdk.lib.jackson.databind.ser.SerializerFactory;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export class Serializers {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.Serializers>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.ser.Serializers interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									findSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									findReferenceSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.ReferenceType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									findArraySerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.ArrayType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									findCollectionSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.CollectionType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									findCollectionLikeSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									findMapSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.MapType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									findMapLikeSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.MapLikeType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								});
								public constructor();
								public findCollectionLikeSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public findMapSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.MapType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public findCollectionSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.CollectionType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public findSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public findArraySerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.ArrayType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public findMapLikeSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.MapLikeType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								public findReferenceSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.ReferenceType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
							}
							export module Serializers {
								export class Base extends me.pushy.sdk.lib.jackson.databind.ser.Serializers {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.Serializers.Base>;
									public constructor();
									public findMapSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.MapType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public findCollectionLikeSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public findMapLikeSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.MapLikeType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public findArraySerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.ArrayType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public findCollectionSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.CollectionType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public findSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public findReferenceSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: me.pushy.sdk.lib.jackson.databind.type.ReferenceType, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export abstract class VirtualBeanPropertyWriter extends me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.VirtualBeanPropertyWriter>;
								public isRequired(): boolean;
								public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.VirtualBeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
								public serializeAsField(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.core.io.SerializedString);
								public withConfig(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass, param2: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param3: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.ser.VirtualBeanPropertyWriter;
								public value(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): any;
								public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
								public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter);
								public static _suppressNulls(param0: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value): boolean;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.util.Annotations, param3: me.pushy.sdk.lib.jackson.databind.JavaType, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param5: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param6: me.pushy.sdk.lib.jackson.databind.JavaType, param7: boolean, param8: any, param9: native.Array<java.lang.Class<any>>);
								public static _suppressableValue(param0: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value): any;
								public isVirtual(): boolean;
								public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.node.ObjectNode, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public getName(): string;
								public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.util.Annotations, param3: me.pushy.sdk.lib.jackson.databind.JavaType, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param5: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param6: me.pushy.sdk.lib.jackson.databind.JavaType, param7: boolean, param8: any);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.util.Annotations, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param5: me.pushy.sdk.lib.jackson.databind.JavaType, param6: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value);
								public constructor();
								public serializeAsElement(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.VirtualBeanPropertyWriter);
								public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.util.Annotations, param2: me.pushy.sdk.lib.jackson.databind.JavaType);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.util.Annotations, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param5: me.pushy.sdk.lib.jackson.databind.JavaType, param6: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value, param7: native.Array<java.lang.Class<any>>);
								public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
								public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module impl {
								export class AttributePropertyWriter extends me.pushy.sdk.lib.jackson.databind.ser.VirtualBeanPropertyWriter {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.AttributePropertyWriter>;
									public _attrName: string;
									public isVirtual(): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.util.Annotations, param2: me.pushy.sdk.lib.jackson.databind.JavaType);
									public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
									public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param2: me.pushy.sdk.lib.jackson.databind.util.Annotations, param3: me.pushy.sdk.lib.jackson.databind.JavaType, param4: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value);
									public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public static construct(param0: string, param1: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param2: me.pushy.sdk.lib.jackson.databind.util.Annotations, param3: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.ser.impl.AttributePropertyWriter;
									public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.node.ObjectNode, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.VirtualBeanPropertyWriter);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.util.Annotations, param3: me.pushy.sdk.lib.jackson.databind.JavaType, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param5: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param6: me.pushy.sdk.lib.jackson.databind.JavaType, param7: boolean, param8: any, param9: native.Array<java.lang.Class<any>>);
									public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
									public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.util.Annotations, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param5: me.pushy.sdk.lib.jackson.databind.JavaType, param6: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value, param7: native.Array<java.lang.Class<any>>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition);
									public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
									public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public constructor();
									public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.AttributePropertyWriter);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.core.io.SerializedString);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter);
									public getName(): string;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
									public value(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): any;
									public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
									public withConfig(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedClass, param2: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param3: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.ser.VirtualBeanPropertyWriter;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.util.Annotations, param3: me.pushy.sdk.lib.jackson.databind.JavaType, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param5: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param6: me.pushy.sdk.lib.jackson.databind.JavaType, param7: boolean, param8: any);
									public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public isRequired(): boolean;
									public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase);
									public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.util.Annotations, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param5: me.pushy.sdk.lib.jackson.databind.JavaType, param6: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.VirtualBeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
									public constructor(param0: string, param1: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param2: me.pushy.sdk.lib.jackson.databind.util.Annotations, param3: me.pushy.sdk.lib.jackson.databind.JavaType);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module impl {
								export class BeanAsArraySerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.BeanAsArraySerializer>;
									public _defaultSerializer: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: java.util.Set<string>);
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public withIgnorals(param0: native.Array<string>): me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase;
									public withIgnorals(param0: java.util.Set<string>): me.pushy.sdk.lib.jackson.databind.ser.impl.BeanAsArraySerializer;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public unwrappingSerializer(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public resolve(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public withIgnorals(param0: java.util.Set<string>): me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase;
									public asArraySerializer(): me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: me.pushy.sdk.lib.jackson.databind.util.NameTransformer);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: native.Array<string>);
									public serializeAsArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor();
									public isUnwrappingSerializer(): boolean;
									public withFilterId(param0: any): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerBuilder, param2: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>, param3: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>);
									public toString(): string;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter, param2: any);
									public withFilterId(param0: any): me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>, param2: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>);
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public withObjectIdWriter(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter): me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module impl {
								export class FailingSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.FailingSerializer>;
									public _msg: string;
									public constructor();
									public constructor(param0: string);
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module impl {
								export abstract class FilteredBeanPropertyWriter {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.FilteredBeanPropertyWriter>;
									public constructor();
									public static constructViewBased(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: native.Array<java.lang.Class<any>>): me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter;
								}
								export module FilteredBeanPropertyWriter {
									export class MultiView extends me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView>;
										public _delegate: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter;
										public _views: native.Array<java.lang.Class<any>>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: native.Array<java.lang.Class<any>>);
										public getName(): string;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
										public serializeAsElement(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
										public rename(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter;
										public constructor();
										public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
										public rename(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView;
										public isVirtual(): boolean;
										public serializeAsField(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public assignNullSerializer(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): void;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.util.Annotations, param3: me.pushy.sdk.lib.jackson.databind.JavaType, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param5: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param6: me.pushy.sdk.lib.jackson.databind.JavaType, param7: boolean, param8: any, param9: native.Array<java.lang.Class<any>>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.core.io.SerializedString);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase);
										public assignSerializer(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): void;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.util.Annotations, param3: me.pushy.sdk.lib.jackson.databind.JavaType, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param5: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param6: me.pushy.sdk.lib.jackson.databind.JavaType, param7: boolean, param8: any);
										public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
										public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
										public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition);
										public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
										public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
										public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
										public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
										public isRequired(): boolean;
										public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
										public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
										public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.node.ObjectNode, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter);
									}
									export class SingleView extends me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView>;
										public _delegate: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter;
										public _view: java.lang.Class<any>;
										public getName(): string;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
										public serializeAsElement(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
										public rename(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter;
										public constructor();
										public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: java.lang.Class<any>);
										public isVirtual(): boolean;
										public serializeAsField(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public assignNullSerializer(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): void;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.util.Annotations, param3: me.pushy.sdk.lib.jackson.databind.JavaType, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param5: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param6: me.pushy.sdk.lib.jackson.databind.JavaType, param7: boolean, param8: any, param9: native.Array<java.lang.Class<any>>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.core.io.SerializedString);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase);
										public assignSerializer(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): void;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.util.Annotations, param3: me.pushy.sdk.lib.jackson.databind.JavaType, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param5: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param6: me.pushy.sdk.lib.jackson.databind.JavaType, param7: boolean, param8: any);
										public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
										public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
										public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition);
										public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
										public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
										public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
										public rename(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView;
										public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
										public isRequired(): boolean;
										public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
										public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
										public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.node.ObjectNode, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter);
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module impl {
								export class IndexedListSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<java.util.List<any>> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.IndexedListSerializer>;
									public isEmpty(param0: any): boolean;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.IndexedListSerializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: java.lang.Boolean);
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: boolean, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.BeanProperty, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: java.lang.Class<any>);
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: boolean, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public serializeContents(param0: java.util.List<any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor();
									public serializeContentsUsing(param0: java.util.List<any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: java.lang.Boolean);
									public serialize(param0: java.util.List<any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.util.List<any>): boolean;
									public hasSingleElement(param0: java.util.List<any>): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public hasSingleElement(param0: any): boolean;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.ser.impl.IndexedListSerializer;
									public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: boolean, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public _withValueTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>;
									public serializeContents(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public serializeTypedContents(param0: java.util.List<any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module impl {
								export class IndexedStringListSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StaticListSerializerBase<java.util.List<string>> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.IndexedStringListSerializer>;
									public static instance: me.pushy.sdk.lib.jackson.databind.ser.impl.IndexedStringListSerializer;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor();
									public _withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public serialize(param0: java.util.List<string>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public acceptContentVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.IndexedStringListSerializer, param1: java.lang.Boolean);
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public serializeWithType(param0: java.util.List<string>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public contentSchema(): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StaticListSerializerBase<any>, param1: java.lang.Boolean);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module impl {
								export class IteratorSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<java.util.Iterator<any>> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.IteratorSerializer>;
									public isEmpty(param0: any): boolean;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: boolean, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer);
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: boolean, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.BeanProperty, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.util.Iterator<any>): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: java.lang.Class<any>);
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public _serializeDynamicContents(param0: java.util.Iterator<any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>;
									public serializeContents(param0: java.util.Iterator<any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public serialize(param0: java.util.Iterator<any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: java.lang.Boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public hasSingleElement(param0: any): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.IteratorSerializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: java.lang.Boolean);
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.ser.impl.IteratorSerializer;
									public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: boolean, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public _withValueTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>;
									public serializeContents(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public hasSingleElement(param0: java.util.Iterator<any>): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module impl {
								export class MapEntrySerializer extends me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<java.util.Map.Entry<any,any>> implements me.pushy.sdk.lib.jackson.databind.ser.ContextualSerializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.MapEntrySerializer>;
									public static MARKER_FOR_EMPTY: any;
									public _property: me.pushy.sdk.lib.jackson.databind.BeanProperty;
									public _valueTypeIsStatic: boolean;
									public _entryType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public _keyType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public _valueType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public _keySerializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public _valueSerializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public _valueTypeSerializer: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
									public _dynamicValueSerializers: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap;
									public _suppressableValue: any;
									public _suppressNulls: boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: boolean, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param5: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public isEmpty(param0: any): boolean;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.MapEntrySerializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param5: any, param6: boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: java.lang.Class<any>);
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.util.Map.Entry<any,any>): boolean;
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public withContentInclusion(param0: any, param1: boolean): me.pushy.sdk.lib.jackson.databind.ser.impl.MapEntrySerializer;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public serializeWithType(param0: java.util.Map.Entry<any,any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public constructor();
									public _findAndAddDynamic(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public hasSingleElement(param0: java.util.Map.Entry<any,any>): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public hasSingleElement(param0: any): boolean;
									public _findAndAddDynamic(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.MapEntrySerializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public getContentSerializer(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public serializeDynamic(param0: java.util.Map.Entry<any,any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public _withValueTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>;
									public getContentType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public serialize(param0: java.util.Map.Entry<any,any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: any, param4: boolean): me.pushy.sdk.lib.jackson.databind.ser.impl.MapEntrySerializer;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module impl {
								export class ObjectIdWriter {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter>;
									public idType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public propertyName: me.pushy.sdk.lib.jackson.core.SerializableString;
									public generator: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>;
									public serializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public alwaysAsId: boolean;
									public static construct(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.PropertyName, param2: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>, param3: boolean): me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter;
									public withAlwaysAsId(param0: boolean): me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter;
									public withSerializer(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.core.SerializableString, param2: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: boolean);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module impl {
								export class PropertyBasedObjectIdGenerator extends me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerators.PropertyGenerator {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator>;
									public _property: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter;
									public constructor();
									public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter);
									public newForSerialization(param0: any): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>;
									public canUseFor(param0: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>): boolean;
									public generateId(param0: any): any;
									public forScope(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ObjectIdInfo, param1: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter);
									public constructor(param0: java.lang.Class<any>);
									public key(param0: any): me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator.IdKey;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module impl {
								export abstract class PropertySerializerMap {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap>;
									public _resetWhenFull: boolean;
									public findAndAddPrimarySerializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap.SerializerAndMapResult;
									public findAndAddSecondarySerializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap.SerializerAndMapResult;
									public serializerFor(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap);
									public findAndAddRootValueSerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap.SerializerAndMapResult;
									public constructor(param0: boolean);
									public findAndAddPrimarySerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap.SerializerAndMapResult;
									public static emptyMap(): me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap;
									public findAndAddSecondarySerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap.SerializerAndMapResult;
									public findAndAddKeySerializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap.SerializerAndMapResult;
									public addSerializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap.SerializerAndMapResult;
									public findAndAddRootValueSerializer(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap.SerializerAndMapResult;
									public addSerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap.SerializerAndMapResult;
									public static emptyForProperties(): me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap;
									public static emptyForRootValues(): me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap;
									public newWith(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap;
								}
								export module PropertySerializerMap {
									export class Double extends me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap.Double>;
										public constructor(param0: boolean);
										public newWith(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap);
										public serializerFor(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: java.lang.Class<any>, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									}
									export class Empty extends me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap.Empty>;
										public static FOR_PROPERTIES: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap.Empty;
										public static FOR_ROOT_VALUES: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap.Empty;
										public constructor(param0: boolean);
										public newWith(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap);
										public serializerFor(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									}
									export class Multi extends me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap.Multi>;
										public constructor(param0: boolean);
										public newWith(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap);
										public serializerFor(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap, param1: native.Array<me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap.TypeAndSerializer>);
									}
									export class SerializerAndMapResult {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap.SerializerAndMapResult>;
										public serializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public map: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param1: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap);
									}
									export class Single extends me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap.Single>;
										public constructor(param0: boolean);
										public newWith(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap);
										public serializerFor(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									}
									export class TypeAndSerializer {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap.TypeAndSerializer>;
										public type: java.lang.Class<any>;
										public serializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module impl {
								export class ReadOnlyClassToSerializerMap {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap>;
									public constructor(param0: java.util.Map<me.pushy.sdk.lib.jackson.databind.util.TypeKey,me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>>);
									public untypedValueSerializer(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public static from(param0: java.util.HashMap<me.pushy.sdk.lib.jackson.databind.util.TypeKey,me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>>): me.pushy.sdk.lib.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap;
									public size(): number;
									public untypedValueSerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public typedValueSerializer(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public typedValueSerializer(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								}
								export module ReadOnlyClassToSerializerMap {
									export class Bucket {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.Bucket>;
										public value: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public next: me.pushy.sdk.lib.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.Bucket;
										public _class: java.lang.Class<any>;
										public _type: me.pushy.sdk.lib.jackson.databind.JavaType;
										public _isTyped: boolean;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap.Bucket, param1: me.pushy.sdk.lib.jackson.databind.util.TypeKey, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
										public matchesUntyped(param0: me.pushy.sdk.lib.jackson.databind.JavaType): boolean;
										public matchesTyped(param0: java.lang.Class<any>): boolean;
										public matchesTyped(param0: me.pushy.sdk.lib.jackson.databind.JavaType): boolean;
										public matchesUntyped(param0: java.lang.Class<any>): boolean;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module impl {
								export class SimpleBeanPropertyFilter implements me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyFilter, me.pushy.sdk.lib.jackson.databind.ser.PropertyFilter {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.SimpleBeanPropertyFilter>;
									public serializeAsField(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter): void;
									public constructor();
									public static filterOutAllExcept(param0: java.util.Set<string>): me.pushy.sdk.lib.jackson.databind.ser.impl.SimpleBeanPropertyFilter;
									public static serializeAllExcept(param0: java.util.Set<string>): me.pushy.sdk.lib.jackson.databind.ser.impl.SimpleBeanPropertyFilter;
									public includeElement(param0: any): boolean;
									public static from(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyFilter): me.pushy.sdk.lib.jackson.databind.ser.PropertyFilter;
									public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public static serializeAll(): me.pushy.sdk.lib.jackson.databind.ser.impl.SimpleBeanPropertyFilter;
									public static filterOutAllExcept(param0: native.Array<string>): me.pushy.sdk.lib.jackson.databind.ser.impl.SimpleBeanPropertyFilter;
									public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.node.ObjectNode, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public include(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter): boolean;
									public static serializeAll(param0: java.util.Set<string>): me.pushy.sdk.lib.jackson.databind.ser.impl.SimpleBeanPropertyFilter;
									public static serializeAllExcept(param0: native.Array<string>): me.pushy.sdk.lib.jackson.databind.ser.impl.SimpleBeanPropertyFilter;
									public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.node.ObjectNode, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public include(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter): boolean;
									public serializeAsElement(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter): void;
									public serializeAsField(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter): void;
								}
								export module SimpleBeanPropertyFilter {
									export class FilterExceptFilter extends me.pushy.sdk.lib.jackson.databind.ser.impl.SimpleBeanPropertyFilter {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.SimpleBeanPropertyFilter.FilterExceptFilter>;
										public _propertiesToInclude: java.util.Set<string>;
										public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public include(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter): boolean;
										public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public serializeAsField(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter): void;
										public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.node.ObjectNode, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public constructor();
										public constructor(param0: java.util.Set<string>);
										public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.node.ObjectNode, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public serializeAsElement(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter): void;
										public include(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter): boolean;
										public serializeAsField(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter): void;
									}
									export class SerializeExceptFilter extends me.pushy.sdk.lib.jackson.databind.ser.impl.SimpleBeanPropertyFilter {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.SimpleBeanPropertyFilter.SerializeExceptFilter>;
										public _propertiesToExclude: java.util.Set<string>;
										public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public include(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter): boolean;
										public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public serializeAsField(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter): void;
										public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.node.ObjectNode, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public constructor();
										public constructor(param0: java.util.Set<string>);
										public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.node.ObjectNode, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public serializeAsElement(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter): void;
										public include(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter): boolean;
										public serializeAsField(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter): void;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module impl {
								export class SimpleFilterProvider extends me.pushy.sdk.lib.jackson.databind.ser.FilterProvider {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.SimpleFilterProvider>;
									public _filtersById: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.ser.PropertyFilter>;
									public _defaultFilter: me.pushy.sdk.lib.jackson.databind.ser.PropertyFilter;
									public _cfgFailOnUnknownId: boolean;
									public constructor();
									public addFilter(param0: string, param1: me.pushy.sdk.lib.jackson.databind.ser.PropertyFilter): me.pushy.sdk.lib.jackson.databind.ser.impl.SimpleFilterProvider;
									public findPropertyFilter(param0: any, param1: any): me.pushy.sdk.lib.jackson.databind.ser.PropertyFilter;
									public setFailOnUnknownId(param0: boolean): me.pushy.sdk.lib.jackson.databind.ser.impl.SimpleFilterProvider;
									public addFilter(param0: string, param1: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyFilter): me.pushy.sdk.lib.jackson.databind.ser.impl.SimpleFilterProvider;
									public setDefaultFilter(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.SimpleBeanPropertyFilter): me.pushy.sdk.lib.jackson.databind.ser.impl.SimpleFilterProvider;
									public removeFilter(param0: string): me.pushy.sdk.lib.jackson.databind.ser.PropertyFilter;
									public constructor(param0: java.util.Map<string,any>);
									public setDefaultFilter(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyFilter): me.pushy.sdk.lib.jackson.databind.ser.impl.SimpleFilterProvider;
									public findFilter(param0: any): me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyFilter;
									public setDefaultFilter(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyFilter): me.pushy.sdk.lib.jackson.databind.ser.impl.SimpleFilterProvider;
									public willFailOnUnknownId(): boolean;
									public addFilter(param0: string, param1: me.pushy.sdk.lib.jackson.databind.ser.impl.SimpleBeanPropertyFilter): me.pushy.sdk.lib.jackson.databind.ser.impl.SimpleFilterProvider;
									public getDefaultFilter(): me.pushy.sdk.lib.jackson.databind.ser.PropertyFilter;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module impl {
								export class StringArraySerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<native.Array<string>> implements me.pushy.sdk.lib.jackson.databind.ser.ContextualSerializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.StringArraySerializer>;
									public static instance: me.pushy.sdk.lib.jackson.databind.ser.impl.StringArraySerializer;
									public _elementSerializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public isEmpty(param0: any): boolean;
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: native.Array<string>): boolean;
									public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public _withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public hasSingleElement(param0: native.Array<string>): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: java.lang.Class<any>);
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Boolean);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.StringArraySerializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: java.lang.Boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public hasSingleElement(param0: any): boolean;
									public getContentSerializer(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>);
									public _withValueTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>;
									public getContentType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public serializeContents(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public serializeContents(param0: native.Array<string>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>);
									public serialize(param0: native.Array<string>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module impl {
								export class StringCollectionSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StaticListSerializerBase<java.util.Collection<string>> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.StringCollectionSerializer>;
									public static instance: me.pushy.sdk.lib.jackson.databind.ser.impl.StringCollectionSerializer;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor();
									public serializeWithType(param0: java.util.Collection<string>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.StringCollectionSerializer, param1: java.lang.Boolean);
									public _withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public acceptContentVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor): void;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public contentSchema(): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StaticListSerializerBase<any>, param1: java.lang.Boolean);
									public serialize(param0: java.util.Collection<string>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module impl {
								export class TypeWrappedSerializer extends me.pushy.sdk.lib.jackson.databind.JsonSerializer<any> implements me.pushy.sdk.lib.jackson.databind.ser.ContextualSerializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.TypeWrappedSerializer>;
									public _typeSerializer: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
									public _serializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor();
									public handledType(): java.lang.Class<any>;
									public typeSerializer(): me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public valueSerializer(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module impl {
								export class UnknownSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.UnknownSerializer>;
									public isEmpty(param0: any): boolean;
									public constructor();
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
									public failForEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module impl {
								export class UnwrappingBeanPropertyWriter extends me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter>;
									public _nameTransformer: me.pushy.sdk.lib.jackson.databind.util.NameTransformer;
									public isVirtual(): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.util.NameTransformer);
									public rename(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter;
									public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
									public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public _new(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter;
									public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.node.ObjectNode, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public _depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.node.ObjectNode, param1: me.pushy.sdk.lib.jackson.databind.JsonNode): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.util.Annotations, param3: me.pushy.sdk.lib.jackson.databind.JavaType, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param5: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param6: me.pushy.sdk.lib.jackson.databind.JavaType, param7: boolean, param8: any, param9: native.Array<java.lang.Class<any>>);
									public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
									public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition);
									public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
									public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public constructor();
									public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.core.io.SerializedString);
									public _findAndAddDynamic(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public rename(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter);
									public getName(): string;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.PropertyName);
									public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter, param1: me.pushy.sdk.lib.jackson.databind.util.NameTransformer, param2: me.pushy.sdk.lib.jackson.core.io.SerializedString);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.util.Annotations, param3: me.pushy.sdk.lib.jackson.databind.JavaType, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param5: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param6: me.pushy.sdk.lib.jackson.databind.JavaType, param7: boolean, param8: any);
									public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public isUnwrapping(): boolean;
									public isRequired(): boolean;
									public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase);
									public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter);
									public _new(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer, param1: me.pushy.sdk.lib.jackson.core.io.SerializedString): me.pushy.sdk.lib.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;
									public serializeAsField(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public assignSerializer(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module impl {
								export class UnwrappingBeanSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.UnwrappingBeanSerializer>;
									public _nameTransformer: me.pushy.sdk.lib.jackson.databind.util.NameTransformer;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: java.util.Set<string>);
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public withIgnorals(param0: native.Array<string>): me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public unwrappingSerializer(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public resolve(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public withIgnorals(param0: java.util.Set<string>): me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase;
									public asArraySerializer(): me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: me.pushy.sdk.lib.jackson.databind.util.NameTransformer);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: native.Array<string>);
									public constructor();
									public isUnwrappingSerializer(): boolean;
									public withFilterId(param0: any): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.UnwrappingBeanSerializer, param1: me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerBuilder, param2: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>, param3: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>);
									public toString(): string;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.UnwrappingBeanSerializer, param1: java.util.Set<string>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter, param2: any);
									public withFilterId(param0: any): me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>, param2: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>);
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public withObjectIdWriter(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter): me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.UnwrappingBeanSerializer, param1: me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter, param2: any);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module impl {
								export class WritableObjectId {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.impl.WritableObjectId>;
									public generator: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>;
									public id: any;
									public idWritten: boolean;
									public generateId(param0: any): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator<any>);
									public writeAsField(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter): void;
									public writeAsId(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter): boolean;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export abstract class ArraySerializerBase<T>  extends me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any> implements me.pushy.sdk.lib.jackson.databind.ser.ContextualSerializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>>;
									public _property: me.pushy.sdk.lib.jackson.databind.BeanProperty;
									public _unwrapSingle: java.lang.Boolean;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public _shouldUnwrapSingle(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): boolean;
									public _withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Boolean);
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public serializeContents(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export abstract class AsArraySerializerBase<T>  extends me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any> implements me.pushy.sdk.lib.jackson.databind.ser.ContextualSerializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>>;
									public _elementType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public _property: me.pushy.sdk.lib.jackson.databind.BeanProperty;
									public _staticTyping: boolean;
									public _unwrapSingle: java.lang.Boolean;
									public _valueTypeSerializer: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
									public _elementSerializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public _dynamicSerializers: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: java.lang.Boolean);
									public _findAndAddDynamic(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: boolean, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.BeanProperty, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public _findAndAddDynamic(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: boolean, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public getContentSerializer(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public getContentType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>;
									public serializeContents(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class AtomicReferenceSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.ReferenceTypeSerializer<java.util.concurrent.atomic.AtomicReference<any>> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.AtomicReferenceSerializer>;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor();
									public _getReferenced(param0: any): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.AtomicReferenceSerializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: me.pushy.sdk.lib.jackson.databind.util.NameTransformer, param5: any, param6: boolean);
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.ser.std.ReferenceTypeSerializer<java.util.concurrent.atomic.AtomicReference<any>>;
									public _getReferencedIfPresent(param0: java.util.concurrent.atomic.AtomicReference<any>): any;
									public _getReferencedIfPresent(param0: any): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.type.ReferenceType, param1: boolean, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.ser.std.ReferenceTypeSerializer<any>;
									public _getReferenced(param0: java.util.concurrent.atomic.AtomicReference<any>): any;
									public withContentInclusion(param0: any, param1: boolean): me.pushy.sdk.lib.jackson.databind.ser.std.ReferenceTypeSerializer<any>;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ReferenceTypeSerializer<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: me.pushy.sdk.lib.jackson.databind.util.NameTransformer, param5: any, param6: boolean);
									public withContentInclusion(param0: any, param1: boolean): me.pushy.sdk.lib.jackson.databind.ser.std.ReferenceTypeSerializer<java.util.concurrent.atomic.AtomicReference<any>>;
									public _isValuePresent(param0: any): boolean;
									public _isValuePresent(param0: java.util.concurrent.atomic.AtomicReference<any>): boolean;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export abstract class BeanSerializerBase extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase>;
									public static NAME_FOR_OBJECT_REF: me.pushy.sdk.lib.jackson.databind.PropertyName;
									public static NO_PROPS: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>;
									public _beanType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public _props: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>;
									public _filteredProps: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>;
									public _anyGetterWriter: me.pushy.sdk.lib.jackson.databind.ser.AnyGetterWriter;
									public _propertyFilterId: any;
									public _typeId: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
									public _objectIdWriter: me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter;
									public _serializationShape: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Shape;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public _customTypeId(param0: any): string;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: java.util.Set<string>);
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public withIgnorals(param0: native.Array<string>): me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase;
									public _serializeWithObjectId(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: java.lang.Class<any>);
									public serializeFieldsFiltered(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public findConvertingSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public resolve(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public withIgnorals(param0: java.util.Set<string>): me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase;
									public asArraySerializer(): me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: me.pushy.sdk.lib.jackson.databind.util.NameTransformer);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: native.Array<string>);
									public constructor();
									public withFilterId(param0: any): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public _serializeWithObjectId(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: boolean): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.ser.BeanSerializerBuilder, param2: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>, param3: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter, param2: any);
									public withFilterId(param0: any): me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase, param1: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>, param2: native.Array<me.pushy.sdk.lib.jackson.databind.ser.BeanPropertyWriter>);
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public withObjectIdWriter(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.ObjectIdWriter): me.pushy.sdk.lib.jackson.databind.ser.std.BeanSerializerBase;
									public _serializeObjectId(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.ser.impl.WritableObjectId): void;
									public serializeFields(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public usesObjectId(): boolean;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
									public properties(): java.util.Iterator<me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class BooleanSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdScalarSerializer<any> implements me.pushy.sdk.lib.jackson.databind.ser.ContextualSerializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.BooleanSerializer>;
									public _forPrimitive: boolean;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor();
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: boolean);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
								export module BooleanSerializer {
									export class AsNumber extends me.pushy.sdk.lib.jackson.databind.ser.std.StdScalarSerializer<any> implements me.pushy.sdk.lib.jackson.databind.ser.ContextualSerializer  {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.BooleanSerializer.AsNumber>;
										public _forPrimitive: boolean;
										public constructor(param0: boolean);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor();
										public constructor(param0: java.lang.Class<any>);
										public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
										public constructor(param0: java.lang.Class<any>, param1: boolean);
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class ByteArraySerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<native.Array<number>> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.ByteArraySerializer>;
									public isEmpty(param0: any): boolean;
									public constructor();
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: native.Array<number>): boolean;
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public serializeWithType(param0: native.Array<number>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public serialize(param0: native.Array<number>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class ByteBufferSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdScalarSerializer<java.nio.ByteBuffer> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.ByteBufferSerializer>;
									public constructor();
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public serialize(param0: java.nio.ByteBuffer, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class CalendarSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.DateTimeSerializerBase<java.util.Calendar> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.CalendarSerializer>;
									public static instance: me.pushy.sdk.lib.jackson.databind.ser.std.CalendarSerializer;
									public _timestamp(param0: any): number;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor();
									public constructor(param0: java.lang.Class<any>, param1: java.lang.Boolean, param2: java.text.DateFormat);
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: java.lang.Boolean, param1: java.text.DateFormat);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public serialize(param0: java.util.Calendar, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public withFormat(param0: java.lang.Boolean, param1: java.text.DateFormat): me.pushy.sdk.lib.jackson.databind.ser.std.CalendarSerializer;
									public _timestamp(param0: java.util.Calendar): number;
									public withFormat(param0: java.lang.Boolean, param1: java.text.DateFormat): me.pushy.sdk.lib.jackson.databind.ser.std.DateTimeSerializerBase<any>;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class ClassSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdScalarSerializer<java.lang.Class<any>> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.ClassSerializer>;
									public constructor();
									public serialize(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class CollectionSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<java.util.Collection<any>> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.CollectionSerializer>;
									public isEmpty(param0: any): boolean;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.ser.std.CollectionSerializer;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>;
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.util.Collection<any>): boolean;
									public serializeContentsUsing(param0: java.util.Collection<any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): void;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: boolean, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.BeanProperty, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public serializeContents(param0: java.util.Collection<any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: java.lang.Class<any>);
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: boolean, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: boolean, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.BeanProperty, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: java.lang.Boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.CollectionSerializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: java.lang.Boolean);
									public serialize(param0: java.util.Collection<any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public hasSingleElement(param0: any): boolean;
									public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: boolean, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public _withValueTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>;
									public hasSingleElement(param0: java.util.Collection<any>): boolean;
									public serializeContents(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class DateSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.DateTimeSerializerBase<java.util.Date> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.DateSerializer>;
									public static instance: me.pushy.sdk.lib.jackson.databind.ser.std.DateSerializer;
									public _timestamp(param0: any): number;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor();
									public constructor(param0: java.lang.Class<any>, param1: java.lang.Boolean, param2: java.text.DateFormat);
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: java.lang.Boolean, param1: java.text.DateFormat);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public withFormat(param0: java.lang.Boolean, param1: java.text.DateFormat): me.pushy.sdk.lib.jackson.databind.ser.std.DateSerializer;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public _timestamp(param0: java.util.Date): number;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public serialize(param0: java.util.Date, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public withFormat(param0: java.lang.Boolean, param1: java.text.DateFormat): me.pushy.sdk.lib.jackson.databind.ser.std.DateTimeSerializerBase<any>;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export abstract class DateTimeSerializerBase<T>  extends me.pushy.sdk.lib.jackson.databind.ser.std.StdScalarSerializer<any> implements me.pushy.sdk.lib.jackson.databind.ser.ContextualSerializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.DateTimeSerializerBase<any>>;
									public _useTimestamp: java.lang.Boolean;
									public _customFormat: java.text.DateFormat;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public isEmpty(param0: any): boolean;
									public _timestamp(param0: any): number;
									public constructor();
									public _asTimestamp(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): boolean;
									public constructor(param0: java.lang.Class<any>, param1: java.lang.Boolean, param2: java.text.DateFormat);
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public _acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: boolean): void;
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public withFormat(param0: java.lang.Boolean, param1: java.text.DateFormat): me.pushy.sdk.lib.jackson.databind.ser.std.DateTimeSerializerBase<any>;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class EnumSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdScalarSerializer<java.lang.Enum<any>> implements me.pushy.sdk.lib.jackson.databind.ser.ContextualSerializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.EnumSerializer>;
									public _values: me.pushy.sdk.lib.jackson.databind.util.EnumValues;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor();
									public static construct(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param2: me.pushy.sdk.lib.jackson.databind.BeanDescription, param3: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value): me.pushy.sdk.lib.jackson.databind.ser.std.EnumSerializer;
									public _serializeAsIndex(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): boolean;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public static _isShapeWrittenUsingIndex(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value, param2: boolean, param3: java.lang.Boolean): java.lang.Boolean;
									public serialize(param0: java.lang.Enum<any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.util.EnumValues, param1: java.lang.Boolean);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public getEnumValues(): me.pushy.sdk.lib.jackson.databind.util.EnumValues;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class EnumSetSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<java.util.EnumSet<any>> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.EnumSetSerializer>;
									public _withValueTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): me.pushy.sdk.lib.jackson.databind.ser.std.EnumSetSerializer;
									public isEmpty(param0: any): boolean;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public serialize(param0: java.util.EnumSet<any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: boolean, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.BeanProperty, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: java.lang.Class<any>);
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: java.lang.Boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.EnumSetSerializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: java.lang.Boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public hasSingleElement(param0: any): boolean;
									public serializeContents(param0: java.util.EnumSet<any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: boolean, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.ser.std.EnumSetSerializer;
									public _withValueTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>;
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.util.EnumSet<any>): boolean;
									public hasSingleElement(param0: java.util.EnumSet<any>): boolean;
									public serializeContents(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class FileSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdScalarSerializer<java.io.File> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.FileSerializer>;
									public constructor();
									public serialize(param0: java.io.File, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class InetAddressSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdScalarSerializer<java.net.InetAddress> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.InetAddressSerializer>;
									public constructor();
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public serializeWithType(param0: java.net.InetAddress, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public constructor(param0: java.lang.Class<any>);
									public serialize(param0: java.net.InetAddress, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class InetSocketAddressSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdScalarSerializer<java.net.InetSocketAddress> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.InetSocketAddressSerializer>;
									public constructor();
									public serialize(param0: java.net.InetSocketAddress, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public serializeWithType(param0: java.net.InetSocketAddress, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class IterableSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<java.lang.Iterable<any>> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.IterableSerializer>;
									public isEmpty(param0: any): boolean;
									public hasSingleElement(param0: java.lang.Iterable<any>): boolean;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: boolean, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer);
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: boolean, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.BeanProperty, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: java.lang.Class<any>);
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.Iterable<any>): boolean;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serializeContents(param0: java.lang.Iterable<any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>;
									public serialize(param0: java.lang.Iterable<any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: java.lang.Boolean);
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.ser.std.IterableSerializer;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.IterableSerializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: java.lang.Boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public hasSingleElement(param0: any): boolean;
									public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: boolean, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public _withValueTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>;
									public serializeContents(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class JsonValueSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.JsonValueSerializer>;
									public _accessor: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
									public _valueSerializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public _property: me.pushy.sdk.lib.jackson.databind.BeanProperty;
									public _forceTypeInformation: boolean;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public _acceptJsonFormatVisitorForEnum(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: java.lang.Class<any>): boolean;
									public constructor();
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public toString(): string;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public isNaturalTypeWithStdHandling(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): boolean;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param2: boolean): me.pushy.sdk.lib.jackson.databind.ser.std.JsonValueSerializer;
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.JsonValueSerializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
								export module JsonValueSerializer {
									export class TypeSerializerRerouter extends me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.JsonValueSerializer.TypeSerializerRerouter>;
										public _typeSerializer: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
										public _forObject: any;
										public writeTypePrefixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
										public writeTypePrefixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: java.lang.Class<any>): void;
										public writeCustomTypePrefixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
										public writeTypeSuffixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
										public getTypeIdResolver(): me.pushy.sdk.lib.jackson.databind.jsontype.TypeIdResolver;
										public writeTypeSuffixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
										public constructor();
										public getTypeInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonTypeInfo.As;
										public writeTypeSuffixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
										public writeTypePrefixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: java.lang.Class<any>): void;
										public writeCustomTypeSuffixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
										public writeCustomTypePrefixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
										public writeCustomTypeSuffixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
										public getPropertyName(): string;
										public forProperty(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
										public writeTypePrefixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param1: any);
										public writeTypePrefixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: java.lang.Class<any>): void;
										public writeTypePrefixForScalar(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
										public writeCustomTypePrefixForArray(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
										public writeCustomTypeSuffixForObject(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: string): void;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class MapProperty extends me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.MapProperty>;
									public _typeSerializer: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
									public _property: me.pushy.sdk.lib.jackson.databind.BeanProperty;
									public _key: any;
									public _keySerializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public _valueSerializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public isVirtual(): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata);
									public findAliases(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): java.util.List<me.pushy.sdk.lib.jackson.databind.PropertyName>;
									public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public serializeAsOmittedField(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.node.ObjectNode, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
									public getContextAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public reset(param0: any, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): void;
									public serializeAsPlaceholder(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public serializeAsElement(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition);
									public getMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
									public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
									public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public getName(): string;
									public findPropertyInclusion(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
									public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
									public findPropertyFormat(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public isRequired(): boolean;
									public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.introspect.ConcreteBeanPropertyBase);
									public depositSchemaProperty(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.PropertyWriter);
									public serializeAsField(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class MapSerializer extends me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<java.util.Map<any,any>> implements me.pushy.sdk.lib.jackson.databind.ser.ContextualSerializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.MapSerializer>;
									public static UNSPECIFIED_TYPE: me.pushy.sdk.lib.jackson.databind.JavaType;
									public static MARKER_FOR_EMPTY: any;
									public _property: me.pushy.sdk.lib.jackson.databind.BeanProperty;
									public _valueTypeIsStatic: boolean;
									public _keyType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public _valueType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public _keySerializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public _valueSerializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public _valueTypeSerializer: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
									public _dynamicValueSerializers: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap;
									public _ignoredEntries: java.util.Set<string>;
									public _filterId: any;
									public _suppressableValue: any;
									public _suppressNulls: boolean;
									public _sortKeys: boolean;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public isEmpty(param0: any): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.MapSerializer, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: any);
									public serializeFilteredFields(param0: java.util.Map<any,any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.ser.PropertyFilter, param4: any): void;
									public _orderEntries(param0: java.util.Map<any,any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): java.util.Map<any,any>;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public _ensureOverride(): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: java.lang.Class<any>);
									public serializeOptionalFields(param0: java.util.Map<any,any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: any): void;
									public serializeTypedFields(param0: java.util.Map<any,any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: any): void;
									public _ensureOverride(param0: string): void;
									public withFilterId(param0: any): me.pushy.sdk.lib.jackson.databind.ser.std.MapSerializer;
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public _writeNullKeyedEntry(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: any): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: java.util.Set<string>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: boolean, param4: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param6: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.MapSerializer, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: any, param3: boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.MapSerializer, param1: any, param2: boolean);
									public _withValueTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): me.pushy.sdk.lib.jackson.databind.ser.std.MapSerializer;
									public constructor();
									public withFilterId(param0: any): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public serialize(param0: java.util.Map<any,any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public hasSingleElement(param0: java.util.Map<any,any>): boolean;
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.util.Map<any,any>): boolean;
									public _findAndAddDynamic(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public withContentInclusion(param0: any): me.pushy.sdk.lib.jackson.databind.ser.std.MapSerializer;
									public serializeFields(param0: java.util.Map<any,any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: java.util.Set<string>, param4: boolean): me.pushy.sdk.lib.jackson.databind.ser.std.MapSerializer;
									public static construct(param0: native.Array<string>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: boolean, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param6: any): me.pushy.sdk.lib.jackson.databind.ser.std.MapSerializer;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public hasSingleElement(param0: any): boolean;
									public _findAndAddDynamic(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public getContentSerializer(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public getKeySerializer(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public serializeFieldsUsing(param0: java.util.Map<any,any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): void;
									public _withValueTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>;
									public withContentInclusion(param0: any, param1: boolean): me.pushy.sdk.lib.jackson.databind.ser.std.MapSerializer;
									public getContentType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public serializeWithType(param0: java.util.Map<any,any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.MapSerializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: java.util.Set<string>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
									public _hasNullKey(param0: java.util.Map<any,any>): boolean;
									public static construct(param0: java.util.Set<string>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: boolean, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param4: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param5: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param6: any): me.pushy.sdk.lib.jackson.databind.ser.std.MapSerializer;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export abstract class NonTypedScalarSerializerBase<T>  extends me.pushy.sdk.lib.jackson.databind.ser.std.StdScalarSerializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.NonTypedScalarSerializerBase<any>>;
									public constructor();
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class NullSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.NullSerializer>;
									public static instance: me.pushy.sdk.lib.jackson.databind.ser.std.NullSerializer;
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class NumberSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdScalarSerializer<java.lang.Number> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.NumberSerializer>;
									public static instance: me.pushy.sdk.lib.jackson.databind.ser.std.NumberSerializer;
									public _isInt: boolean;
									public constructor();
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public serialize(param0: java.lang.Number, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class NumberSerializers {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.NumberSerializers>;
									public constructor();
									public static addAll(param0: java.util.Map<string,me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>>): void;
								}
								export module NumberSerializers {
									export abstract class Base<T>  extends me.pushy.sdk.lib.jackson.databind.ser.std.StdScalarSerializer<any> implements me.pushy.sdk.lib.jackson.databind.ser.ContextualSerializer  {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.NumberSerializers.Base<any>>;
										public _numberType: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
										public _schemaType: string;
										public _isInt: boolean;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor();
										public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType, param2: string);
										public constructor(param0: java.lang.Class<any>);
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public constructor(param0: java.lang.Class<any>, param1: boolean);
									}
									export class DoubleSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.NumberSerializers.Base<any> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.NumberSerializers.DoubleSerializer>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType, param2: string);
										public constructor();
										public constructor(param0: java.lang.Class<any>);
										public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
										public constructor(param0: java.lang.Class<any>, param1: boolean);
									}
									export class FloatSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.NumberSerializers.Base<any> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.NumberSerializers.FloatSerializer>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType, param2: string);
										public constructor();
										public constructor(param0: java.lang.Class<any>);
										public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public constructor(param0: java.lang.Class<any>, param1: boolean);
									}
									export class IntLikeSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.NumberSerializers.Base<any> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType, param2: string);
										public constructor();
										public constructor(param0: java.lang.Class<any>);
										public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public constructor(param0: java.lang.Class<any>, param1: boolean);
									}
									export class IntegerSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.NumberSerializers.Base<any> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.NumberSerializers.IntegerSerializer>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType, param2: string);
										public constructor();
										public constructor(param0: java.lang.Class<any>);
										public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
										public constructor(param0: java.lang.Class<any>, param1: boolean);
									}
									export class LongSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.NumberSerializers.Base<any> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.NumberSerializers.LongSerializer>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType, param2: string);
										public constructor();
										public constructor(param0: java.lang.Class<any>);
										public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public constructor(param0: java.lang.Class<any>, param1: boolean);
									}
									export class ShortSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.NumberSerializers.Base<any> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.NumberSerializers.ShortSerializer>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType, param2: string);
										public constructor();
										public constructor(param0: java.lang.Class<any>);
										public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public constructor(param0: java.lang.Class<any>, param1: boolean);
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class ObjectArraySerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<native.Array<any>> implements me.pushy.sdk.lib.jackson.databind.ser.ContextualSerializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.ObjectArraySerializer>;
									public _staticTyping: boolean;
									public _elementType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public _valueTypeSerializer: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
									public _elementSerializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public _dynamicSerializers: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public isEmpty(param0: any): boolean;
									public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public serializeTypedContents(param0: native.Array<any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public _withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: native.Array<any>): boolean;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public hasSingleElement(param0: native.Array<any>): boolean;
									public constructor(param0: java.lang.Class<any>);
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
									public serialize(param0: native.Array<any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Boolean);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: boolean, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ObjectArraySerializer, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer);
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ObjectArraySerializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: java.lang.Boolean);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									public _findAndAddDynamic(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public hasSingleElement(param0: any): boolean;
									public _findAndAddDynamic(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public getContentSerializer(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public serializeContents(param0: native.Array<any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>);
									public _withValueTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>;
									public getContentType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.ser.std.ObjectArraySerializer;
									public serializeContents(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public serializeContentsUsing(param0: native.Array<any>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class RawSerializer<T>  extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.RawSerializer<any>>;
									public constructor();
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export abstract class ReferenceTypeSerializer<T>  extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any> implements me.pushy.sdk.lib.jackson.databind.ser.ContextualSerializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.ReferenceTypeSerializer<any>>;
									public static MARKER_FOR_EMPTY: any;
									public _referredType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public _property: me.pushy.sdk.lib.jackson.databind.BeanProperty;
									public _valueTypeSerializer: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer;
									public _valueSerializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public _unwrapper: me.pushy.sdk.lib.jackson.databind.util.NameTransformer;
									public _dynamicSerializers: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap;
									public _suppressableValue: any;
									public _suppressNulls: boolean;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public isEmpty(param0: any): boolean;
									public constructor();
									public isUnwrappingSerializer(): boolean;
									public _getReferenced(param0: any): any;
									public getReferredType(): me.pushy.sdk.lib.jackson.databind.JavaType;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public _getReferencedIfPresent(param0: any): any;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.type.ReferenceType, param1: boolean, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public constructor(param0: java.lang.Class<any>);
									public withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.ser.std.ReferenceTypeSerializer<any>;
									public withContentInclusion(param0: any, param1: boolean): me.pushy.sdk.lib.jackson.databind.ser.std.ReferenceTypeSerializer<any>;
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public _useStatic(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.JavaType): boolean;
									public unwrappingSerializer(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ReferenceTypeSerializer<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer, param3: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param4: me.pushy.sdk.lib.jackson.databind.util.NameTransformer, param5: any, param6: boolean);
									public _isValuePresent(param0: any): boolean;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class SerializableSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<me.pushy.sdk.lib.jackson.databind.JsonSerializable> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.SerializableSerializer>;
									public static instance: me.pushy.sdk.lib.jackson.databind.ser.std.SerializableSerializer;
									public isEmpty(param0: any): boolean;
									public constructor();
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.JsonSerializable): boolean;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public serializeWithType(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializable, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
									public serialize(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializable, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class SqlDateSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.DateTimeSerializerBase<java.sql.Date> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.SqlDateSerializer>;
									public _timestamp(param0: any): number;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor();
									public serialize(param0: java.sql.Date, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: java.lang.Class<any>, param1: java.lang.Boolean, param2: java.text.DateFormat);
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: java.lang.Boolean, param1: java.text.DateFormat);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public withFormat(param0: java.lang.Boolean, param1: java.text.DateFormat): me.pushy.sdk.lib.jackson.databind.ser.std.SqlDateSerializer;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public _timestamp(param0: java.sql.Date): number;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public withFormat(param0: java.lang.Boolean, param1: java.text.DateFormat): me.pushy.sdk.lib.jackson.databind.ser.std.DateTimeSerializerBase<any>;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class SqlTimeSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdScalarSerializer<java.sql.Time> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.SqlTimeSerializer>;
									public constructor();
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public serialize(param0: java.sql.Time, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export abstract class StaticListSerializerBase<T>  extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any> implements me.pushy.sdk.lib.jackson.databind.ser.ContextualSerializer  {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StaticListSerializerBase<any>>;
									public _unwrapSingle: java.lang.Boolean;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public isEmpty(param0: any): boolean;
									public constructor();
									public _withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public acceptContentVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor): void;
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public contentSchema(): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StaticListSerializerBase<any>, param1: java.lang.Boolean);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class StdArraySerializers {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers>;
									public static _arraySerializers: java.util.HashMap<string,me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>>;
									public constructor();
									public static findStandardImpl(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								}
								export module StdArraySerializers {
									export class BooleanArraySerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<native.Array<boolean>> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer>;
										public isEmpty(param0: any): boolean;
										public getContentSerializer(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: native.Array<boolean>): boolean;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>);
										public constructor();
										public constructor(param0: java.lang.Class<any>, param1: boolean);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public serializeContents(param0: native.Array<boolean>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public getContentType(): me.pushy.sdk.lib.jackson.databind.JavaType;
										public hasSingleElement(param0: native.Array<boolean>): boolean;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Boolean);
										public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
										public _withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>);
										public hasSingleElement(param0: any): boolean;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public serializeContents(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Boolean);
										public serialize(param0: native.Array<boolean>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor(param0: java.lang.Class<any>);
										public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public _withValueTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>;
										public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									}
									export class CharArraySerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<native.Array<string>> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer>;
										public serializeWithType(param0: native.Array<string>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
										public isEmpty(param0: any): boolean;
										public serialize(param0: native.Array<string>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor();
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public constructor(param0: java.lang.Class<any>, param1: boolean);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: native.Array<string>): boolean;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor(param0: java.lang.Class<any>);
										public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
										public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									}
									export class DoubleArraySerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<native.Array<number>> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer>;
										public hasSingleElement(param0: native.Array<number>): boolean;
										public isEmpty(param0: any): boolean;
										public getContentSerializer(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>);
										public constructor();
										public constructor(param0: java.lang.Class<any>, param1: boolean);
										public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: native.Array<number>): boolean;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public serializeContents(param0: native.Array<number>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public getContentType(): me.pushy.sdk.lib.jackson.databind.JavaType;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Boolean);
										public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
										public _withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>);
										public hasSingleElement(param0: any): boolean;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public serializeContents(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Boolean);
										public serialize(param0: native.Array<number>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor(param0: java.lang.Class<any>);
										public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public _withValueTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>;
										public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									}
									export class FloatArraySerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.TypedPrimitiveArraySerializer<native.Array<number>> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer>;
										public hasSingleElement(param0: native.Array<number>): boolean;
										public isEmpty(param0: any): boolean;
										public getContentSerializer(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>);
										public constructor();
										public constructor(param0: java.lang.Class<any>, param1: boolean);
										public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: native.Array<number>): boolean;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public serializeContents(param0: native.Array<number>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public getContentType(): me.pushy.sdk.lib.jackson.databind.JavaType;
										public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
										public _withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.TypedPrimitiveArraySerializer<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Boolean);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>);
										public hasSingleElement(param0: any): boolean;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public serializeContents(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Boolean);
										public serialize(param0: native.Array<number>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Boolean);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor(param0: java.lang.Class<any>);
										public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									}
									export class IntArraySerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<native.Array<number>> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer>;
										public hasSingleElement(param0: native.Array<number>): boolean;
										public isEmpty(param0: any): boolean;
										public getContentSerializer(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>);
										public constructor();
										public constructor(param0: java.lang.Class<any>, param1: boolean);
										public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: native.Array<number>): boolean;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public serializeContents(param0: native.Array<number>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public getContentType(): me.pushy.sdk.lib.jackson.databind.JavaType;
										public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
										public _withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>);
										public hasSingleElement(param0: any): boolean;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public serializeContents(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Boolean);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Boolean);
										public serialize(param0: native.Array<number>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor(param0: java.lang.Class<any>);
										public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public _withValueTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>;
										public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									}
									export class LongArraySerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.TypedPrimitiveArraySerializer<native.Array<number>> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer>;
										public hasSingleElement(param0: native.Array<number>): boolean;
										public isEmpty(param0: any): boolean;
										public getContentSerializer(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>);
										public constructor();
										public constructor(param0: java.lang.Class<any>, param1: boolean);
										public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: native.Array<number>): boolean;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public serializeContents(param0: native.Array<number>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public getContentType(): me.pushy.sdk.lib.jackson.databind.JavaType;
										public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
										public _withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.TypedPrimitiveArraySerializer<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Boolean);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Boolean);
										public hasSingleElement(param0: any): boolean;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public serializeContents(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Boolean);
										public serialize(param0: native.Array<number>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor(param0: java.lang.Class<any>);
										public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									}
									export class ShortArraySerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.TypedPrimitiveArraySerializer<native.Array<number>> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer>;
										public hasSingleElement(param0: native.Array<number>): boolean;
										public isEmpty(param0: any): boolean;
										public getContentSerializer(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>);
										public constructor();
										public constructor(param0: java.lang.Class<any>, param1: boolean);
										public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: native.Array<number>): boolean;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Boolean);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public serializeContents(param0: native.Array<number>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public getContentType(): me.pushy.sdk.lib.jackson.databind.JavaType;
										public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
										public _withResolved(param0: me.pushy.sdk.lib.jackson.databind.BeanProperty, param1: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.TypedPrimitiveArraySerializer<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Boolean);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>);
										public hasSingleElement(param0: any): boolean;
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public serializeContents(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Boolean);
										public serialize(param0: native.Array<number>, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor(param0: java.lang.Class<any>);
										public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									}
									export abstract class TypedPrimitiveArraySerializer<T>  extends me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.TypedPrimitiveArraySerializer<any>>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.TypedPrimitiveArraySerializer<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Boolean);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>);
										public constructor();
										public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Boolean);
										public constructor(param0: java.lang.Class<any>, param1: boolean);
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor(param0: java.lang.Class<any>);
										public _withValueTypeSerializer(param0: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer<any>;
										public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty);
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class StdDelegatingSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdDelegatingSerializer>;
									public _converter: me.pushy.sdk.lib.jackson.databind.util.Converter<any,any>;
									public _delegateType: me.pushy.sdk.lib.jackson.databind.JavaType;
									public _delegateSerializer: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public createContextual(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public isEmpty(param0: any): boolean;
									public constructor();
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.util.Converter<any,any>);
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: java.lang.Class, param1: me.pushy.sdk.lib.jackson.databind.util.Converter<any,any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.util.Converter<any,any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public _findSerializer(param0: any, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public convertValue(param0: any): any;
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public getDelegatee(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public withDelegate(param0: me.pushy.sdk.lib.jackson.databind.util.Converter<any,any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.ser.std.StdDelegatingSerializer;
									public resolve(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getConverter(): me.pushy.sdk.lib.jackson.databind.util.Converter<any,any>;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class StdJdkSerializers {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdJdkSerializers>;
									public constructor();
									public static all(): java.util.Collection<java.util.Map.Entry<java.lang.Class<any>,any>>;
								}
								export module StdJdkSerializers {
									export class AtomicBooleanSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdScalarSerializer<java.util.concurrent.atomic.AtomicBoolean> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdJdkSerializers.AtomicBooleanSerializer>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public serialize(param0: java.util.concurrent.atomic.AtomicBoolean, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor();
										public constructor(param0: java.lang.Class<any>);
										public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public constructor(param0: java.lang.Class<any>, param1: boolean);
									}
									export class AtomicIntegerSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdScalarSerializer<java.util.concurrent.atomic.AtomicInteger> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdJdkSerializers.AtomicIntegerSerializer>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor();
										public constructor(param0: java.lang.Class<any>);
										public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public serialize(param0: java.util.concurrent.atomic.AtomicInteger, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public constructor(param0: java.lang.Class<any>, param1: boolean);
									}
									export class AtomicLongSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdScalarSerializer<java.util.concurrent.atomic.AtomicLong> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdJdkSerializers.AtomicLongSerializer>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor();
										public serialize(param0: java.util.concurrent.atomic.AtomicLong, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public constructor(param0: java.lang.Class<any>);
										public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public constructor(param0: java.lang.Class<any>, param1: boolean);
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class StdKeySerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdKeySerializer>;
									public constructor();
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export abstract class StdKeySerializers {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdKeySerializers>;
									public static DEFAULT_KEY_SERIALIZER: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public static DEFAULT_STRING_SERIALIZER: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public constructor();
									public static getFallbackKeySerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public static getDefault(): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public static getStdKeySerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: java.lang.Class<any>, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
								}
								export module StdKeySerializers {
									export class Default extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdKeySerializers.Default>;
										public _typeId: number;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor();
										public constructor(param0: java.lang.Class<any>);
										public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public constructor(param0: java.lang.Class<any>, param1: boolean);
										public constructor(param0: number, param1: java.lang.Class<any>);
									}
									export class Dynamic extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdKeySerializers.Dynamic>;
										public _dynamicSerializers: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor();
										public constructor(param0: java.lang.Class<any>);
										public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public constructor(param0: java.lang.Class<any>, param1: boolean);
										public _findAndAddDynamic(param0: me.pushy.sdk.lib.jackson.databind.ser.impl.PropertySerializerMap, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									}
									export class EnumKeySerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdKeySerializers.EnumKeySerializer>;
										public _values: me.pushy.sdk.lib.jackson.databind.util.EnumValues;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public static construct(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.util.EnumValues): me.pushy.sdk.lib.jackson.databind.ser.std.StdKeySerializers.EnumKeySerializer;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor();
										public constructor(param0: java.lang.Class<any>);
										public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.util.EnumValues);
										public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public constructor(param0: java.lang.Class<any>, param1: boolean);
									}
									export class StringKeySerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any> {
										public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer>;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
										public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
										public constructor();
										public constructor(param0: java.lang.Class<any>);
										public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
										public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
										public constructor(param0: java.lang.Class<any>, param1: boolean);
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export abstract class StdScalarSerializer<T>  extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdScalarSerializer<any>>;
									public constructor();
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export abstract class StdSerializer<T>  extends me.pushy.sdk.lib.jackson.databind.JsonSerializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>>;
									public _handledType: java.lang.Class<any>;
									public visitStringFormat(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat): void;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public visitFloatFormat(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType): void;
									public constructor(param0: java.lang.Class<any>);
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public static _neitherNull(param0: any, param1: any): boolean;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public wrapAndThrow(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.Throwable, param2: any, param3: number): void;
									public findAnnotatedContentSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public isDefaultSerializer(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): boolean;
									public findFormatOverrides(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonFormat.Value;
									public visitIntFormat(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType, param3: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonValueFormat): void;
									public constructor();
									public handledType(): java.lang.Class<any>;
									public findConvertingContentSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public visitArrayFormat(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>, param3: me.pushy.sdk.lib.jackson.databind.JavaType): void;
									public static _nonEmpty(param0: java.util.Collection<any>): boolean;
									public findIncludeOverrides(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Class<any>): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public createSchemaNode(param0: string): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
									public wrapAndThrow(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.Throwable, param2: any, param3: string): void;
									public findContextualConvertingSerializer(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>): me.pushy.sdk.lib.jackson.databind.JsonSerializer<any>;
									public visitIntFormat(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.core.JsonParser.NumberType): void;
									public findPropertyFilter(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any, param2: any): me.pushy.sdk.lib.jackson.databind.ser.PropertyFilter;
									public visitArrayFormat(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatTypes): void;
									public createSchemaNode(param0: string, param1: boolean): me.pushy.sdk.lib.jackson.databind.node.ObjectNode;
									public findFormatFeature(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: me.pushy.sdk.lib.jackson.databind.BeanProperty, param2: java.lang.Class<any>, param3: me.pushy.sdk.lib.jackson.annotation.JsonFormat.Feature): java.lang.Boolean;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
									public visitStringFormat(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class StringSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdScalarSerializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.StringSerializer>;
									public isEmpty(param0: any): boolean;
									public constructor();
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class TimeZoneSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdScalarSerializer<java.util.TimeZone> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.TimeZoneSerializer>;
									public constructor();
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public serialize(param0: java.util.TimeZone, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public serializeWithType(param0: java.util.TimeZone, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class ToStringSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.ToStringSerializer>;
									public static instance: me.pushy.sdk.lib.jackson.databind.ser.std.ToStringSerializer;
									public isEmpty(param0: any): boolean;
									public constructor();
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class TokenBufferSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<me.pushy.sdk.lib.jackson.databind.util.TokenBuffer> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.TokenBufferSerializer>;
									public serializeWithType(param0: me.pushy.sdk.lib.jackson.databind.util.TokenBuffer, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public constructor();
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public serializeWithType(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param3: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public serialize(param0: me.pushy.sdk.lib.jackson.databind.util.TokenBuffer, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module ser {
							export module std {
								export class UUIDSerializer extends me.pushy.sdk.lib.jackson.databind.ser.std.StdScalarSerializer<java.util.UUID> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.ser.std.UUIDSerializer>;
									public isEmpty(param0: any): boolean;
									public constructor();
									public serialize(param0: any, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public serialize(param0: java.util.UUID, param1: me.pushy.sdk.lib.jackson.core.JsonGenerator, param2: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer<any>);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
									public constructor(param0: java.lang.Class<any>);
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: any): boolean;
									public constructor(param0: java.lang.Class<any>, param1: boolean);
									public getSchema(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.lang.reflect.Type, param2: boolean): me.pushy.sdk.lib.jackson.databind.JsonNode;
									public isEmpty(param0: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param1: java.util.UUID): boolean;
									public acceptJsonFormatVisitor(param0: me.pushy.sdk.lib.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, param1: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module type {
							export class ArrayType extends me.pushy.sdk.lib.jackson.databind.type.TypeBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.type.ArrayType>;
								public _componentType: me.pushy.sdk.lib.jackson.databind.JavaType;
								public _emptyArray: any;
								public getContentTypeHandler(): any;
								public toString(): string;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public isAbstract(): boolean;
								public withStaticTyping(): me.pushy.sdk.lib.jackson.databind.type.ArrayType;
								public equals(param0: any): boolean;
								public getContentType(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withContentValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withStaticTyping(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getContentType(): me.pushy.sdk.lib.jackson.core.type.ResolvedType;
								public withValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.ArrayType;
								public static construct(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: any, param3: any): me.pushy.sdk.lib.jackson.databind.type.ArrayType;
								public _narrow(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public isArrayType(): boolean;
								public withTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public hasGenericTypes(): boolean;
								public getGenericSignature(param0: java.lang.StringBuilder): java.lang.StringBuilder;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBase);
								public withValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public isConcrete(): boolean;
								public getContentValueHandler(): any;
								public constructor(param0: java.lang.Class<any>, param1: number, param2: any, param3: any, param4: boolean);
								public withContentTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withContentValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.ArrayType;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: any, param3: any, param4: any, param5: boolean);
								public getErasedSignature(): string;
								public withContentType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor();
								public getGenericSignature(): string;
								public isContainerType(): boolean;
								public hasHandlers(): boolean;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public getErasedSignature(param0: java.lang.StringBuilder): java.lang.StringBuilder;
								public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param4: number, param5: any, param6: any, param7: boolean);
								public withContentTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.ArrayType;
								public static construct(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings): me.pushy.sdk.lib.jackson.databind.type.ArrayType;
								public withTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.ArrayType;
								public refine(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module type {
							export class ClassKey extends java.lang.Object {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.type.ClassKey>;
								public toString(): string;
								public equals(param0: any): boolean;
								public constructor();
								public constructor(param0: java.lang.Class<any>);
								public compareTo(param0: me.pushy.sdk.lib.jackson.databind.type.ClassKey): number;
								public hashCode(): number;
								public reset(param0: java.lang.Class<any>): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module type {
							export class ClassStack {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.type.ClassStack>;
								public _parent: me.pushy.sdk.lib.jackson.databind.type.ClassStack;
								public _current: java.lang.Class<any>;
								public find(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.type.ClassStack;
								public toString(): string;
								public addSelfReference(param0: me.pushy.sdk.lib.jackson.databind.type.ResolvedRecursiveType): void;
								public child(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.type.ClassStack;
								public constructor(param0: java.lang.Class<any>);
								public resolveSelfReferences(param0: me.pushy.sdk.lib.jackson.databind.JavaType): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module type {
							export class CollectionLikeType extends me.pushy.sdk.lib.jackson.databind.type.TypeBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType>;
								public _elementType: me.pushy.sdk.lib.jackson.databind.JavaType;
								public getContentTypeHandler(): any;
								public toString(): string;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public buildCanonicalName(): string;
								public equals(param0: any): boolean;
								public static construct(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param4: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType;
								public withHandlersFrom(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getContentType(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withContentValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withStaticTyping(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getContentType(): me.pushy.sdk.lib.jackson.core.type.ResolvedType;
								public _narrow(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public isCollectionLikeType(): boolean;
								public isTrueCollectionType(): boolean;
								public withTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param4: me.pushy.sdk.lib.jackson.databind.JavaType, param5: any, param6: any, param7: boolean);
								public getGenericSignature(param0: java.lang.StringBuilder): java.lang.StringBuilder;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBase);
								public withValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getContentValueHandler(): any;
								public constructor(param0: java.lang.Class<any>, param1: number, param2: any, param3: any, param4: boolean);
								public static upgradeFrom(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType;
								public static construct(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType;
								public withContentTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
								public withContentValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType;
								public getErasedSignature(): string;
								public withContentType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor();
								public getGenericSignature(): string;
								public withValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType;
								public withContentTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType;
								public isContainerType(): boolean;
								public hasHandlers(): boolean;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public withStaticTyping(): me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBase, param1: me.pushy.sdk.lib.jackson.databind.JavaType);
								public withTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType;
								public getErasedSignature(param0: java.lang.StringBuilder): java.lang.StringBuilder;
								public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param4: number, param5: any, param6: any, param7: boolean);
								public refine(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module type {
							export class CollectionType extends me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.type.CollectionType>;
								public toString(): string;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public static construct(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.CollectionType;
								public static construct(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param4: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType;
								public withContentValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withStaticTyping(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public _narrow(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param4: me.pushy.sdk.lib.jackson.databind.JavaType, param5: any, param6: any, param7: boolean);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBase);
								public withValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: java.lang.Class<any>, param1: number, param2: any, param3: any, param4: boolean);
								public static construct(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType;
								public withContentTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
								public withContentValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType;
								public withContentType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor();
								public withContentValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.CollectionType;
								public withValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.CollectionType;
								public withValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType;
								public withContentTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public withStaticTyping(): me.pushy.sdk.lib.jackson.databind.type.CollectionType;
								public withTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.CollectionType;
								public withStaticTyping(): me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBase, param1: me.pushy.sdk.lib.jackson.databind.JavaType);
								public withTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType;
								public withContentTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.CollectionType;
								public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param4: number, param5: any, param6: any, param7: boolean);
								public static construct(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param4: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.CollectionType;
								public refine(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module type {
							export class MapLikeType extends me.pushy.sdk.lib.jackson.databind.type.TypeBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.type.MapLikeType>;
								public _keyType: me.pushy.sdk.lib.jackson.databind.JavaType;
								public _valueType: me.pushy.sdk.lib.jackson.databind.JavaType;
								public getContentTypeHandler(): any;
								public toString(): string;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public buildCanonicalName(): string;
								public equals(param0: any): boolean;
								public withHandlersFrom(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getContentType(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public static upgradeFrom(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public withContentValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param4: me.pushy.sdk.lib.jackson.databind.JavaType, param5: me.pushy.sdk.lib.jackson.databind.JavaType, param6: any, param7: any, param8: boolean);
								public static construct(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public withStaticTyping(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getContentType(): me.pushy.sdk.lib.jackson.core.type.ResolvedType;
								public _narrow(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withKeyValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public getGenericSignature(param0: java.lang.StringBuilder): java.lang.StringBuilder;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBase);
								public withKeyTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public withValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getKeyType(): me.pushy.sdk.lib.jackson.core.type.ResolvedType;
								public isTrueMapType(): boolean;
								public withContentValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public getContentValueHandler(): any;
								public constructor(param0: java.lang.Class<any>, param1: number, param2: any, param3: any, param4: boolean);
								public withContentTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
								public getErasedSignature(): string;
								public withContentType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor();
								public getGenericSignature(): string;
								public getKeyType(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withContentTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public isContainerType(): boolean;
								public hasHandlers(): boolean;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBase, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.JavaType);
								public withTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public getErasedSignature(param0: java.lang.StringBuilder): java.lang.StringBuilder;
								public isMapLikeType(): boolean;
								public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param4: number, param5: any, param6: any, param7: boolean);
								public withStaticTyping(): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public withValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public withKeyType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public refine(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module type {
							export class MapType extends me.pushy.sdk.lib.jackson.databind.type.MapLikeType {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.type.MapType>;
								public toString(): string;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public withContentTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.MapType;
								public withValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.MapType;
								public withContentValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param4: me.pushy.sdk.lib.jackson.databind.JavaType, param5: me.pushy.sdk.lib.jackson.databind.JavaType, param6: any, param7: any, param8: boolean);
								public static construct(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public withStaticTyping(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public _narrow(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withKeyValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBase);
								public withTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.MapType;
								public withKeyTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public static construct(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param4: me.pushy.sdk.lib.jackson.databind.JavaType, param5: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.MapType;
								public withValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withContentValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public constructor(param0: java.lang.Class<any>, param1: number, param2: any, param3: any, param4: boolean);
								public withKeyValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.MapType;
								public withContentTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
								public withContentValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.MapType;
								public withContentType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor();
								public static construct(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.MapType;
								public withContentTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBase, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.JavaType);
								public withTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public withStaticTyping(): me.pushy.sdk.lib.jackson.databind.type.MapType;
								public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param4: number, param5: any, param6: any, param7: boolean);
								public withStaticTyping(): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public withValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public withKeyType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.MapType;
								public withKeyTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.MapType;
								public withKeyType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public refine(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module type {
							export class ReferenceType extends me.pushy.sdk.lib.jackson.databind.type.SimpleType {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.type.ReferenceType>;
								public _referencedType: me.pushy.sdk.lib.jackson.databind.JavaType;
								public _anchorType: me.pushy.sdk.lib.jackson.databind.JavaType;
								public toString(): string;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public buildCanonicalName(): string;
								public isAnchorType(): boolean;
								public equals(param0: any): boolean;
								public getReferencedType(): me.pushy.sdk.lib.jackson.core.type.ResolvedType;
								public getContentType(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.ReferenceType;
								public withTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.SimpleType;
								public withContentValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param4: me.pushy.sdk.lib.jackson.databind.JavaType, param5: me.pushy.sdk.lib.jackson.databind.JavaType, param6: any, param7: any, param8: boolean);
								public withStaticTyping(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getContentType(): me.pushy.sdk.lib.jackson.core.type.ResolvedType;
								public static construct(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param4: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.ReferenceType;
								public _narrow(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public hasContentType(): boolean;
								public withValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.SimpleType;
								public withTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withStaticTyping(): me.pushy.sdk.lib.jackson.databind.type.SimpleType;
								public getGenericSignature(param0: java.lang.StringBuilder): java.lang.StringBuilder;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBase);
								public constructor(param0: java.lang.Class<any>);
								public withValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: java.lang.Class<any>, param1: number, param2: any, param3: any, param4: boolean);
								public static upgradeFrom(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.ReferenceType;
								public withContentTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
								public isReferenceType(): boolean;
								public getErasedSignature(): string;
								public withContentType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor();
								public getAnchorType(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getGenericSignature(): string;
								public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param4: any, param5: any, param6: boolean);
								public withContentValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.SimpleType;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public withStaticTyping(): me.pushy.sdk.lib.jackson.databind.type.ReferenceType;
								public withValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.ReferenceType;
								public withContentTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.ReferenceType;
								public withContentValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.ReferenceType;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBase, param1: me.pushy.sdk.lib.jackson.databind.JavaType);
								public static construct(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.ReferenceType;
								public getErasedSignature(param0: java.lang.StringBuilder): java.lang.StringBuilder;
								public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param4: number, param5: any, param6: any, param7: boolean);
								public getReferencedType(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>);
								public static construct(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.type.SimpleType;
								public refine(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module type {
							export class ResolvedRecursiveType extends me.pushy.sdk.lib.jackson.databind.type.TypeBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.type.ResolvedRecursiveType>;
								public _referencedType: me.pushy.sdk.lib.jackson.databind.JavaType;
								public toString(): string;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public equals(param0: any): boolean;
								public withContentValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withStaticTyping(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public setReference(param0: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								public _narrow(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getGenericSignature(param0: java.lang.StringBuilder): java.lang.StringBuilder;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBase);
								public withValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: java.lang.Class<any>, param1: number, param2: any, param3: any, param4: boolean);
								public getSelfReferencedType(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withContentTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
								public getErasedSignature(): string;
								public withContentType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor();
								public getGenericSignature(): string;
								public isContainerType(): boolean;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings);
								public getErasedSignature(param0: java.lang.StringBuilder): java.lang.StringBuilder;
								public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param4: number, param5: any, param6: any, param7: boolean);
								public refine(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module type {
							export class SimpleType extends me.pushy.sdk.lib.jackson.databind.type.TypeBase {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.type.SimpleType>;
								public toString(): string;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public buildCanonicalName(): string;
								public equals(param0: any): boolean;
								public withTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.SimpleType;
								public withContentValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withStaticTyping(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public _narrow(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public hasContentType(): boolean;
								public withValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.SimpleType;
								public withTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withStaticTyping(): me.pushy.sdk.lib.jackson.databind.type.SimpleType;
								public getGenericSignature(param0: java.lang.StringBuilder): java.lang.StringBuilder;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBase);
								public constructor(param0: java.lang.Class<any>);
								public withValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: java.lang.Class<any>, param1: number, param2: any, param3: any, param4: boolean);
								public withContentTypeHandler(param0: any): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
								public getErasedSignature(): string;
								public withContentType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor();
								public getGenericSignature(): string;
								public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param4: any, param5: any, param6: boolean);
								public withContentValueHandler(param0: any): me.pushy.sdk.lib.jackson.databind.type.SimpleType;
								public isContainerType(): boolean;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public static constructUnsafe(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.type.SimpleType;
								public getErasedSignature(param0: java.lang.StringBuilder): java.lang.StringBuilder;
								public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param4: number, param5: any, param6: any, param7: boolean);
								public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>);
								public static construct(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.type.SimpleType;
								public refine(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module type {
							export abstract class TypeBase extends me.pushy.sdk.lib.jackson.databind.JavaType implements me.pushy.sdk.lib.jackson.databind.JsonSerializable {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.type.TypeBase>;
								public _superClass: me.pushy.sdk.lib.jackson.databind.JavaType;
								public _superInterfaces: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>;
								public _bindings: me.pushy.sdk.lib.jackson.databind.type.TypeBindings;
								public containedType(param0: number): me.pushy.sdk.lib.jackson.databind.JavaType;
								public findTypeParameters(param0: java.lang.Class<any>): native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType);
								public toCanonical(): string;
								public buildCanonicalName(): string;
								public static _bogusSuperClass(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getErasedSignature(): string;
								public constructor();
								public getInterfaces(): java.util.List<me.pushy.sdk.lib.jackson.databind.JavaType>;
								public getGenericSignature(): string;
								public getBindings(): me.pushy.sdk.lib.jackson.databind.type.TypeBindings;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public findSuperType(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public static _classSignature(param0: java.lang.Class<any>, param1: java.lang.StringBuilder, param2: boolean): java.lang.StringBuilder;
								public containedTypeName(param0: number): string;
								public getSuperClass(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getErasedSignature(param0: java.lang.StringBuilder): java.lang.StringBuilder;
								public getGenericSignature(param0: java.lang.StringBuilder): java.lang.StringBuilder;
								public constructor(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param4: number, param5: any, param6: any, param7: boolean);
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.type.TypeBase);
								public containedType(param0: number): me.pushy.sdk.lib.jackson.core.type.ResolvedType;
								public containedTypeCount(): number;
								public constructor(param0: java.lang.Class<any>, param1: number, param2: any, param3: any, param4: boolean);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module type {
							export class TypeBindings {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.type.TypeBindings>;
								public getTypeParameters(): java.util.List<me.pushy.sdk.lib.jackson.databind.JavaType>;
								public toString(): string;
								public static emptyBindings(): me.pushy.sdk.lib.jackson.databind.type.TypeBindings;
								public size(): number;
								public static create(param0: java.lang.Class<any>, param1: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>): me.pushy.sdk.lib.jackson.databind.type.TypeBindings;
								public equals(param0: any): boolean;
								public static create(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.TypeBindings;
								public findBoundType(param0: string): me.pushy.sdk.lib.jackson.databind.JavaType;
								public static create(param0: java.lang.Class<any>, param1: java.util.List<me.pushy.sdk.lib.jackson.databind.JavaType>): me.pushy.sdk.lib.jackson.databind.type.TypeBindings;
								public asKey(param0: java.lang.Class<any>): any;
								public getBoundType(param0: number): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getBoundName(param0: number): string;
								public hasUnbound(param0: string): boolean;
								public isEmpty(): boolean;
								public static createIfNeeded(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.TypeBindings;
								public withUnboundVariable(param0: string): me.pushy.sdk.lib.jackson.databind.type.TypeBindings;
								public readResolve(): any;
								public static create(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.TypeBindings;
								public typeParameterArray(): native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>;
								public hashCode(): number;
								public static createIfNeeded(param0: java.lang.Class<any>, param1: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>): me.pushy.sdk.lib.jackson.databind.type.TypeBindings;
							}
							export module TypeBindings {
								export class AsKey {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.type.TypeBindings.AsKey>;
									public hashCode(): number;
									public constructor(param0: java.lang.Class<any>, param1: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>, param2: number);
									public equals(param0: any): boolean;
									public toString(): string;
								}
								export class TypeParamStash {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.type.TypeBindings.TypeParamStash>;
									public static paramsFor1(param0: java.lang.Class<any>): native.Array<java.lang.reflect.TypeVariable<any>>;
									public static paramsFor2(param0: java.lang.Class<any>): native.Array<java.lang.reflect.TypeVariable<any>>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module type {
							export class TypeFactory {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.type.TypeFactory>;
								public static instance: me.pushy.sdk.lib.jackson.databind.type.TypeFactory;
								public static EMPTY_BINDINGS: me.pushy.sdk.lib.jackson.databind.type.TypeBindings;
								public static CORE_TYPE_BOOL: me.pushy.sdk.lib.jackson.databind.type.SimpleType;
								public static CORE_TYPE_INT: me.pushy.sdk.lib.jackson.databind.type.SimpleType;
								public static CORE_TYPE_LONG: me.pushy.sdk.lib.jackson.databind.type.SimpleType;
								public static CORE_TYPE_STRING: me.pushy.sdk.lib.jackson.databind.type.SimpleType;
								public static CORE_TYPE_OBJECT: me.pushy.sdk.lib.jackson.databind.type.SimpleType;
								public static CORE_TYPE_COMPARABLE: me.pushy.sdk.lib.jackson.databind.type.SimpleType;
								public static CORE_TYPE_ENUM: me.pushy.sdk.lib.jackson.databind.type.SimpleType;
								public static CORE_TYPE_CLASS: me.pushy.sdk.lib.jackson.databind.type.SimpleType;
								public _typeCache: me.pushy.sdk.lib.jackson.databind.util.LRUMap<any,me.pushy.sdk.lib.jackson.databind.JavaType>;
								public _modifiers: native.Array<me.pushy.sdk.lib.jackson.databind.type.TypeModifier>;
								public _parser: me.pushy.sdk.lib.jackson.databind.type.TypeParser;
								public _classLoader: java.lang.ClassLoader;
								public constructParametricType(param0: java.lang.Class<any>, param1: native.Array<java.lang.Class<any>>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public _fromAny(param0: me.pushy.sdk.lib.jackson.databind.type.ClassStack, param1: java.lang.reflect.Type, param2: me.pushy.sdk.lib.jackson.databind.type.TypeBindings): me.pushy.sdk.lib.jackson.databind.JavaType;
								public withClassLoader(param0: java.lang.ClassLoader): me.pushy.sdk.lib.jackson.databind.type.TypeFactory;
								public constructSpecializedType(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructParametrizedType(param0: java.lang.Class<any>, param1: java.lang.Class<any>, param2: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructType(param0: java.lang.reflect.Type): me.pushy.sdk.lib.jackson.databind.JavaType;
								public _fromWildcard(param0: me.pushy.sdk.lib.jackson.databind.type.ClassStack, param1: java.lang.reflect.WildcardType, param2: me.pushy.sdk.lib.jackson.databind.type.TypeBindings): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructRawCollectionType(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.type.CollectionType;
								public constructSimpleType(param0: java.lang.Class<any>, param1: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructRawMapType(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.type.MapType;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.util.LRUMap<any,me.pushy.sdk.lib.jackson.databind.JavaType>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeParser, param2: native.Array<me.pushy.sdk.lib.jackson.databind.type.TypeModifier>, param3: java.lang.ClassLoader);
								public constructSimpleType(param0: java.lang.Class<any>, param1: java.lang.Class<any>, param2: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructCollectionLikeType(param0: java.lang.Class<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType;
								public constructRawMapLikeType(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public getClassLoader(): java.lang.ClassLoader;
								public _constructSimple(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructCollectionType(param0: java.lang.Class<any>, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.type.CollectionType;
								public constructArrayType(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.type.ArrayType;
								public constructArrayType(param0: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.ArrayType;
								public withModifier(param0: me.pushy.sdk.lib.jackson.databind.type.TypeModifier): me.pushy.sdk.lib.jackson.databind.type.TypeFactory;
								public classForName(param0: string, param1: boolean, param2: java.lang.ClassLoader): java.lang.Class<any>;
								public clearCache(): void;
								public withCache(param0: me.pushy.sdk.lib.jackson.databind.util.LRUMap<any,me.pushy.sdk.lib.jackson.databind.JavaType>): me.pushy.sdk.lib.jackson.databind.type.TypeFactory;
								public constructCollectionType(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.CollectionType;
								public constructFromCanonical(param0: string): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructParametrizedType(param0: java.lang.Class<any>, param1: java.lang.Class<any>, param2: native.Array<java.lang.Class<any>>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructMapType(param0: java.lang.Class<any>, param1: java.lang.Class<any>, param2: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.type.MapType;
								public moreSpecificType(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public _fromVariable(param0: me.pushy.sdk.lib.jackson.databind.type.ClassStack, param1: java.lang.reflect.TypeVariable<any>, param2: me.pushy.sdk.lib.jackson.databind.type.TypeBindings): me.pushy.sdk.lib.jackson.databind.JavaType;
								public findTypeParameters(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: java.lang.Class<any>): native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>;
								public findTypeParameters(param0: java.lang.Class<any>, param1: java.lang.Class<any>): native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>;
								public _fromArrayType(param0: me.pushy.sdk.lib.jackson.databind.type.ClassStack, param1: java.lang.reflect.GenericArrayType, param2: me.pushy.sdk.lib.jackson.databind.type.TypeBindings): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructMapType(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.MapType;
								public _resolveSuperClass(param0: me.pushy.sdk.lib.jackson.databind.type.ClassStack, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.type.TypeBindings): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructType(param0: java.lang.reflect.Type, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructCollectionLikeType(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType;
								public constructMapLikeType(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType, param2: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public uncheckedSimpleType(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructGeneralizedType(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public _fromWellKnownClass(param0: me.pushy.sdk.lib.jackson.databind.type.ClassStack, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param3: me.pushy.sdk.lib.jackson.databind.JavaType, param4: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public findTypeParameters(param0: java.lang.Class<any>, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.type.TypeBindings): native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>;
								public _fromClass(param0: me.pushy.sdk.lib.jackson.databind.type.ClassStack, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.type.TypeBindings): me.pushy.sdk.lib.jackson.databind.JavaType;
								public findClass(param0: string): java.lang.Class<any>;
								public constructType(param0: java.lang.reflect.Type, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructRawCollectionLikeType(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.type.CollectionLikeType;
								public static unknownType(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public static rawClass(param0: java.lang.reflect.Type): java.lang.Class<any>;
								public _resolveSuperInterfaces(param0: me.pushy.sdk.lib.jackson.databind.type.ClassStack, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.type.TypeBindings): native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>;
								public _unknownType(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.util.LRUMap<any,me.pushy.sdk.lib.jackson.databind.JavaType>);
								public _newSimpleType(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param2: me.pushy.sdk.lib.jackson.databind.JavaType, param3: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructType(param0: java.lang.reflect.Type, param1: me.pushy.sdk.lib.jackson.databind.type.TypeBindings): me.pushy.sdk.lib.jackson.databind.JavaType;
								public _findPrimitive(param0: string): java.lang.Class<any>;
								public constructReferenceType(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.JavaType): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructType(param0: me.pushy.sdk.lib.jackson.core.type.TypeReference<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public _fromWellKnownInterface(param0: me.pushy.sdk.lib.jackson.databind.type.ClassStack, param1: java.lang.Class<any>, param2: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param3: me.pushy.sdk.lib.jackson.databind.JavaType, param4: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructMapLikeType(param0: java.lang.Class<any>, param1: java.lang.Class<any>, param2: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.type.MapLikeType;
								public _fromParamType(param0: me.pushy.sdk.lib.jackson.databind.type.ClassStack, param1: java.lang.reflect.ParameterizedType, param2: me.pushy.sdk.lib.jackson.databind.type.TypeBindings): me.pushy.sdk.lib.jackson.databind.JavaType;
								public _findWellKnownSimple(param0: java.lang.Class<any>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public static defaultInstance(): me.pushy.sdk.lib.jackson.databind.type.TypeFactory;
								public constructParametricType(param0: java.lang.Class<any>, param1: native.Array<me.pushy.sdk.lib.jackson.databind.JavaType>): me.pushy.sdk.lib.jackson.databind.JavaType;
								public classForName(param0: string): java.lang.Class<any>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module type {
							export abstract class TypeModifier {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.type.TypeModifier>;
								public modifyType(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: java.lang.reflect.Type, param2: me.pushy.sdk.lib.jackson.databind.type.TypeBindings, param3: me.pushy.sdk.lib.jackson.databind.type.TypeFactory): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module type {
							export class TypeParser {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.type.TypeParser>;
								public _factory: me.pushy.sdk.lib.jackson.databind.type.TypeFactory;
								public parse(param0: string): me.pushy.sdk.lib.jackson.databind.JavaType;
								public parseType(param0: me.pushy.sdk.lib.jackson.databind.type.TypeParser.MyTokenizer): me.pushy.sdk.lib.jackson.databind.JavaType;
								public _problem(param0: me.pushy.sdk.lib.jackson.databind.type.TypeParser.MyTokenizer, param1: string): java.lang.IllegalArgumentException;
								public findClass(param0: string, param1: me.pushy.sdk.lib.jackson.databind.type.TypeParser.MyTokenizer): java.lang.Class<any>;
								public withFactory(param0: me.pushy.sdk.lib.jackson.databind.type.TypeFactory): me.pushy.sdk.lib.jackson.databind.type.TypeParser;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.type.TypeFactory);
								public parseTypes(param0: me.pushy.sdk.lib.jackson.databind.type.TypeParser.MyTokenizer): java.util.List<me.pushy.sdk.lib.jackson.databind.JavaType>;
							}
							export module TypeParser {
								export class MyTokenizer {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.type.TypeParser.MyTokenizer>;
									public _input: string;
									public _index: number;
									public _pushbackToken: string;
									public constructor(param0: string);
									public getRemainingInput(): string;
									public nextToken(): string;
									public getAllInput(): string;
									public getUsedInput(): string;
									public hasMoreTokens(): boolean;
									public pushBack(param0: string): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class AccessPattern {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.AccessPattern>;
								public static ALWAYS_NULL: me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
								public static CONSTANT: me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
								public static DYNAMIC: me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
								public static valueOf(param0: string): me.pushy.sdk.lib.jackson.databind.util.AccessPattern;
								public static values(): native.Array<me.pushy.sdk.lib.jackson.databind.util.AccessPattern>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class Annotations {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.Annotations>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.util.Annotations interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									get(param0: java.lang.Class): java.lang.annotation.Annotation;
									has(param0: java.lang.Class<any>): boolean;
									hasOneOf(param0: native.Array<java.lang.Class<any>>): boolean;
									size(): number;
								});
								public constructor();
								public get(param0: java.lang.Class): java.lang.annotation.Annotation;
								public size(): number;
								public hasOneOf(param0: native.Array<java.lang.Class<any>>): boolean;
								public has(param0: java.lang.Class<any>): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class ArrayBuilders {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.ArrayBuilders>;
								public getLongBuilder(): me.pushy.sdk.lib.jackson.databind.util.ArrayBuilders.LongBuilder;
								public getFloatBuilder(): me.pushy.sdk.lib.jackson.databind.util.ArrayBuilders.FloatBuilder;
								public static getArrayComparator(param0: any): any;
								public getIntBuilder(): me.pushy.sdk.lib.jackson.databind.util.ArrayBuilders.IntBuilder;
								public constructor();
								public getDoubleBuilder(): me.pushy.sdk.lib.jackson.databind.util.ArrayBuilders.DoubleBuilder;
								public getBooleanBuilder(): me.pushy.sdk.lib.jackson.databind.util.ArrayBuilders.BooleanBuilder;
								public getByteBuilder(): me.pushy.sdk.lib.jackson.databind.util.ArrayBuilders.ByteBuilder;
								public static arrayToSet(param0: native.Array<any>): java.util.HashSet;
								public static insertInListNoDup(param0: native.Array<any>, param1: any): native.Array<any>;
								public getShortBuilder(): me.pushy.sdk.lib.jackson.databind.util.ArrayBuilders.ShortBuilder;
							}
							export module ArrayBuilders {
								export class BooleanBuilder extends me.pushy.sdk.lib.jackson.databind.util.PrimitiveArrayBuilder<native.Array<boolean>> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.ArrayBuilders.BooleanBuilder>;
									public constructor();
									public _constructArray(param0: number): any;
									public _constructArray(param0: number): native.Array<boolean>;
								}
								export class ByteBuilder extends me.pushy.sdk.lib.jackson.databind.util.PrimitiveArrayBuilder<native.Array<number>> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.ArrayBuilders.ByteBuilder>;
									public constructor();
									public _constructArray(param0: number): any;
									public _constructArray(param0: number): native.Array<number>;
								}
								export class DoubleBuilder extends me.pushy.sdk.lib.jackson.databind.util.PrimitiveArrayBuilder<native.Array<number>> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.ArrayBuilders.DoubleBuilder>;
									public constructor();
									public _constructArray(param0: number): any;
									public _constructArray(param0: number): native.Array<number>;
								}
								export class FloatBuilder extends me.pushy.sdk.lib.jackson.databind.util.PrimitiveArrayBuilder<native.Array<number>> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.ArrayBuilders.FloatBuilder>;
									public constructor();
									public _constructArray(param0: number): any;
									public _constructArray(param0: number): native.Array<number>;
								}
								export class IntBuilder extends me.pushy.sdk.lib.jackson.databind.util.PrimitiveArrayBuilder<native.Array<number>> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.ArrayBuilders.IntBuilder>;
									public constructor();
									public _constructArray(param0: number): any;
									public _constructArray(param0: number): native.Array<number>;
								}
								export class LongBuilder extends me.pushy.sdk.lib.jackson.databind.util.PrimitiveArrayBuilder<native.Array<number>> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.ArrayBuilders.LongBuilder>;
									public constructor();
									public _constructArray(param0: number): any;
									public _constructArray(param0: number): native.Array<number>;
								}
								export class ShortBuilder extends me.pushy.sdk.lib.jackson.databind.util.PrimitiveArrayBuilder<native.Array<number>> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.ArrayBuilders.ShortBuilder>;
									public constructor();
									public _constructArray(param0: number): any;
									public _constructArray(param0: number): native.Array<number>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class ArrayIterator<T>  extends java.lang.Object {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.ArrayIterator<any>>;
								public iterator(): java.util.Iterator<T>;
								public constructor(param0: native.Array<T>);
								public next(): T;
								public hasNext(): boolean;
								public remove(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class BeanUtil {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.BeanUtil>;
								public static isCglibGetCallbacks(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
								public static isGroovyMetaClassSetter(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
								public static okNameForMutator(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod, param1: string, param2: boolean): string;
								public static okNameForIsGetter(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod, param1: string, param2: boolean): string;
								public static okNameForRegularGetter(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod, param1: string, param2: boolean): string;
								public constructor();
								public static isGroovyMetaClassGetter(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod): boolean;
								public static getDefaultValue(param0: me.pushy.sdk.lib.jackson.databind.JavaType): any;
								public static okNameForSetter(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod, param1: boolean): string;
								public static legacyManglePropertyName(param0: string, param1: number): string;
								public static okNameForGetter(param0: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod, param1: boolean): string;
								public static stdManglePropertyName(param0: string, param1: number): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class ByteBufferBackedInputStream {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.ByteBufferBackedInputStream>;
								public _b: java.nio.ByteBuffer;
								public constructor(param0: java.nio.ByteBuffer);
								public available(): number;
								public read(param0: native.Array<number>, param1: number, param2: number): number;
								public read(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class ByteBufferBackedOutputStream {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.ByteBufferBackedOutputStream>;
								public _b: java.nio.ByteBuffer;
								public write(param0: number): void;
								public write(param0: native.Array<number>, param1: number, param2: number): void;
								public constructor(param0: java.nio.ByteBuffer);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class ClassUtil {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.ClassUtil>;
								public static throwIfIOE(param0: java.lang.Throwable): java.lang.Throwable;
								public static throwIfRTE(param0: java.lang.Throwable): java.lang.Throwable;
								public static findSuperTypes(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: java.lang.Class<any>, param2: boolean): java.util.List<me.pushy.sdk.lib.jackson.databind.JavaType>;
								public static unwrapAndThrowAsIAE(param0: java.lang.Throwable, param1: string): void;
								public static isConcrete(param0: java.lang.Class<any>): boolean;
								public static getDeclaredMethods(param0: java.lang.Class<any>): native.Array<java.lang.reflect.Method>;
								public static throwAsIAE(param0: java.lang.Throwable): void;
								public static nullOrToString(param0: any): string;
								public static isLocalType(param0: java.lang.Class<any>, param1: boolean): string;
								public static getRootCause(param0: java.lang.Throwable): java.lang.Throwable;
								public static isObjectOrPrimitive(param0: java.lang.Class<any>): boolean;
								public static hasGetterSignature(param0: java.lang.reflect.Method): boolean;
								public static throwRootCauseIfIOE(param0: java.lang.Throwable): java.lang.Throwable;
								public static closeOnFailAndThrowAsIAE(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: java.io.Closeable, param2: java.lang.Exception): void;
								public static findEnumType(param0: java.lang.Class<any>): java.lang.Class<any>;
								public static getPackageName(param0: java.lang.Class<any>): string;
								public static emptyIterator(): java.util.Iterator;
								public static findEnumType(param0: java.lang.Enum<any>): java.lang.Class<any>;
								public static isBogusClass(param0: java.lang.Class<any>): boolean;
								public static findRawSuperTypes(param0: java.lang.Class<any>, param1: java.lang.Class<any>, param2: boolean): java.util.List<java.lang.Class<any>>;
								public constructor();
								public static findFirstAnnotatedEnumValue(param0: java.lang.Class, param1: java.lang.Class): java.lang.Enum;
								public static isConcrete(param0: java.lang.reflect.Member): boolean;
								public static nonNullString(param0: string): string;
								public static findClassAnnotations(param0: java.lang.Class<any>): native.Array<java.lang.annotation.Annotation>;
								public static getClassMethods(param0: java.lang.Class<any>): native.Array<java.lang.reflect.Method>;
								public static verifyMustOverride(param0: java.lang.Class<any>, param1: any, param2: string): void;
								public static defaultValue(param0: java.lang.Class<any>): any;
								public static findSuperTypes(param0: java.lang.Class<any>, param1: java.lang.Class<any>): java.util.List<java.lang.Class<any>>;
								public static isNonStaticInnerClass(param0: java.lang.Class<any>): boolean;
								public static throwIfError(param0: java.lang.Throwable): java.lang.Throwable;
								public static getOuterClass(param0: java.lang.Class<any>): java.lang.Class<any>;
								public static getClassDescription(param0: any): string;
								public static checkAndFixAccess(param0: java.lang.reflect.Member, param1: boolean): void;
								public static classNameOf(param0: any): string;
								public static getConstructors(param0: java.lang.Class<any>): native.Array<me.pushy.sdk.lib.jackson.databind.util.ClassUtil.Ctor>;
								public static findSuperTypes(param0: java.lang.Class<any>, param1: java.lang.Class<any>, param2: java.util.List<java.lang.Class<any>>): java.util.List<java.lang.Class<any>>;
								public static canBeABeanType(param0: java.lang.Class<any>): string;
								public static nonNull(param0: any, param1: any): any;
								public static getEnclosingClass(param0: java.lang.Class<any>): java.lang.Class<any>;
								public static primitiveType(param0: java.lang.Class<any>): java.lang.Class<any>;
								public static findConstructor(param0: java.lang.Class, param1: boolean): java.lang.reflect.Constructor;
								public static nameOf(param0: me.pushy.sdk.lib.jackson.databind.util.Named): string;
								public static findSuperClasses(param0: java.lang.Class<any>, param1: java.lang.Class<any>, param2: boolean): java.util.List<java.lang.Class<any>>;
								public static findEnumType(param0: java.util.EnumSet<any>): java.lang.Class<any>;
								public static throwAsMappingException(param0: me.pushy.sdk.lib.jackson.databind.DeserializationContext, param1: java.io.IOException): any;
								public static createInstance(param0: java.lang.Class, param1: boolean): any;
								public static isJacksonStdImpl(param0: any): boolean;
								public static isJacksonStdImpl(param0: java.lang.Class<any>): boolean;
								public static isCollectionMapOrArray(param0: java.lang.Class<any>): boolean;
								public static findEnumType(param0: java.util.EnumMap<any,any>): java.lang.Class<any>;
								public static getDeclaringClass(param0: java.lang.Class<any>): java.lang.Class<any>;
								public static hasEnclosingMethod(param0: java.lang.Class<any>): boolean;
								public static getGenericSuperclass(param0: java.lang.Class<any>): java.lang.reflect.Type;
								public static nameOf(param0: java.lang.Class<any>): string;
								public static unwrapAndThrowAsIAE(param0: java.lang.Throwable): void;
								public static closeOnFailAndThrowAsIAE(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: java.lang.Exception): void;
								public static checkAndFixAccess(param0: java.lang.reflect.Member): void;
								public static getGenericInterfaces(param0: java.lang.Class<any>): native.Array<java.lang.reflect.Type>;
								public static hasClass(param0: any, param1: java.lang.Class<any>): boolean;
								public static isProxyType(param0: java.lang.Class<any>): boolean;
								public static classOf(param0: any): java.lang.Class<any>;
								public static wrapperType(param0: java.lang.Class<any>): java.lang.Class<any>;
								public static throwAsIAE(param0: java.lang.Throwable, param1: string): void;
								public static getDeclaredFields(param0: java.lang.Class<any>): native.Array<java.lang.reflect.Field>;
								public static quotedOr(param0: any, param1: string): string;
							}
							export module ClassUtil {
								export class Ctor {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.ClassUtil.Ctor>;
									public _ctor: java.lang.reflect.Constructor<any>;
									public getParamCount(): number;
									public getDeclaredAnnotations(): native.Array<java.lang.annotation.Annotation>;
									public constructor(param0: java.lang.reflect.Constructor<any>);
									public getDeclaringClass(): java.lang.Class<any>;
									public getParameterAnnotations(): native.Array<native.Array<java.lang.annotation.Annotation>>;
									public getConstructor(): java.lang.reflect.Constructor<any>;
								}
								export class EnumTypeLocator {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.ClassUtil.EnumTypeLocator>;
									public enumTypeFor(param0: java.util.EnumMap<any,any>): java.lang.Class<any>;
									public enumTypeFor(param0: java.util.EnumSet<any>): java.lang.Class<any>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class CompactStringObjectMap {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.CompactStringObjectMap>;
								public find(param0: string): any;
								public keys(): java.util.List<string>;
								public static construct(param0: java.util.Map): me.pushy.sdk.lib.jackson.databind.util.CompactStringObjectMap;
								public findCaseInsensitive(param0: string): any;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class Converter<IN, OUT>  extends java.lang.Object {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.Converter<any,any>>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.util.Converter<any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									convert(param0: IN): OUT;
									getInputType(param0: me.pushy.sdk.lib.jackson.databind.type.TypeFactory): me.pushy.sdk.lib.jackson.databind.JavaType;
									getOutputType(param0: me.pushy.sdk.lib.jackson.databind.type.TypeFactory): me.pushy.sdk.lib.jackson.databind.JavaType;
								});
								public constructor();
								public convert(param0: IN): OUT;
								public getOutputType(param0: me.pushy.sdk.lib.jackson.databind.type.TypeFactory): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getInputType(param0: me.pushy.sdk.lib.jackson.databind.type.TypeFactory): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
							export module Converter {
								export abstract class None extends me.pushy.sdk.lib.jackson.databind.util.Converter<any,any> {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.Converter.None>;
									public constructor();
									public getInputType(param0: me.pushy.sdk.lib.jackson.databind.type.TypeFactory): me.pushy.sdk.lib.jackson.databind.JavaType;
									public convert(param0: any): any;
									public getOutputType(param0: me.pushy.sdk.lib.jackson.databind.type.TypeFactory): me.pushy.sdk.lib.jackson.databind.JavaType;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class EnumResolver {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.EnumResolver>;
								public _enumClass: java.lang.Class<java.lang.Enum<any>>;
								public _enums: native.Array<java.lang.Enum<any>>;
								public _enumsById: java.util.HashMap<string,java.lang.Enum<any>>;
								public _defaultValue: java.lang.Enum<any>;
								public static constructUnsafeUsingToString(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.databind.util.EnumResolver;
								public getEnumClass(): java.lang.Class<java.lang.Enum<any>>;
								public getEnum(param0: number): java.lang.Enum<any>;
								public static constructFor(param0: java.lang.Class<java.lang.Enum<any>>, param1: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.databind.util.EnumResolver;
								public static constructUnsafeUsingMethod(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.databind.util.EnumResolver;
								public static constructUsingMethod(param0: java.lang.Class<java.lang.Enum<any>>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.databind.util.EnumResolver;
								public getEnums(): java.util.List<java.lang.Enum<any>>;
								public constructor(param0: java.lang.Class<java.lang.Enum<any>>, param1: native.Array<java.lang.Enum<any>>, param2: java.util.HashMap<string,java.lang.Enum<any>>, param3: java.lang.Enum<any>);
								public constructLookup(): me.pushy.sdk.lib.jackson.databind.util.CompactStringObjectMap;
								public getDefaultValue(): java.lang.Enum<any>;
								public getRawEnums(): native.Array<java.lang.Enum<any>>;
								public static constructUsingToString(param0: java.lang.Class<java.lang.Enum<any>>, param1: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.databind.util.EnumResolver;
								public lastValidIndex(): number;
								public getEnumIds(): java.util.Collection<string>;
								public findEnum(param0: string): java.lang.Enum<any>;
								public static constructUsingToString(param0: java.lang.Class<java.lang.Enum<any>>): me.pushy.sdk.lib.jackson.databind.util.EnumResolver;
								public static constructUnsafe(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector): me.pushy.sdk.lib.jackson.databind.util.EnumResolver;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class EnumValues {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.EnumValues>;
								public static construct(param0: me.pushy.sdk.lib.jackson.databind.SerializationConfig, param1: java.lang.Class<java.lang.Enum<any>>): me.pushy.sdk.lib.jackson.databind.util.EnumValues;
								public internalMap(): java.util.EnumMap<any,me.pushy.sdk.lib.jackson.core.SerializableString>;
								public static constructFromName(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<java.lang.Enum<any>>): me.pushy.sdk.lib.jackson.databind.util.EnumValues;
								public static constructFromToString(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: java.lang.Class<java.lang.Enum<any>>): me.pushy.sdk.lib.jackson.databind.util.EnumValues;
								public getEnumClass(): java.lang.Class<java.lang.Enum<any>>;
								public values(): java.util.Collection<me.pushy.sdk.lib.jackson.core.SerializableString>;
								public serializedValueFor(param0: java.lang.Enum<any>): me.pushy.sdk.lib.jackson.core.SerializableString;
								public enums(): java.util.List<java.lang.Enum<any>>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class ISO8601DateFormat {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.ISO8601DateFormat>;
								public clone(): any;
								public toString(): string;
								public parse(param0: string): java.util.Date;
								public constructor();
								public format(param0: java.util.Date, param1: java.lang.StringBuffer, param2: java.text.FieldPosition): java.lang.StringBuffer;
								public parse(param0: string, param1: java.text.ParsePosition): java.util.Date;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class ISO8601Utils {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.ISO8601Utils>;
								public static format(param0: java.util.Date): string;
								public constructor();
								public static timeZoneGMT(): java.util.TimeZone;
								public static format(param0: java.util.Date, param1: boolean): string;
								public static format(param0: java.util.Date, param1: boolean, param2: java.util.TimeZone): string;
								public static parse(param0: string, param1: java.text.ParsePosition): java.util.Date;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class JSONPObject extends me.pushy.sdk.lib.jackson.databind.JsonSerializable {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.JSONPObject>;
								public _function: string;
								public _value: any;
								public _serializationType: me.pushy.sdk.lib.jackson.databind.JavaType;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public constructor(param0: string, param1: any);
								public constructor(param0: string, param1: any, param2: me.pushy.sdk.lib.jackson.databind.JavaType);
								public getValue(): any;
								public getSerializationType(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getFunction(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class JSONWrappedObject extends me.pushy.sdk.lib.jackson.databind.JsonSerializable {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.JSONWrappedObject>;
								public _prefix: string;
								public _suffix: string;
								public _value: any;
								public _serializationType: me.pushy.sdk.lib.jackson.databind.JavaType;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public getSuffix(): string;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public constructor(param0: string, param1: string, param2: any);
								public constructor(param0: string, param1: string, param2: any, param3: me.pushy.sdk.lib.jackson.databind.JavaType);
								public getPrefix(): string;
								public getValue(): any;
								public getSerializationType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class LRUMap<K, V>  extends java.io.Serializable {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.LRUMap<any,any>>;
								public _maxEntries: number;
								public _map: java.util.concurrent.ConcurrentHashMap<any,any>;
								public _jdkSerializeMaxEntries: number;
								public clear(): void;
								public size(): number;
								public get(param0: any): any;
								public constructor(param0: number, param1: number);
								public readResolve(): any;
								public putIfAbsent(param0: any, param1: any): any;
								public put(param0: any, param1: any): any;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class LinkedNode<T>  extends java.lang.Object {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.LinkedNode<any>>;
								public next(): me.pushy.sdk.lib.jackson.databind.util.LinkedNode<T>;
								public static contains(param0: me.pushy.sdk.lib.jackson.databind.util.LinkedNode<any>, param1: any): boolean;
								public constructor(param0: T, param1: me.pushy.sdk.lib.jackson.databind.util.LinkedNode<T>);
								public value(): T;
								public linkNext(param0: me.pushy.sdk.lib.jackson.databind.util.LinkedNode<T>): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export abstract class NameTransformer {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.NameTransformer>;
								public static NOP: me.pushy.sdk.lib.jackson.databind.util.NameTransformer;
								public static simpleTransformer(param0: string, param1: string): me.pushy.sdk.lib.jackson.databind.util.NameTransformer;
								public transform(param0: string): string;
								public reverse(param0: string): string;
								public static chainedTransformer(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer, param1: me.pushy.sdk.lib.jackson.databind.util.NameTransformer): me.pushy.sdk.lib.jackson.databind.util.NameTransformer;
								public constructor();
							}
							export module NameTransformer {
								export class Chained extends me.pushy.sdk.lib.jackson.databind.util.NameTransformer {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.NameTransformer.Chained>;
									public _t1: me.pushy.sdk.lib.jackson.databind.util.NameTransformer;
									public _t2: me.pushy.sdk.lib.jackson.databind.util.NameTransformer;
									public constructor();
									public toString(): string;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.util.NameTransformer, param1: me.pushy.sdk.lib.jackson.databind.util.NameTransformer);
									public transform(param0: string): string;
									public reverse(param0: string): string;
								}
								export class NopTransformer extends me.pushy.sdk.lib.jackson.databind.util.NameTransformer {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.NameTransformer.NopTransformer>;
									public constructor();
									public transform(param0: string): string;
									public reverse(param0: string): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class Named {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.Named>;
								/**
								 * Constructs a new instance of the me.pushy.sdk.lib.jackson.databind.util.Named interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									getName(): string;
								});
								public constructor();
								public getName(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class ObjectBuffer {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.ObjectBuffer>;
								public resetAndStart(): native.Array<any>;
								public bufferedSize(): number;
								public initialCapacity(): number;
								public appendCompletedChunk(param0: native.Array<any>): native.Array<any>;
								public completeAndClearBuffer(param0: native.Array<any>, param1: number, param2: java.lang.Class): native.Array<any>;
								public completeAndClearBuffer(param0: native.Array<any>, param1: number, param2: java.util.List<any>): void;
								public constructor();
								public resetAndStart(param0: native.Array<any>, param1: number): native.Array<any>;
								public completeAndClearBuffer(param0: native.Array<any>, param1: number): native.Array<any>;
								public _reset(): void;
								public _copyTo(param0: any, param1: number, param2: native.Array<any>, param3: number): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export abstract class PrimitiveArrayBuilder<T>  extends java.lang.Object {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.PrimitiveArrayBuilder<any>>;
								public _freeBuffer: T;
								public _bufferHead: me.pushy.sdk.lib.jackson.databind.util.PrimitiveArrayBuilder.Node<T>;
								public _bufferTail: me.pushy.sdk.lib.jackson.databind.util.PrimitiveArrayBuilder.Node<T>;
								public _bufferedEntryCount: number;
								public bufferedSize(): number;
								public constructor();
								public completeAndClearBuffer(param0: T, param1: number): T;
								public resetAndStart(): T;
								public appendCompletedChunk(param0: T, param1: number): T;
								public _reset(): void;
								public _constructArray(param0: number): T;
							}
							export module PrimitiveArrayBuilder {
								export class Node<T>  extends java.lang.Object {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.PrimitiveArrayBuilder.Node<any>>;
									public getData(): T;
									public copyData(param0: T, param1: number): number;
									public constructor(param0: T, param1: number);
									public next(): me.pushy.sdk.lib.jackson.databind.util.PrimitiveArrayBuilder.Node<T>;
									public linkNext(param0: me.pushy.sdk.lib.jackson.databind.util.PrimitiveArrayBuilder.Node<T>): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class RawValue extends me.pushy.sdk.lib.jackson.databind.JsonSerializable {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.RawValue>;
								public _value: any;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JsonSerializable);
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider): void;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.SerializableString);
								public toString(): string;
								public serializeWithType(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator, param1: me.pushy.sdk.lib.jackson.databind.SerializerProvider, param2: me.pushy.sdk.lib.jackson.databind.jsontype.TypeSerializer): void;
								public constructor(param0: any, param1: boolean);
								public equals(param0: any): boolean;
								public rawValue(): any;
								public _serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public constructor(param0: string);
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class RootNameLookup {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.RootNameLookup>;
								public _rootNames: me.pushy.sdk.lib.jackson.databind.util.LRUMap<me.pushy.sdk.lib.jackson.databind.type.ClassKey,me.pushy.sdk.lib.jackson.databind.PropertyName>;
								public findRootName(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public constructor();
								public findRootName(param0: java.lang.Class<any>, param1: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public readResolve(): any;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class SimpleBeanPropertyDefinition extends me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.SimpleBeanPropertyDefinition>;
								public _annotationIntrospector: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector;
								public _member: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public _metadata: me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
								public _fullName: me.pushy.sdk.lib.jackson.databind.PropertyName;
								public _inclusion: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public hasSetter(): boolean;
								public getPrimaryType(): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getFullName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public hasConstructorParameter(): boolean;
								public withInclusion(param0: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value): me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition;
								public static construct(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.PropertyName, param3: me.pushy.sdk.lib.jackson.databind.PropertyMetadata, param4: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value): me.pushy.sdk.lib.jackson.databind.util.SimpleBeanPropertyDefinition;
								public getWrapperName(): me.pushy.sdk.lib.jackson.databind.PropertyName;
								public hasField(): boolean;
								public withSimpleName(param0: string): me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition;
								public getPrimaryMember(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember;
								public static construct(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.PropertyName, param3: me.pushy.sdk.lib.jackson.databind.PropertyMetadata, param4: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Include): me.pushy.sdk.lib.jackson.databind.util.SimpleBeanPropertyDefinition;
								public withMetadata(param0: me.pushy.sdk.lib.jackson.databind.PropertyMetadata): me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition;
								public isExplicitlyNamed(): boolean;
								public getMetadata(): me.pushy.sdk.lib.jackson.databind.PropertyMetadata;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.AnnotationIntrospector, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.PropertyName, param3: me.pushy.sdk.lib.jackson.databind.PropertyMetadata, param4: me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value);
								public getRawPrimaryType(): java.lang.Class<any>;
								public getField(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedField;
								public withName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.introspect.BeanPropertyDefinition;
								public getName(): string;
								public getSetter(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
								public constructor();
								public hasName(param0: me.pushy.sdk.lib.jackson.databind.PropertyName): boolean;
								public hasGetter(): boolean;
								public getGetter(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMethod;
								public getConstructorParameters(): java.util.Iterator<me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter>;
								public isExplicitlyIncluded(): boolean;
								public findInclusion(): me.pushy.sdk.lib.jackson.annotation.JsonInclude.Value;
								public getInternalName(): string;
								public static construct(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember): me.pushy.sdk.lib.jackson.databind.util.SimpleBeanPropertyDefinition;
								public static construct(param0: me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig<any>, param1: me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedMember, param2: me.pushy.sdk.lib.jackson.databind.PropertyName): me.pushy.sdk.lib.jackson.databind.util.SimpleBeanPropertyDefinition;
								public getConstructorParameter(): me.pushy.sdk.lib.jackson.databind.introspect.AnnotatedParameter;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export abstract class StdConverter<IN, OUT>  extends me.pushy.sdk.lib.jackson.databind.util.Converter<any,any> {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.StdConverter<any,any>>;
								public convert(param0: any): any;
								public _findConverterType(param0: me.pushy.sdk.lib.jackson.databind.type.TypeFactory): me.pushy.sdk.lib.jackson.databind.JavaType;
								public constructor();
								public getOutputType(param0: me.pushy.sdk.lib.jackson.databind.type.TypeFactory): me.pushy.sdk.lib.jackson.databind.JavaType;
								public getInputType(param0: me.pushy.sdk.lib.jackson.databind.type.TypeFactory): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class StdDateFormat {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.StdDateFormat>;
								public static DATE_FORMAT_STR_ISO8601: string;
								public static DATE_FORMAT_STR_ISO8601_Z: string;
								public static DATE_FORMAT_STR_PLAIN: string;
								public static DATE_FORMAT_STR_RFC1123: string;
								public static ALL_FORMATS: native.Array<string>;
								public static DATE_FORMAT_RFC1123: java.text.DateFormat;
								public static DATE_FORMAT_ISO8601: java.text.DateFormat;
								public static DATE_FORMAT_ISO8601_Z: java.text.DateFormat;
								public static DATE_FORMAT_PLAIN: java.text.DateFormat;
								public static instance: me.pushy.sdk.lib.jackson.databind.util.StdDateFormat;
								public _timezone: java.util.TimeZone;
								public _locale: java.util.Locale;
								public _lenient: java.lang.Boolean;
								public _formatRFC1123: java.text.DateFormat;
								public _formatISO8601: java.text.DateFormat;
								public _formatISO8601_z: java.text.DateFormat;
								public _formatPlain: java.text.DateFormat;
								public isLenient(): boolean;
								public static _equals(param0: any, param1: any): boolean;
								public toString(): string;
								public toPattern(): string;
								public parse(param0: string): java.util.Date;
								public parseAsISO8601(param0: string, param1: java.text.ParsePosition, param2: boolean): java.util.Date;
								public static getRFC1123Format(param0: java.util.TimeZone, param1: java.util.Locale): java.text.DateFormat;
								public equals(param0: any): boolean;
								public looksLikeISO8601(param0: string): boolean;
								public setTimeZone(param0: java.util.TimeZone): void;
								public parse(param0: string, param1: java.text.ParsePosition): java.util.Date;
								public getTimeZone(): java.util.TimeZone;
								public static getDefaultTimeZone(): java.util.TimeZone;
								public static getISO8601Format(param0: java.util.TimeZone, param1: java.util.Locale): java.text.DateFormat;
								public static getISO8601Format(param0: java.util.TimeZone): java.text.DateFormat;
								public format(param0: java.util.Date, param1: java.lang.StringBuffer, param2: java.text.FieldPosition): java.lang.StringBuffer;
								public constructor(param0: java.util.TimeZone, param1: java.util.Locale);
								public withTimeZone(param0: java.util.TimeZone): me.pushy.sdk.lib.jackson.databind.util.StdDateFormat;
								public withLenient(param0: java.lang.Boolean): me.pushy.sdk.lib.jackson.databind.util.StdDateFormat;
								public constructor(param0: java.util.TimeZone, param1: java.util.Locale, param2: java.lang.Boolean);
								public constructor();
								public _clearFormats(): void;
								public clone(): me.pushy.sdk.lib.jackson.databind.util.StdDateFormat;
								public withLocale(param0: java.util.Locale): me.pushy.sdk.lib.jackson.databind.util.StdDateFormat;
								public parseAsRFC1123(param0: string, param1: java.text.ParsePosition): java.util.Date;
								public setLenient(param0: boolean): void;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class TokenBuffer extends me.pushy.sdk.lib.jackson.core.JsonGenerator {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.TokenBuffer>;
								public static DEFAULT_GENERATOR_FEATURES: number;
								public _objectCodec: me.pushy.sdk.lib.jackson.core.ObjectCodec;
								public _generatorFeatures: number;
								public _closed: boolean;
								public _hasNativeTypeIds: boolean;
								public _hasNativeObjectIds: boolean;
								public _mayHaveNativeIds: boolean;
								public _forceBigDecimal: boolean;
								public _first: me.pushy.sdk.lib.jackson.databind.util.TokenBuffer.Segment;
								public _last: me.pushy.sdk.lib.jackson.databind.util.TokenBuffer.Segment;
								public _appendAt: number;
								public _typeId: any;
								public _objectId: any;
								public _hasNativeId: boolean;
								public _writeContext: me.pushy.sdk.lib.jackson.core.json.JsonWriteContext;
								public serialize(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext);
								public writeBinary(param0: java.io.InputStream, param1: number): number;
								public overrideStdFeatures(param0: number, param1: number): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public writeStartObject(): void;
								public writeEmbeddedObject(param0: any): void;
								public writeString(param0: string): void;
								public forceUseOfBigDecimal(param0: boolean): me.pushy.sdk.lib.jackson.databind.util.TokenBuffer;
								public useDefaultPrettyPrinter(): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public append(param0: me.pushy.sdk.lib.jackson.databind.util.TokenBuffer): me.pushy.sdk.lib.jackson.databind.util.TokenBuffer;
								public flush(): void;
								public enable(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public getOutputContext(): me.pushy.sdk.lib.jackson.core.json.JsonWriteContext;
								public writeRawValue(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public writeNumber(param0: java.math.BigDecimal): void;
								public writeRaw(param0: native.Array<string>, param1: number, param2: number): void;
								public copyCurrentEvent(param0: me.pushy.sdk.lib.jackson.core.JsonParser): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec, param1: boolean);
								public writeRaw(param0: string, param1: number, param2: number): void;
								public writeFieldName(param0: string): void;
								public constructor();
								public writeNumber(param0: string): void;
								public _appendValue(param0: me.pushy.sdk.lib.jackson.core.JsonToken): void;
								public _append(param0: me.pushy.sdk.lib.jackson.core.JsonToken): void;
								public writeRawValue(param0: string): void;
								public copyCurrentStructure(param0: me.pushy.sdk.lib.jackson.core.JsonParser): void;
								public writeObject(param0: any): void;
								public firstToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
								public asParserOnFirstToken(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public version(): me.pushy.sdk.lib.jackson.core.Version;
								public writeNumber(param0: number): void;
								public writeFieldName(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public writeString(param0: native.Array<string>, param1: number, param2: number): void;
								public canWriteTypeId(): boolean;
								public close(): void;
								public disable(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public writeEndArray(): void;
								public toString(): string;
								public getOutputContext(): me.pushy.sdk.lib.jackson.core.JsonStreamContext;
								public writeRawUTF8String(param0: native.Array<number>, param1: number, param2: number): void;
								public writeBinary(param0: native.Array<number>): void;
								public setFeatureMask(param0: number): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public writeRaw(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public _append(param0: me.pushy.sdk.lib.jackson.core.JsonToken, param1: any): void;
								public writeRaw(param0: string): void;
								public writeRawValue(param0: string, param1: number, param2: number): void;
								public writeBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.InputStream, param2: number): number;
								public writeBoolean(param0: boolean): void;
								public writeStartArray(): void;
								public getCodec(): me.pushy.sdk.lib.jackson.core.ObjectCodec;
								public _appendValue(param0: me.pushy.sdk.lib.jackson.core.JsonToken, param1: any): void;
								public getFeatureMask(): number;
								public writeStartArray(param0: number): void;
								public writeBinary(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: native.Array<number>, param2: number, param3: number): void;
								public asParser(param0: me.pushy.sdk.lib.jackson.core.JsonParser): me.pushy.sdk.lib.jackson.core.JsonParser;
								public writeBinary(param0: native.Array<number>, param1: number, param2: number): void;
								public writeTypeId(param0: any): void;
								public static asCopyOfValue(param0: me.pushy.sdk.lib.jackson.core.JsonParser): me.pushy.sdk.lib.jackson.databind.util.TokenBuffer;
								public asParser(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonParser;
								public writeString(param0: java.io.Reader, param1: number): void;
								public writeObjectId(param0: any): void;
								public canWriteObjectId(): boolean;
								public setCodec(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): me.pushy.sdk.lib.jackson.core.JsonGenerator;
								public _reportUnsupportedOperation(): void;
								public writeStartObject(param0: any): void;
								public asParser(): me.pushy.sdk.lib.jackson.core.JsonParser;
								public deserialize(param0: me.pushy.sdk.lib.jackson.core.JsonParser, param1: me.pushy.sdk.lib.jackson.databind.DeserializationContext): me.pushy.sdk.lib.jackson.databind.util.TokenBuffer;
								public writeString(param0: me.pushy.sdk.lib.jackson.core.SerializableString): void;
								public writeNumber(param0: java.math.BigInteger): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.JsonParser);
								public isClosed(): boolean;
								public writeTree(param0: me.pushy.sdk.lib.jackson.core.TreeNode): void;
								public writeEndObject(): void;
								public writeRawValue(param0: native.Array<string>, param1: number, param2: number): void;
								public constructor(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec);
								public isEnabled(param0: me.pushy.sdk.lib.jackson.core.JsonGenerator.Feature): boolean;
								public canWriteBinaryNatively(): boolean;
								public writeNull(): void;
								public writeUTF8String(param0: native.Array<number>, param1: number, param2: number): void;
							}
							export module TokenBuffer {
								export class Parser extends me.pushy.sdk.lib.jackson.core.base.ParserMinimalBase {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.TokenBuffer.Parser>;
									public _codec: me.pushy.sdk.lib.jackson.core.ObjectCodec;
									public _hasNativeTypeIds: boolean;
									public _hasNativeObjectIds: boolean;
									public _hasNativeIds: boolean;
									public _segment: me.pushy.sdk.lib.jackson.databind.util.TokenBuffer.Segment;
									public _segmentPtr: number;
									public _parsingContext: me.pushy.sdk.lib.jackson.core.json.JsonReadContext;
									public _closed: boolean;
									public _byteBuilder: me.pushy.sdk.lib.jackson.core.util.ByteArrayBuilder;
									public _location: me.pushy.sdk.lib.jackson.core.JsonLocation;
									public canReadObjectId(): boolean;
									public version(): me.pushy.sdk.lib.jackson.core.Version;
									public close(): void;
									public getLongValue(): number;
									public getCurrentName(): string;
									public peekNextToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
									public getNumberType(): me.pushy.sdk.lib.jackson.core.JsonParser.NumberType;
									public getBigIntegerValue(): java.math.BigInteger;
									public getTextLength(): number;
									public getBinaryValue(param0: me.pushy.sdk.lib.jackson.core.Base64Variant): native.Array<number>;
									public getCodec(): me.pushy.sdk.lib.jackson.core.ObjectCodec;
									public constructor(param0: me.pushy.sdk.lib.jackson.databind.util.TokenBuffer.Segment, param1: me.pushy.sdk.lib.jackson.core.ObjectCodec, param2: boolean, param3: boolean);
									public _checkIsNumber(): void;
									public overrideCurrentName(param0: string): void;
									public readBinaryValue(param0: me.pushy.sdk.lib.jackson.core.Base64Variant, param1: java.io.OutputStream): number;
									public getDecimalValue(): java.math.BigDecimal;
									public getText(param0: java.io.Writer): number;
									public getTextOffset(): number;
									public getParsingContext(): me.pushy.sdk.lib.jackson.core.JsonStreamContext;
									public getTokenLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
									public readBinaryValue(param0: java.io.OutputStream): number;
									public isNaN(): boolean;
									public constructor();
									public getTypeId(): any;
									public setCodec(param0: me.pushy.sdk.lib.jackson.core.ObjectCodec): void;
									public getDoubleValue(): number;
									public setLocation(param0: me.pushy.sdk.lib.jackson.core.JsonLocation): void;
									public constructor(param0: number);
									public getIntValue(): number;
									public nextToken(): me.pushy.sdk.lib.jackson.core.JsonToken;
									public getTextCharacters(): native.Array<string>;
									public _currentObject(): any;
									public _handleEOF(): void;
									public nextFieldName(param0: me.pushy.sdk.lib.jackson.core.SerializableString): boolean;
									public getCurrentLocation(): me.pushy.sdk.lib.jackson.core.JsonLocation;
									public getText(): string;
									public nextFieldName(): string;
									public isClosed(): boolean;
									public getNumberValue(): java.lang.Number;
									public getBinaryValue(): native.Array<number>;
									public getFloatValue(): number;
									public canReadTypeId(): boolean;
									public getObjectId(): any;
									public hasTextCharacters(): boolean;
									public getEmbeddedObject(): any;
								}
								export class Segment {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.TokenBuffer.Segment>;
									public static TOKENS_PER_SEGMENT: number;
									public _next: me.pushy.sdk.lib.jackson.databind.util.TokenBuffer.Segment;
									public _tokenTypes: number;
									public _tokens: native.Array<any>;
									public _nativeIds: java.util.TreeMap<java.lang.Integer,any>;
									public constructor();
									public append(param0: number, param1: me.pushy.sdk.lib.jackson.core.JsonToken, param2: any, param3: any): me.pushy.sdk.lib.jackson.databind.util.TokenBuffer.Segment;
									public type(param0: number): me.pushy.sdk.lib.jackson.core.JsonToken;
									public append(param0: number, param1: me.pushy.sdk.lib.jackson.core.JsonToken, param2: any, param3: any, param4: any): me.pushy.sdk.lib.jackson.databind.util.TokenBuffer.Segment;
									public rawType(param0: number): number;
									public append(param0: number, param1: me.pushy.sdk.lib.jackson.core.JsonToken, param2: any): me.pushy.sdk.lib.jackson.databind.util.TokenBuffer.Segment;
									public next(): me.pushy.sdk.lib.jackson.databind.util.TokenBuffer.Segment;
									public hasIds(): boolean;
									public append(param0: number, param1: me.pushy.sdk.lib.jackson.core.JsonToken): me.pushy.sdk.lib.jackson.databind.util.TokenBuffer.Segment;
									public get(param0: number): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class TypeKey {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.TypeKey>;
								public _hashCode: number;
								public _class: java.lang.Class<any>;
								public _type: me.pushy.sdk.lib.jackson.databind.JavaType;
								public _isTyped: boolean;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.JavaType, param1: boolean);
								public toString(): string;
								public static typedHash(param0: java.lang.Class<any>): number;
								public resetTyped(param0: java.lang.Class<any>): void;
								public equals(param0: any): boolean;
								public constructor();
								public static untypedHash(param0: me.pushy.sdk.lib.jackson.databind.JavaType): number;
								public static untypedHash(param0: java.lang.Class<any>): number;
								public resetTyped(param0: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								public static typedHash(param0: me.pushy.sdk.lib.jackson.databind.JavaType): number;
								public constructor(param0: me.pushy.sdk.lib.jackson.databind.util.TypeKey);
								public resetUntyped(param0: java.lang.Class<any>): void;
								public resetUntyped(param0: me.pushy.sdk.lib.jackson.databind.JavaType): void;
								public getRawType(): java.lang.Class<any>;
								public hashCode(): number;
								public constructor(param0: java.lang.Class<any>, param1: boolean);
								public isTyped(): boolean;
								public getType(): me.pushy.sdk.lib.jackson.databind.JavaType;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module jackson {
					export module databind {
						export module util {
							export class ViewMatcher {
								public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.ViewMatcher>;
								public static EMPTY: me.pushy.sdk.lib.jackson.databind.util.ViewMatcher;
								public isVisibleForView(param0: java.lang.Class<any>): boolean;
								public constructor();
								public static construct(param0: native.Array<java.lang.Class<any>>): me.pushy.sdk.lib.jackson.databind.util.ViewMatcher;
							}
							export module ViewMatcher {
								export class Multi extends me.pushy.sdk.lib.jackson.databind.util.ViewMatcher {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.ViewMatcher.Multi>;
									public constructor();
									public isVisibleForView(param0: java.lang.Class<any>): boolean;
									public constructor(param0: native.Array<java.lang.Class<any>>);
								}
								export class Single extends me.pushy.sdk.lib.jackson.databind.util.ViewMatcher {
									public static class: java.lang.Class<me.pushy.sdk.lib.jackson.databind.util.ViewMatcher.Single>;
									public constructor();
									public isVisibleForView(param0: java.lang.Class<any>): boolean;
									public constructor(param0: java.lang.Class<any>);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class BufferedMessage {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.BufferedMessage>;
						public constructor(param0: me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage, param1: me.pushy.sdk.lib.paho.MqttToken);
						public getMessage(): me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage;
						public getToken(): me.pushy.sdk.lib.paho.MqttToken;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class DisconnectedBufferOptions {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.DisconnectedBufferOptions>;
						public static DISCONNECTED_BUFFER_SIZE_DEFAULT: number;
						public static DISCONNECTED_BUFFER_ENABLED_DEFAULT: boolean;
						public static PERSIST_DISCONNECTED_BUFFER_DEFAULT: boolean;
						public static DELETE_OLDEST_MESSAGES_DEFAULT: boolean;
						public isPersistBuffer(): boolean;
						public constructor();
						public isDeleteOldestMessages(): boolean;
						public setBufferEnabled(param0: boolean): void;
						public setPersistBuffer(param0: boolean): void;
						public setDeleteOldestMessages(param0: boolean): void;
						public setBufferSize(param0: number): void;
						public getBufferSize(): number;
						public isBufferEnabled(): boolean;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class IMqttActionListener {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.IMqttActionListener>;
						/**
						 * Constructs a new instance of the me.pushy.sdk.lib.paho.IMqttActionListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onSuccess(param0: me.pushy.sdk.lib.paho.IMqttToken): void;
							onFailure(param0: me.pushy.sdk.lib.paho.IMqttToken, param1: java.lang.Throwable): void;
						});
						public constructor();
						public onFailure(param0: me.pushy.sdk.lib.paho.IMqttToken, param1: java.lang.Throwable): void;
						public onSuccess(param0: me.pushy.sdk.lib.paho.IMqttToken): void;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class IMqttAsyncClient {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.IMqttAsyncClient>;
						/**
						 * Constructs a new instance of the me.pushy.sdk.lib.paho.IMqttAsyncClient interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							connect(): me.pushy.sdk.lib.paho.IMqttToken;
							connect(param0: me.pushy.sdk.lib.paho.MqttConnectOptions): me.pushy.sdk.lib.paho.IMqttToken;
							connect(param0: any, param1: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
							connect(param0: me.pushy.sdk.lib.paho.MqttConnectOptions, param1: any, param2: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
							disconnect(): me.pushy.sdk.lib.paho.IMqttToken;
							disconnect(param0: number): me.pushy.sdk.lib.paho.IMqttToken;
							disconnect(param0: any, param1: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
							disconnect(param0: number, param1: any, param2: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
							disconnectForcibly(): void;
							disconnectForcibly(param0: number): void;
							disconnectForcibly(param0: number, param1: number): void;
							isConnected(): boolean;
							getClientId(): string;
							getServerURI(): string;
							publish(param0: string, param1: native.Array<number>, param2: number, param3: boolean): me.pushy.sdk.lib.paho.IMqttDeliveryToken;
							publish(param0: string, param1: native.Array<number>, param2: number, param3: boolean, param4: any, param5: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttDeliveryToken;
							publish(param0: string, param1: me.pushy.sdk.lib.paho.MqttMessage): me.pushy.sdk.lib.paho.IMqttDeliveryToken;
							publish(param0: string, param1: me.pushy.sdk.lib.paho.MqttMessage, param2: any, param3: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttDeliveryToken;
							subscribe(param0: string, param1: number): me.pushy.sdk.lib.paho.IMqttToken;
							subscribe(param0: string, param1: number, param2: any, param3: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
							subscribe(param0: native.Array<string>, param1: native.Array<number>): me.pushy.sdk.lib.paho.IMqttToken;
							subscribe(param0: native.Array<string>, param1: native.Array<number>, param2: any, param3: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
							subscribe(param0: string, param1: number, param2: any, param3: me.pushy.sdk.lib.paho.IMqttActionListener, param4: me.pushy.sdk.lib.paho.IMqttMessageListener): me.pushy.sdk.lib.paho.IMqttToken;
							subscribe(param0: string, param1: number, param2: me.pushy.sdk.lib.paho.IMqttMessageListener): me.pushy.sdk.lib.paho.IMqttToken;
							subscribe(param0: native.Array<string>, param1: native.Array<number>, param2: native.Array<me.pushy.sdk.lib.paho.IMqttMessageListener>): me.pushy.sdk.lib.paho.IMqttToken;
							subscribe(param0: native.Array<string>, param1: native.Array<number>, param2: any, param3: me.pushy.sdk.lib.paho.IMqttActionListener, param4: native.Array<me.pushy.sdk.lib.paho.IMqttMessageListener>): me.pushy.sdk.lib.paho.IMqttToken;
							unsubscribe(param0: string): me.pushy.sdk.lib.paho.IMqttToken;
							unsubscribe(param0: native.Array<string>): me.pushy.sdk.lib.paho.IMqttToken;
							unsubscribe(param0: string, param1: any, param2: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
							unsubscribe(param0: native.Array<string>, param1: any, param2: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
							setCallback(param0: me.pushy.sdk.lib.paho.MqttCallback): void;
							getPendingDeliveryTokens(): native.Array<me.pushy.sdk.lib.paho.IMqttDeliveryToken>;
							setManualAcks(param0: boolean): void;
							messageArrivedComplete(param0: number, param1: number): void;
							close(): void;
						});
						public constructor();
						public getPendingDeliveryTokens(): native.Array<me.pushy.sdk.lib.paho.IMqttDeliveryToken>;
						public connect(param0: any, param1: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
						public disconnect(param0: number, param1: any, param2: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
						public subscribe(param0: native.Array<string>, param1: native.Array<number>, param2: any, param3: me.pushy.sdk.lib.paho.IMqttActionListener, param4: native.Array<me.pushy.sdk.lib.paho.IMqttMessageListener>): me.pushy.sdk.lib.paho.IMqttToken;
						public unsubscribe(param0: string, param1: any, param2: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
						public unsubscribe(param0: native.Array<string>, param1: any, param2: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
						public close(): void;
						public connect(): me.pushy.sdk.lib.paho.IMqttToken;
						public publish(param0: string, param1: me.pushy.sdk.lib.paho.MqttMessage): me.pushy.sdk.lib.paho.IMqttDeliveryToken;
						public subscribe(param0: native.Array<string>, param1: native.Array<number>, param2: any, param3: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
						public setCallback(param0: me.pushy.sdk.lib.paho.MqttCallback): void;
						public isConnected(): boolean;
						public getClientId(): string;
						public disconnect(): me.pushy.sdk.lib.paho.IMqttToken;
						public disconnectForcibly(param0: number): void;
						public subscribe(param0: string, param1: number, param2: me.pushy.sdk.lib.paho.IMqttMessageListener): me.pushy.sdk.lib.paho.IMqttToken;
						public disconnectForcibly(): void;
						public disconnect(param0: number): me.pushy.sdk.lib.paho.IMqttToken;
						public publish(param0: string, param1: native.Array<number>, param2: number, param3: boolean, param4: any, param5: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttDeliveryToken;
						public setManualAcks(param0: boolean): void;
						public subscribe(param0: string, param1: number): me.pushy.sdk.lib.paho.IMqttToken;
						public subscribe(param0: native.Array<string>, param1: native.Array<number>, param2: native.Array<me.pushy.sdk.lib.paho.IMqttMessageListener>): me.pushy.sdk.lib.paho.IMqttToken;
						public subscribe(param0: string, param1: number, param2: any, param3: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
						public unsubscribe(param0: string): me.pushy.sdk.lib.paho.IMqttToken;
						public publish(param0: string, param1: native.Array<number>, param2: number, param3: boolean): me.pushy.sdk.lib.paho.IMqttDeliveryToken;
						public connect(param0: me.pushy.sdk.lib.paho.MqttConnectOptions, param1: any, param2: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
						public getServerURI(): string;
						public subscribe(param0: native.Array<string>, param1: native.Array<number>): me.pushy.sdk.lib.paho.IMqttToken;
						public disconnect(param0: any, param1: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
						public messageArrivedComplete(param0: number, param1: number): void;
						public publish(param0: string, param1: me.pushy.sdk.lib.paho.MqttMessage, param2: any, param3: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttDeliveryToken;
						public disconnectForcibly(param0: number, param1: number): void;
						public connect(param0: me.pushy.sdk.lib.paho.MqttConnectOptions): me.pushy.sdk.lib.paho.IMqttToken;
						public unsubscribe(param0: native.Array<string>): me.pushy.sdk.lib.paho.IMqttToken;
						public subscribe(param0: string, param1: number, param2: any, param3: me.pushy.sdk.lib.paho.IMqttActionListener, param4: me.pushy.sdk.lib.paho.IMqttMessageListener): me.pushy.sdk.lib.paho.IMqttToken;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class IMqttClient {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.IMqttClient>;
						/**
						 * Constructs a new instance of the me.pushy.sdk.lib.paho.IMqttClient interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							connect(): void;
							connect(param0: me.pushy.sdk.lib.paho.MqttConnectOptions): void;
							connectWithResult(param0: me.pushy.sdk.lib.paho.MqttConnectOptions): me.pushy.sdk.lib.paho.IMqttToken;
							disconnect(): void;
							disconnect(param0: number): void;
							disconnectForcibly(): void;
							disconnectForcibly(param0: number): void;
							disconnectForcibly(param0: number, param1: number): void;
							subscribe(param0: string): void;
							subscribe(param0: native.Array<string>): void;
							subscribe(param0: string, param1: number): void;
							subscribe(param0: native.Array<string>, param1: native.Array<number>): void;
							subscribe(param0: string, param1: me.pushy.sdk.lib.paho.IMqttMessageListener): void;
							subscribe(param0: native.Array<string>, param1: native.Array<me.pushy.sdk.lib.paho.IMqttMessageListener>): void;
							subscribe(param0: string, param1: number, param2: me.pushy.sdk.lib.paho.IMqttMessageListener): void;
							subscribe(param0: native.Array<string>, param1: native.Array<number>, param2: native.Array<me.pushy.sdk.lib.paho.IMqttMessageListener>): void;
							unsubscribe(param0: string): void;
							unsubscribe(param0: native.Array<string>): void;
							publish(param0: string, param1: native.Array<number>, param2: number, param3: boolean): void;
							publish(param0: string, param1: me.pushy.sdk.lib.paho.MqttMessage): void;
							setCallback(param0: me.pushy.sdk.lib.paho.MqttCallback): void;
							getTopic(param0: string): me.pushy.sdk.lib.paho.MqttTopic;
							isConnected(): boolean;
							getClientId(): string;
							getServerURI(): string;
							getPendingDeliveryTokens(): native.Array<me.pushy.sdk.lib.paho.IMqttDeliveryToken>;
							setManualAcks(param0: boolean): void;
							messageArrivedComplete(param0: number, param1: number): void;
							close(): void;
						});
						public constructor();
						public getPendingDeliveryTokens(): native.Array<me.pushy.sdk.lib.paho.IMqttDeliveryToken>;
						public subscribe(param0: string, param1: number): void;
						public subscribe(param0: native.Array<string>): void;
						public close(): void;
						public setCallback(param0: me.pushy.sdk.lib.paho.MqttCallback): void;
						public isConnected(): boolean;
						public subscribe(param0: string): void;
						public getClientId(): string;
						public subscribe(param0: native.Array<string>, param1: native.Array<number>): void;
						public unsubscribe(param0: string): void;
						public disconnectForcibly(param0: number): void;
						public subscribe(param0: string, param1: me.pushy.sdk.lib.paho.IMqttMessageListener): void;
						public disconnect(): void;
						public disconnect(param0: number): void;
						public disconnectForcibly(): void;
						public connect(param0: me.pushy.sdk.lib.paho.MqttConnectOptions): void;
						public setManualAcks(param0: boolean): void;
						public subscribe(param0: string, param1: number, param2: me.pushy.sdk.lib.paho.IMqttMessageListener): void;
						public subscribe(param0: native.Array<string>, param1: native.Array<number>, param2: native.Array<me.pushy.sdk.lib.paho.IMqttMessageListener>): void;
						public publish(param0: string, param1: me.pushy.sdk.lib.paho.MqttMessage): void;
						public getServerURI(): string;
						public connect(): void;
						public publish(param0: string, param1: native.Array<number>, param2: number, param3: boolean): void;
						public messageArrivedComplete(param0: number, param1: number): void;
						public connectWithResult(param0: me.pushy.sdk.lib.paho.MqttConnectOptions): me.pushy.sdk.lib.paho.IMqttToken;
						public unsubscribe(param0: native.Array<string>): void;
						public disconnectForcibly(param0: number, param1: number): void;
						public subscribe(param0: native.Array<string>, param1: native.Array<me.pushy.sdk.lib.paho.IMqttMessageListener>): void;
						public getTopic(param0: string): me.pushy.sdk.lib.paho.MqttTopic;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class IMqttDeliveryToken extends me.pushy.sdk.lib.paho.IMqttToken {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.IMqttDeliveryToken>;
						/**
						 * Constructs a new instance of the me.pushy.sdk.lib.paho.IMqttDeliveryToken interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getMessage(): me.pushy.sdk.lib.paho.MqttMessage;
							waitForCompletion(): void;
							waitForCompletion(param0: number): void;
							isComplete(): boolean;
							getException(): me.pushy.sdk.lib.paho.MqttException;
							setActionCallback(param0: me.pushy.sdk.lib.paho.IMqttActionListener): void;
							getActionCallback(): me.pushy.sdk.lib.paho.IMqttActionListener;
							getClient(): me.pushy.sdk.lib.paho.IMqttAsyncClient;
							getTopics(): native.Array<string>;
							setUserContext(param0: any): void;
							getUserContext(): any;
							getMessageId(): number;
							getGrantedQos(): native.Array<number>;
							getSessionPresent(): boolean;
							getResponse(): me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage;
						});
						public constructor();
						public getTopics(): native.Array<string>;
						public getActionCallback(): me.pushy.sdk.lib.paho.IMqttActionListener;
						public waitForCompletion(): void;
						public getResponse(): me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage;
						public getMessage(): me.pushy.sdk.lib.paho.MqttMessage;
						public getUserContext(): any;
						public getClient(): me.pushy.sdk.lib.paho.IMqttAsyncClient;
						public getSessionPresent(): boolean;
						public waitForCompletion(param0: number): void;
						public isComplete(): boolean;
						public getException(): me.pushy.sdk.lib.paho.MqttException;
						public setUserContext(param0: any): void;
						public getMessageId(): number;
						public getGrantedQos(): native.Array<number>;
						public setActionCallback(param0: me.pushy.sdk.lib.paho.IMqttActionListener): void;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class IMqttMessageListener {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.IMqttMessageListener>;
						/**
						 * Constructs a new instance of the me.pushy.sdk.lib.paho.IMqttMessageListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							messageArrived(param0: string, param1: me.pushy.sdk.lib.paho.MqttMessage): void;
						});
						public constructor();
						public messageArrived(param0: string, param1: me.pushy.sdk.lib.paho.MqttMessage): void;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class IMqttToken {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.IMqttToken>;
						/**
						 * Constructs a new instance of the me.pushy.sdk.lib.paho.IMqttToken interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							waitForCompletion(): void;
							waitForCompletion(param0: number): void;
							isComplete(): boolean;
							getException(): me.pushy.sdk.lib.paho.MqttException;
							setActionCallback(param0: me.pushy.sdk.lib.paho.IMqttActionListener): void;
							getActionCallback(): me.pushy.sdk.lib.paho.IMqttActionListener;
							getClient(): me.pushy.sdk.lib.paho.IMqttAsyncClient;
							getTopics(): native.Array<string>;
							setUserContext(param0: any): void;
							getUserContext(): any;
							getMessageId(): number;
							getGrantedQos(): native.Array<number>;
							getSessionPresent(): boolean;
							getResponse(): me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage;
						});
						public constructor();
						public getTopics(): native.Array<string>;
						public getActionCallback(): me.pushy.sdk.lib.paho.IMqttActionListener;
						public waitForCompletion(): void;
						public getResponse(): me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage;
						public getUserContext(): any;
						public getClient(): me.pushy.sdk.lib.paho.IMqttAsyncClient;
						public getSessionPresent(): boolean;
						public waitForCompletion(param0: number): void;
						public isComplete(): boolean;
						public getException(): me.pushy.sdk.lib.paho.MqttException;
						public setUserContext(param0: any): void;
						public getMessageId(): number;
						public getGrantedQos(): native.Array<number>;
						public setActionCallback(param0: me.pushy.sdk.lib.paho.IMqttActionListener): void;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class MqttAsyncClient extends me.pushy.sdk.lib.paho.IMqttAsyncClient {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.MqttAsyncClient>;
						public comms: me.pushy.sdk.lib.paho.internal.ClientComms;
						public getPendingDeliveryTokens(): native.Array<me.pushy.sdk.lib.paho.IMqttDeliveryToken>;
						public getBufferedMessageCount(): number;
						public connect(param0: any, param1: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
						public disconnect(param0: number, param1: any, param2: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
						public subscribe(param0: native.Array<string>, param1: native.Array<number>, param2: any, param3: me.pushy.sdk.lib.paho.IMqttActionListener, param4: native.Array<me.pushy.sdk.lib.paho.IMqttMessageListener>): me.pushy.sdk.lib.paho.IMqttToken;
						public unsubscribe(param0: string, param1: any, param2: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
						public close(): void;
						public subscribe(param0: native.Array<string>, param1: native.Array<number>, param2: any, param3: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
						public constructor(param0: string, param1: string, param2: me.pushy.sdk.lib.paho.MqttClientPersistence, param3: me.pushy.sdk.lib.paho.MqttPingSender);
						public constructor(param0: string, param1: string, param2: me.pushy.sdk.lib.paho.MqttClientPersistence);
						public getClientId(): string;
						public reconnect(): void;
						public createNetworkModules(param0: string, param1: me.pushy.sdk.lib.paho.MqttConnectOptions): native.Array<me.pushy.sdk.lib.paho.internal.NetworkModule>;
						public publish(param0: string, param1: native.Array<number>, param2: number, param3: boolean, param4: any, param5: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttDeliveryToken;
						public constructor(param0: string, param1: string);
						public static generateClientId(): string;
						public getDebug(): me.pushy.sdk.lib.paho.util.Debug;
						public subscribe(param0: string, param1: number, param2: any, param3: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
						public publish(param0: string, param1: native.Array<number>, param2: number, param3: boolean): me.pushy.sdk.lib.paho.IMqttDeliveryToken;
						public setBufferOpts(param0: me.pushy.sdk.lib.paho.DisconnectedBufferOptions): void;
						public disconnect(param0: any, param1: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
						public messageArrivedComplete(param0: number, param1: number): void;
						public deleteBufferedMessage(param0: number): void;
						public unsubscribe(param0: native.Array<string>): me.pushy.sdk.lib.paho.IMqttToken;
						public subscribe(param0: string, param1: number, param2: any, param3: me.pushy.sdk.lib.paho.IMqttActionListener, param4: me.pushy.sdk.lib.paho.IMqttMessageListener): me.pushy.sdk.lib.paho.IMqttToken;
						public unsubscribe(param0: native.Array<string>, param1: any, param2: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
						public connect(): me.pushy.sdk.lib.paho.IMqttToken;
						public publish(param0: string, param1: me.pushy.sdk.lib.paho.MqttMessage): me.pushy.sdk.lib.paho.IMqttDeliveryToken;
						public setCallback(param0: me.pushy.sdk.lib.paho.MqttCallback): void;
						public isConnected(): boolean;
						public disconnect(): me.pushy.sdk.lib.paho.IMqttToken;
						public disconnectForcibly(param0: number): void;
						public subscribe(param0: string, param1: number, param2: me.pushy.sdk.lib.paho.IMqttMessageListener): me.pushy.sdk.lib.paho.IMqttToken;
						public getBufferedMessage(param0: number): me.pushy.sdk.lib.paho.MqttMessage;
						public disconnectForcibly(): void;
						public disconnect(param0: number): me.pushy.sdk.lib.paho.IMqttToken;
						public setManualAcks(param0: boolean): void;
						public subscribe(param0: string, param1: number): me.pushy.sdk.lib.paho.IMqttToken;
						public subscribe(param0: native.Array<string>, param1: native.Array<number>, param2: native.Array<me.pushy.sdk.lib.paho.IMqttMessageListener>): me.pushy.sdk.lib.paho.IMqttToken;
						public unsubscribe(param0: string): me.pushy.sdk.lib.paho.IMqttToken;
						public connect(param0: me.pushy.sdk.lib.paho.MqttConnectOptions, param1: any, param2: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
						public checkPing(param0: any, param1: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttToken;
						public getServerURI(): string;
						public subscribe(param0: native.Array<string>, param1: native.Array<number>): me.pushy.sdk.lib.paho.IMqttToken;
						public publish(param0: string, param1: me.pushy.sdk.lib.paho.MqttMessage, param2: any, param3: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.IMqttDeliveryToken;
						public static Character_isHighSurrogate(param0: string): boolean;
						public disconnectForcibly(param0: number, param1: number): void;
						public getTopic(param0: string): me.pushy.sdk.lib.paho.MqttTopic;
						public connect(param0: me.pushy.sdk.lib.paho.MqttConnectOptions): me.pushy.sdk.lib.paho.IMqttToken;
						public getCurrentServerURI(): string;
					}
					export module MqttAsyncClient {
						export class ReconnectTask {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.MqttAsyncClient.ReconnectTask>;
							public run(): void;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class MqttCallback {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.MqttCallback>;
						/**
						 * Constructs a new instance of the me.pushy.sdk.lib.paho.MqttCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							connectionLost(param0: java.lang.Throwable): void;
							messageArrived(param0: string, param1: me.pushy.sdk.lib.paho.MqttMessage): void;
							deliveryComplete(param0: me.pushy.sdk.lib.paho.IMqttDeliveryToken): void;
						});
						public constructor();
						public connectionLost(param0: java.lang.Throwable): void;
						public deliveryComplete(param0: me.pushy.sdk.lib.paho.IMqttDeliveryToken): void;
						public messageArrived(param0: string, param1: me.pushy.sdk.lib.paho.MqttMessage): void;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class MqttCallbackExtended extends me.pushy.sdk.lib.paho.MqttCallback {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.MqttCallbackExtended>;
						/**
						 * Constructs a new instance of the me.pushy.sdk.lib.paho.MqttCallbackExtended interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							connectComplete(param0: boolean, param1: string): void;
							connectionLost(param0: java.lang.Throwable): void;
							messageArrived(param0: string, param1: me.pushy.sdk.lib.paho.MqttMessage): void;
							deliveryComplete(param0: me.pushy.sdk.lib.paho.IMqttDeliveryToken): void;
						});
						public constructor();
						public connectionLost(param0: java.lang.Throwable): void;
						public connectComplete(param0: boolean, param1: string): void;
						public deliveryComplete(param0: me.pushy.sdk.lib.paho.IMqttDeliveryToken): void;
						public messageArrived(param0: string, param1: me.pushy.sdk.lib.paho.MqttMessage): void;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class MqttClient extends me.pushy.sdk.lib.paho.IMqttClient {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.MqttClient>;
						public aClient: me.pushy.sdk.lib.paho.MqttAsyncClient;
						public timeToWait: number;
						public getPendingDeliveryTokens(): native.Array<me.pushy.sdk.lib.paho.IMqttDeliveryToken>;
						public subscribe(param0: string, param1: number): void;
						public subscribe(param0: native.Array<string>): void;
						public close(): void;
						public setCallback(param0: me.pushy.sdk.lib.paho.MqttCallback): void;
						public constructor(param0: string, param1: string, param2: me.pushy.sdk.lib.paho.MqttClientPersistence);
						public isConnected(): boolean;
						public subscribe(param0: string): void;
						public getClientId(): string;
						public reconnect(): void;
						public subscribe(param0: native.Array<string>, param1: native.Array<number>): void;
						public unsubscribe(param0: string): void;
						public disconnectForcibly(param0: number): void;
						public subscribe(param0: string, param1: me.pushy.sdk.lib.paho.IMqttMessageListener): void;
						public disconnect(): void;
						public disconnect(param0: number): void;
						public disconnectForcibly(): void;
						public connect(param0: me.pushy.sdk.lib.paho.MqttConnectOptions): void;
						public constructor(param0: string, param1: string);
						public setManualAcks(param0: boolean): void;
						public static generateClientId(): string;
						public getDebug(): me.pushy.sdk.lib.paho.util.Debug;
						public getTimeToWait(): number;
						public subscribe(param0: string, param1: number, param2: me.pushy.sdk.lib.paho.IMqttMessageListener): void;
						public subscribe(param0: native.Array<string>, param1: native.Array<number>, param2: native.Array<me.pushy.sdk.lib.paho.IMqttMessageListener>): void;
						public publish(param0: string, param1: me.pushy.sdk.lib.paho.MqttMessage): void;
						public getServerURI(): string;
						public connect(): void;
						public publish(param0: string, param1: native.Array<number>, param2: number, param3: boolean): void;
						public messageArrivedComplete(param0: number, param1: number): void;
						public connectWithResult(param0: me.pushy.sdk.lib.paho.MqttConnectOptions): me.pushy.sdk.lib.paho.IMqttToken;
						public unsubscribe(param0: native.Array<string>): void;
						public disconnectForcibly(param0: number, param1: number): void;
						public subscribe(param0: native.Array<string>, param1: native.Array<me.pushy.sdk.lib.paho.IMqttMessageListener>): void;
						public getTopic(param0: string): me.pushy.sdk.lib.paho.MqttTopic;
						public setTimeToWait(param0: number): void;
						public getCurrentServerURI(): string;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class MqttClientPersistence {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.MqttClientPersistence>;
						/**
						 * Constructs a new instance of the me.pushy.sdk.lib.paho.MqttClientPersistence interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							open(param0: string, param1: string): void;
							close(): void;
							put(param0: string, param1: me.pushy.sdk.lib.paho.MqttPersistable): void;
							get(param0: string): me.pushy.sdk.lib.paho.MqttPersistable;
							remove(param0: string): void;
							keys(): java.util.Enumeration;
							clear(): void;
							containsKey(param0: string): boolean;
						});
						public constructor();
						public containsKey(param0: string): boolean;
						public get(param0: string): me.pushy.sdk.lib.paho.MqttPersistable;
						public open(param0: string, param1: string): void;
						public close(): void;
						public put(param0: string, param1: me.pushy.sdk.lib.paho.MqttPersistable): void;
						public remove(param0: string): void;
						public clear(): void;
						public keys(): java.util.Enumeration;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class MqttConnectOptions {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.MqttConnectOptions>;
						public static KEEP_ALIVE_INTERVAL_DEFAULT: number;
						public static CONNECTION_TIMEOUT_DEFAULT: number;
						public static MAX_INFLIGHT_DEFAULT: number;
						public static CLEAN_SESSION_DEFAULT: boolean;
						public static MQTT_VERSION_DEFAULT: number;
						public static MQTT_VERSION_3_1: number;
						public static MQTT_VERSION_3_1_1: number;
						public static URI_TYPE_TCP: number;
						public static URI_TYPE_SSL: number;
						public static URI_TYPE_LOCAL: number;
						public static URI_TYPE_WS: number;
						public static URI_TYPE_WSS: number;
						public static validateURI(param0: string): number;
						public getMqttVersion(): number;
						public setWill(param0: string, param1: me.pushy.sdk.lib.paho.MqttMessage, param2: number, param3: boolean): void;
						public getSSLProperties(): java.util.Properties;
						public getDebug(): java.util.Properties;
						public isAutomaticReconnect(): boolean;
						public setAutomaticReconnect(param0: boolean): void;
						public getWillDestination(): string;
						public isCleanSession(): boolean;
						public getMaxInflight(): number;
						public constructor();
						public setMaxInflight(param0: number): void;
						public getConnectionTimeout(): number;
						public getWillMessage(): me.pushy.sdk.lib.paho.MqttMessage;
						public getUserName(): string;
						public setSocketFactory(param0: javax.net.SocketFactory): void;
						public setServerURIs(param0: native.Array<string>): void;
						public setWill(param0: me.pushy.sdk.lib.paho.MqttTopic, param1: native.Array<number>, param2: number, param3: boolean): void;
						public getKeepAliveInterval(): number;
						public getPassword(): native.Array<string>;
						public setMqttVersion(param0: number): void;
						public toString(): string;
						public setUserName(param0: string): void;
						public setWill(param0: string, param1: native.Array<number>, param2: number, param3: boolean): void;
						public setSSLProperties(param0: java.util.Properties): void;
						public setCleanSession(param0: boolean): void;
						public getSocketFactory(): javax.net.SocketFactory;
						public setPassword(param0: native.Array<string>): void;
						public setKeepAliveInterval(param0: number): void;
						public setConnectionTimeout(param0: number): void;
						public getServerURIs(): native.Array<string>;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class MqttDeliveryToken extends me.pushy.sdk.lib.paho.MqttToken implements me.pushy.sdk.lib.paho.IMqttDeliveryToken {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.MqttDeliveryToken>;
						public getTopics(): native.Array<string>;
						public constructor();
						public getActionCallback(): me.pushy.sdk.lib.paho.IMqttActionListener;
						public waitForCompletion(): void;
						public getResponse(): me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage;
						public getMessage(): me.pushy.sdk.lib.paho.MqttMessage;
						public getUserContext(): any;
						public getClient(): me.pushy.sdk.lib.paho.IMqttAsyncClient;
						public getSessionPresent(): boolean;
						public setMessage(param0: me.pushy.sdk.lib.paho.MqttMessage): void;
						public waitForCompletion(param0: number): void;
						public isComplete(): boolean;
						public getException(): me.pushy.sdk.lib.paho.MqttException;
						public setUserContext(param0: any): void;
						public getMessageId(): number;
						public getGrantedQos(): native.Array<number>;
						public setActionCallback(param0: me.pushy.sdk.lib.paho.IMqttActionListener): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class MqttException {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.MqttException>;
						public static REASON_CODE_CLIENT_EXCEPTION: number;
						public static REASON_CODE_INVALID_PROTOCOL_VERSION: number;
						public static REASON_CODE_INVALID_CLIENT_ID: number;
						public static REASON_CODE_BROKER_UNAVAILABLE: number;
						public static REASON_CODE_FAILED_AUTHENTICATION: number;
						public static REASON_CODE_NOT_AUTHORIZED: number;
						public static REASON_CODE_UNEXPECTED_ERROR: number;
						public static REASON_CODE_SUBSCRIBE_FAILED: number;
						public static REASON_CODE_CLIENT_TIMEOUT: number;
						public static REASON_CODE_NO_MESSAGE_IDS_AVAILABLE: number;
						public static REASON_CODE_WRITE_TIMEOUT: number;
						public static REASON_CODE_CLIENT_CONNECTED: number;
						public static REASON_CODE_CLIENT_ALREADY_DISCONNECTED: number;
						public static REASON_CODE_CLIENT_DISCONNECTING: number;
						public static REASON_CODE_SERVER_CONNECT_ERROR: number;
						public static REASON_CODE_CLIENT_NOT_CONNECTED: number;
						public static REASON_CODE_SOCKET_FACTORY_MISMATCH: number;
						public static REASON_CODE_SSL_CONFIG_ERROR: number;
						public static REASON_CODE_CLIENT_DISCONNECT_PROHIBITED: number;
						public static REASON_CODE_INVALID_MESSAGE: number;
						public static REASON_CODE_CONNECTION_LOST: number;
						public static REASON_CODE_CONNECT_IN_PROGRESS: number;
						public static REASON_CODE_CLIENT_CLOSED: number;
						public static REASON_CODE_TOKEN_INUSE: number;
						public static REASON_CODE_MAX_INFLIGHT: number;
						public static REASON_CODE_DISCONNECTED_BUFFER_FULL: number;
						public constructor(param0: number, param1: java.lang.Throwable);
						public getMessage(): string;
						public getCause(): java.lang.Throwable;
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: number);
						public getReasonCode(): number;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class MqttMessage {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.MqttMessage>;
						public constructor();
						public isRetained(): boolean;
						public constructor(param0: native.Array<number>);
						public clearPayload(): void;
						public toString(): string;
						public setId(param0: number): void;
						public getId(): number;
						public setPayload(param0: native.Array<number>): void;
						public setMutable(param0: boolean): void;
						public getPayload(): native.Array<number>;
						public getQos(): number;
						public setQos(param0: number): void;
						public setDuplicate(param0: boolean): void;
						public isDuplicate(): boolean;
						public setRetained(param0: boolean): void;
						public static validateQos(param0: number): void;
						public checkMutable(): void;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class MqttPersistable {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.MqttPersistable>;
						/**
						 * Constructs a new instance of the me.pushy.sdk.lib.paho.MqttPersistable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getHeaderBytes(): native.Array<number>;
							getHeaderLength(): number;
							getHeaderOffset(): number;
							getPayloadBytes(): native.Array<number>;
							getPayloadLength(): number;
							getPayloadOffset(): number;
						});
						public constructor();
						public getPayloadOffset(): number;
						public getPayloadBytes(): native.Array<number>;
						public getHeaderBytes(): native.Array<number>;
						public getHeaderLength(): number;
						public getPayloadLength(): number;
						public getHeaderOffset(): number;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class MqttPersistenceException extends me.pushy.sdk.lib.paho.MqttException {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.MqttPersistenceException>;
						public static REASON_CODE_PERSISTENCE_IN_USE: number;
						public constructor(param0: number, param1: java.lang.Throwable);
						public constructor();
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: number);
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class MqttPingSender {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.MqttPingSender>;
						/**
						 * Constructs a new instance of the me.pushy.sdk.lib.paho.MqttPingSender interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							init(param0: me.pushy.sdk.lib.paho.internal.ClientComms): void;
							start(): void;
							stop(): void;
							schedule(param0: number): void;
						});
						public constructor();
						public start(): void;
						public schedule(param0: number): void;
						public stop(): void;
						public init(param0: me.pushy.sdk.lib.paho.internal.ClientComms): void;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class MqttSecurityException extends me.pushy.sdk.lib.paho.MqttException {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.MqttSecurityException>;
						public constructor(param0: number, param1: java.lang.Throwable);
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: number);
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class MqttToken extends me.pushy.sdk.lib.paho.IMqttToken {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.MqttToken>;
						public internalTok: me.pushy.sdk.lib.paho.internal.Token;
						public getTopics(): native.Array<string>;
						public constructor();
						public getActionCallback(): me.pushy.sdk.lib.paho.IMqttActionListener;
						public waitForCompletion(): void;
						public getResponse(): me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage;
						public getUserContext(): any;
						public getClient(): me.pushy.sdk.lib.paho.IMqttAsyncClient;
						public getSessionPresent(): boolean;
						public getException(): me.pushy.sdk.lib.paho.MqttException;
						public isComplete(): boolean;
						public waitForCompletion(param0: number): void;
						public setUserContext(param0: any): void;
						public getMessageId(): number;
						public getGrantedQos(): native.Array<number>;
						public setActionCallback(param0: me.pushy.sdk.lib.paho.IMqttActionListener): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class MqttTopic {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.MqttTopic>;
						public static TOPIC_LEVEL_SEPARATOR: string;
						public static MULTI_LEVEL_WILDCARD: string;
						public static SINGLE_LEVEL_WILDCARD: string;
						public static MULTI_LEVEL_WILDCARD_PATTERN: string;
						public static TOPIC_WILDCARDS: string;
						public publish(param0: native.Array<number>, param1: number, param2: boolean): me.pushy.sdk.lib.paho.MqttDeliveryToken;
						public constructor(param0: string, param1: me.pushy.sdk.lib.paho.internal.ClientComms);
						public static isMatched(param0: string, param1: string): boolean;
						public static validate(param0: string, param1: boolean): void;
						public getName(): string;
						public toString(): string;
						public publish(param0: me.pushy.sdk.lib.paho.MqttMessage): me.pushy.sdk.lib.paho.MqttDeliveryToken;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export class TimerPingSender extends me.pushy.sdk.lib.paho.MqttPingSender {
						public static class: java.lang.Class<me.pushy.sdk.lib.paho.TimerPingSender>;
						public constructor();
						public start(): void;
						public schedule(param0: number): void;
						public stop(): void;
						public init(param0: me.pushy.sdk.lib.paho.internal.ClientComms): void;
					}
					export module TimerPingSender {
						export class PingTask {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.TimerPingSender.PingTask>;
							public run(): void;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export class ClientComms {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.ClientComms>;
							public static VERSION: string;
							public static BUILD_LEVEL: string;
							public connectComplete(param0: me.pushy.sdk.lib.paho.internal.wire.MqttConnack, param1: me.pushy.sdk.lib.paho.MqttException): void;
							public close(): void;
							public setCallback(param0: me.pushy.sdk.lib.paho.MqttCallback): void;
							public getTopic(param0: string): me.pushy.sdk.lib.paho.MqttTopic;
							public deliveryComplete(param0: me.pushy.sdk.lib.paho.internal.wire.MqttPublish): void;
							public sendNoWait(param0: me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage, param1: me.pushy.sdk.lib.paho.MqttToken): void;
							public isDisconnected(): boolean;
							public disconnectForcibly(param0: number, param1: number): void;
							public getClientState(): me.pushy.sdk.lib.paho.internal.ClientState;
							public checkForActivity(param0: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.MqttToken;
							public setNetworkModules(param0: native.Array<me.pushy.sdk.lib.paho.internal.NetworkModule>): void;
							public disconnect(param0: me.pushy.sdk.lib.paho.internal.wire.MqttDisconnect, param1: number, param2: me.pushy.sdk.lib.paho.MqttToken): void;
							public removeMessageListener(param0: string): void;
							public getNetworkModules(): native.Array<me.pushy.sdk.lib.paho.internal.NetworkModule>;
							public constructor(param0: me.pushy.sdk.lib.paho.IMqttAsyncClient, param1: me.pushy.sdk.lib.paho.MqttClientPersistence, param2: me.pushy.sdk.lib.paho.MqttPingSender);
							public messageArrivedComplete(param0: number, param1: number): void;
							public getNetworkModuleIndex(): number;
							public setDisconnectedMessageBuffer(param0: me.pushy.sdk.lib.paho.internal.DisconnectedMessageBuffer): void;
							public shutdownConnection(param0: me.pushy.sdk.lib.paho.MqttToken, param1: me.pushy.sdk.lib.paho.MqttException): void;
							public isResting(): boolean;
							public setReconnectCallback(param0: me.pushy.sdk.lib.paho.MqttCallbackExtended): void;
							public deliveryComplete(param0: number): void;
							public isDisconnecting(): boolean;
							public isConnected(): boolean;
							public getPendingDeliveryTokens(): native.Array<me.pushy.sdk.lib.paho.MqttDeliveryToken>;
							public isClosed(): boolean;
							public getClient(): me.pushy.sdk.lib.paho.IMqttAsyncClient;
							public setManualAcks(param0: boolean): void;
							public isConnecting(): boolean;
							public getKeepAlive(): number;
							public getDebug(): java.util.Properties;
							public setRestingState(param0: boolean): void;
							public setNetworkModuleIndex(param0: number): void;
							public getBufferedMessage(param0: number): me.pushy.sdk.lib.paho.MqttMessage;
							public deleteBufferedMessage(param0: number): void;
							public notifyReconnect(): void;
							public checkForActivity(): me.pushy.sdk.lib.paho.MqttToken;
							public getBufferedMessageCount(): number;
							public setMessageListener(param0: string, param1: me.pushy.sdk.lib.paho.IMqttMessageListener): void;
							public getConOptions(): me.pushy.sdk.lib.paho.MqttConnectOptions;
							public connect(param0: me.pushy.sdk.lib.paho.MqttConnectOptions, param1: me.pushy.sdk.lib.paho.MqttToken): void;
						}
						export module ClientComms {
							export class ConnectBG {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.ClientComms.ConnectBG>;
								public run(): void;
							}
							export class DisconnectBG {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.ClientComms.DisconnectBG>;
								public run(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export class ClientDefaults {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.ClientDefaults>;
							public static MAX_MSG_SIZE: number;
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export class ClientState {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.ClientState>;
							public close(): void;
							public deliveryComplete(param0: me.pushy.sdk.lib.paho.internal.wire.MqttPublish): void;
							public clearState(): void;
							public setMaxInflight(param0: number): void;
							public notifyComplete(param0: me.pushy.sdk.lib.paho.MqttToken): void;
							public getMaxInFlight(): number;
							public connected(): void;
							public resolveOldTokens(param0: me.pushy.sdk.lib.paho.MqttException): java.util.Vector;
							public notifySent(param0: me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage): void;
							public notifyReceivedBytes(param0: number): void;
							public checkForActivity(param0: me.pushy.sdk.lib.paho.IMqttActionListener): me.pushy.sdk.lib.paho.MqttToken;
							public constructor(param0: me.pushy.sdk.lib.paho.MqttClientPersistence, param1: me.pushy.sdk.lib.paho.internal.CommsTokenStore, param2: me.pushy.sdk.lib.paho.internal.CommsCallback, param3: me.pushy.sdk.lib.paho.internal.ClientComms, param4: me.pushy.sdk.lib.paho.MqttPingSender);
							public setCleanSession(param0: boolean): void;
							public send(param0: me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage, param1: me.pushy.sdk.lib.paho.MqttToken): void;
							public getActualInFlight(): number;
							public quiesce(param0: number): void;
							public unPersistBufferedMessage(param0: me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage): void;
							public persistBufferedMessage(param0: me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage): void;
							public getCleanSession(): boolean;
							public notifyResult(param0: me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage, param1: me.pushy.sdk.lib.paho.MqttToken, param2: me.pushy.sdk.lib.paho.MqttException): void;
							public setKeepAliveSecs(param0: number): void;
							public notifySentBytes(param0: number): void;
							public deliveryComplete(param0: number): void;
							public get(): me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage;
							public checkQuiesceLock(): boolean;
							public disconnected(param0: me.pushy.sdk.lib.paho.MqttException): void;
							public restoreState(): void;
							public notifyQueueLock(): void;
							public getKeepAlive(): number;
							public getDebug(): java.util.Properties;
							public setKeepAliveInterval(param0: number): void;
							public notifyReceivedMsg(param0: me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage): void;
							public notifyReceivedAck(param0: me.pushy.sdk.lib.paho.internal.wire.MqttAck): void;
							public undo(param0: me.pushy.sdk.lib.paho.internal.wire.MqttPublish): void;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export class CommsCallback {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.CommsCallback>;
							public running: boolean;
							public setReconnectCallback(param0: me.pushy.sdk.lib.paho.MqttCallbackExtended): void;
							public setCallback(param0: me.pushy.sdk.lib.paho.MqttCallback): void;
							public deliverMessage(param0: string, param1: number, param2: me.pushy.sdk.lib.paho.MqttMessage): boolean;
							public isQuiesced(): boolean;
							public fireActionEvent(param0: me.pushy.sdk.lib.paho.MqttToken): void;
							public setManualAcks(param0: boolean): void;
							public removeMessageListeners(): void;
							public setClientState(param0: me.pushy.sdk.lib.paho.internal.ClientState): void;
							public getThread(): java.lang.Thread;
							public quiesce(): void;
							public start(param0: string): void;
							public removeMessageListener(param0: string): void;
							public stop(): void;
							public messageArrived(param0: me.pushy.sdk.lib.paho.internal.wire.MqttPublish): void;
							public connectionLost(param0: me.pushy.sdk.lib.paho.MqttException): void;
							public messageArrivedComplete(param0: number, param1: number): void;
							public setMessageListener(param0: string, param1: me.pushy.sdk.lib.paho.IMqttMessageListener): void;
							public asyncOperationComplete(param0: me.pushy.sdk.lib.paho.MqttToken): void;
							public run(): void;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export class CommsReceiver {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.CommsReceiver>;
							public isReceiving(): boolean;
							public isRunning(): boolean;
							public start(param0: string): void;
							public stop(): void;
							public constructor(param0: me.pushy.sdk.lib.paho.internal.ClientComms, param1: me.pushy.sdk.lib.paho.internal.ClientState, param2: me.pushy.sdk.lib.paho.internal.CommsTokenStore, param3: java.io.InputStream);
							public run(): void;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export class CommsSender {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.CommsSender>;
							public start(param0: string): void;
							public stop(): void;
							public constructor(param0: me.pushy.sdk.lib.paho.internal.ClientComms, param1: me.pushy.sdk.lib.paho.internal.ClientState, param2: me.pushy.sdk.lib.paho.internal.CommsTokenStore, param3: java.io.OutputStream);
							public run(): void;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export class CommsTokenStore {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.CommsTokenStore>;
							public getOutstandingDelTokens(): native.Array<me.pushy.sdk.lib.paho.MqttDeliveryToken>;
							public saveToken(param0: me.pushy.sdk.lib.paho.MqttToken, param1: string): void;
							public getToken(param0: me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage): me.pushy.sdk.lib.paho.MqttToken;
							public saveToken(param0: me.pushy.sdk.lib.paho.MqttToken, param1: me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage): void;
							public clear(): void;
							public removeToken(param0: me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage): me.pushy.sdk.lib.paho.MqttToken;
							public count(): number;
							public toString(): string;
							public restoreToken(param0: me.pushy.sdk.lib.paho.internal.wire.MqttPublish): me.pushy.sdk.lib.paho.MqttDeliveryToken;
							public getToken(param0: string): me.pushy.sdk.lib.paho.MqttToken;
							public constructor(param0: string);
							public removeToken(param0: string): me.pushy.sdk.lib.paho.MqttToken;
							public quiesce(param0: me.pushy.sdk.lib.paho.MqttException): void;
							public open(): void;
							public getOutstandingTokens(): java.util.Vector;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export class ConnectActionListener extends me.pushy.sdk.lib.paho.IMqttActionListener {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.ConnectActionListener>;
							public onSuccess(param0: me.pushy.sdk.lib.paho.IMqttToken): void;
							public setMqttCallbackExtended(param0: me.pushy.sdk.lib.paho.MqttCallbackExtended): void;
							public connect(): void;
							public constructor(param0: me.pushy.sdk.lib.paho.MqttAsyncClient, param1: me.pushy.sdk.lib.paho.MqttClientPersistence, param2: me.pushy.sdk.lib.paho.internal.ClientComms, param3: me.pushy.sdk.lib.paho.MqttConnectOptions, param4: me.pushy.sdk.lib.paho.MqttToken, param5: any, param6: me.pushy.sdk.lib.paho.IMqttActionListener, param7: boolean);
							public onFailure(param0: me.pushy.sdk.lib.paho.IMqttToken, param1: java.lang.Throwable): void;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export class DestinationProvider {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.DestinationProvider>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.paho.internal.DestinationProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getTopic(param0: string): me.pushy.sdk.lib.paho.MqttTopic;
							});
							public constructor();
							public getTopic(param0: string): me.pushy.sdk.lib.paho.MqttTopic;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export class DisconnectedMessageBuffer {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.DisconnectedMessageBuffer>;
							public putMessage(param0: me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage, param1: me.pushy.sdk.lib.paho.MqttToken): void;
							public setPublishCallback(param0: me.pushy.sdk.lib.paho.internal.IDisconnectedBufferCallback): void;
							public deleteMessage(param0: number): void;
							public getMessageCount(): number;
							public constructor(param0: me.pushy.sdk.lib.paho.DisconnectedBufferOptions);
							public getMessage(param0: number): me.pushy.sdk.lib.paho.BufferedMessage;
							public run(): void;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export class ExceptionHelper {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.ExceptionHelper>;
							public static isClassAvailable(param0: string): boolean;
							public static createMqttException(param0: java.lang.Throwable): me.pushy.sdk.lib.paho.MqttException;
							public static createMqttException(param0: number): me.pushy.sdk.lib.paho.MqttException;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export class FileLock {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.FileLock>;
							public release(): void;
							public constructor(param0: java.io.File, param1: string);
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export class IDisconnectedBufferCallback {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.IDisconnectedBufferCallback>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.paho.internal.IDisconnectedBufferCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								publishBufferedMessage(param0: me.pushy.sdk.lib.paho.BufferedMessage): void;
							});
							public constructor();
							public publishBufferedMessage(param0: me.pushy.sdk.lib.paho.BufferedMessage): void;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export class LocalNetworkModule extends me.pushy.sdk.lib.paho.internal.NetworkModule {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.LocalNetworkModule>;
							public getOutputStream(): java.io.OutputStream;
							public constructor(param0: string);
							public stop(): void;
							public start(): void;
							public getInputStream(): java.io.InputStream;
							public getServerURI(): string;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export abstract class MessageCatalog {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.MessageCatalog>;
							public constructor();
							public static getMessage(param0: number): string;
							public getLocalizedMessage(param0: number): string;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export class MqttPersistentData extends me.pushy.sdk.lib.paho.MqttPersistable {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.MqttPersistentData>;
							public getHeaderBytes(): native.Array<number>;
							public getHeaderLength(): number;
							public getKey(): string;
							public getHeaderOffset(): number;
							public getPayloadLength(): number;
							public getPayloadBytes(): native.Array<number>;
							public constructor(param0: string, param1: native.Array<number>, param2: number, param3: number, param4: native.Array<number>, param5: number, param6: number);
							public getPayloadOffset(): number;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export class NetworkModule {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.NetworkModule>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.paho.internal.NetworkModule interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								start(): void;
								getInputStream(): java.io.InputStream;
								getOutputStream(): java.io.OutputStream;
								stop(): void;
								getServerURI(): string;
							});
							public constructor();
							public getOutputStream(): java.io.OutputStream;
							public stop(): void;
							public start(): void;
							public getInputStream(): java.io.InputStream;
							public getServerURI(): string;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export class ResourceBundleCatalog extends me.pushy.sdk.lib.paho.internal.MessageCatalog {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.ResourceBundleCatalog>;
							public constructor();
							public getLocalizedMessage(param0: number): string;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export class SSLNetworkModule extends me.pushy.sdk.lib.paho.internal.TCPNetworkModule {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.SSLNetworkModule>;
							public getOutputStream(): java.io.OutputStream;
							public constructor(param0: javax.net.SocketFactory, param1: string, param2: number, param3: string);
							public setEnabledCiphers(param0: native.Array<string>): void;
							public stop(): void;
							public getEnabledCiphers(): native.Array<string>;
							public start(): void;
							public getInputStream(): java.io.InputStream;
							public constructor(param0: javax.net.ssl.SSLSocketFactory, param1: string, param2: number, param3: string);
							public getServerURI(): string;
							public setSSLhandshakeTimeout(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export class TCPNetworkModule extends me.pushy.sdk.lib.paho.internal.NetworkModule {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.TCPNetworkModule>;
							public socket: java.net.Socket;
							public getOutputStream(): java.io.OutputStream;
							public constructor(param0: javax.net.SocketFactory, param1: string, param2: number, param3: string);
							public stop(): void;
							public start(): void;
							public getInputStream(): java.io.InputStream;
							public setConnectTimeout(param0: number): void;
							public getServerURI(): string;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export class Token {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.Token>;
							public message: me.pushy.sdk.lib.paho.MqttMessage;
							public waitUntilSent(): void;
							public getActionCallback(): me.pushy.sdk.lib.paho.IMqttActionListener;
							public waitForCompletion(): void;
							public waitForResponse(param0: number): me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage;
							public setKey(param0: string): void;
							public getException(): me.pushy.sdk.lib.paho.MqttException;
							public setMessage(param0: me.pushy.sdk.lib.paho.MqttMessage): void;
							public isInUse(): boolean;
							public toString(): string;
							public getWireMessage(): me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage;
							public isCompletePending(): boolean;
							public markComplete(param0: me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage, param1: me.pushy.sdk.lib.paho.MqttException): void;
							public getGrantedQos(): native.Array<number>;
							public reset(): void;
							public getMessage(): me.pushy.sdk.lib.paho.MqttMessage;
							public waitForCompletion(param0: number): void;
							public constructor(param0: string);
							public checkResult(): boolean;
							public getUserContext(): any;
							public setUserContext(param0: any): void;
							public setTopics(param0: native.Array<string>): void;
							public waitForResponse(): me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage;
							public setException(param0: me.pushy.sdk.lib.paho.MqttException): void;
							public setClient(param0: me.pushy.sdk.lib.paho.IMqttAsyncClient): void;
							public getResponse(): me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage;
							public getClient(): me.pushy.sdk.lib.paho.IMqttAsyncClient;
							public setActionCallback(param0: me.pushy.sdk.lib.paho.IMqttActionListener): void;
							public getTopics(): native.Array<string>;
							public isNotified(): boolean;
							public isComplete(): boolean;
							public getKey(): string;
							public getMessageID(): number;
							public notifyComplete(): void;
							public getSessionPresent(): boolean;
							public setMessageID(param0: number): void;
							public notifySent(): void;
							public setNotified(param0: boolean): void;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module security {
							export class SSLSocketFactoryFactory {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.security.SSLSocketFactoryFactory>;
								public static SSLPROTOCOL: string;
								public static JSSEPROVIDER: string;
								public static KEYSTORE: string;
								public static KEYSTOREPWD: string;
								public static KEYSTORETYPE: string;
								public static KEYSTOREPROVIDER: string;
								public static KEYSTOREMGR: string;
								public static TRUSTSTORE: string;
								public static TRUSTSTOREPWD: string;
								public static TRUSTSTORETYPE: string;
								public static TRUSTSTOREPROVIDER: string;
								public static TRUSTSTOREMGR: string;
								public static CIPHERSUITES: string;
								public static CLIENTAUTH: string;
								public static SYSKEYSTORE: string;
								public static SYSKEYSTORETYPE: string;
								public static SYSKEYSTOREPWD: string;
								public static SYSTRUSTSTORE: string;
								public static SYSTRUSTSTORETYPE: string;
								public static SYSTRUSTSTOREPWD: string;
								public static SYSKEYMGRALGO: string;
								public static SYSTRUSTMGRALGO: string;
								public static DEFAULT_PROTOCOL: string;
								public static unpackCipherSuites(param0: string): native.Array<string>;
								public getTrustStoreType(param0: string): string;
								public getJSSEProvider(param0: string): string;
								public static toByte(param0: native.Array<string>): native.Array<number>;
								public getTrustStorePassword(param0: string): native.Array<string>;
								public createSocketFactory(param0: string): javax.net.ssl.SSLSocketFactory;
								public constructor(param0: me.pushy.sdk.lib.paho.logging.Logger);
								public static deObfuscate(param0: string): native.Array<string>;
								public merge(param0: java.util.Properties, param1: string): void;
								public static packCipherSuites(param0: native.Array<string>): string;
								public getSSLProtocol(param0: string): string;
								public remove(param0: string): boolean;
								public initialize(param0: java.util.Properties, param1: string): void;
								public getTrustStore(param0: string): string;
								public getKeyStorePassword(param0: string): native.Array<string>;
								public getEnabledCipherSuites(param0: string): native.Array<string>;
								public getKeyStoreType(param0: string): string;
								public getKeyStoreProvider(param0: string): string;
								public getConfiguration(param0: string): java.util.Properties;
								public getTrustStoreProvider(param0: string): string;
								public constructor();
								public static isSupportedOnJVM(): boolean;
								public static toChar(param0: native.Array<number>): native.Array<string>;
								public getKeyManager(param0: string): string;
								public getKeyStore(param0: string): string;
								public static obfuscate(param0: native.Array<string>): string;
								public getClientAuthentication(param0: string): boolean;
								public getTrustManager(param0: string): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module security {
							export class SimpleBase64Encoder {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.security.SimpleBase64Encoder>;
								public static encode(param0: native.Array<number>): string;
								public constructor();
								public static decode(param0: string): native.Array<number>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module websocket {
							export class Base64 {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.websocket.Base64>;
								public static encode(param0: string): string;
								public constructor();
								public static encodeBytes(param0: native.Array<number>): string;
							}
							export module Base64 {
								export class Base64Encoder {
									public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.websocket.Base64.Base64Encoder>;
									public flushSpi(): void;
									public syncSpi(): void;
									public childSpi(param0: string): java.util.prefs.AbstractPreferences;
									public constructor(param0: me.pushy.sdk.lib.paho.internal.websocket.Base64);
									public getBase64String(): string;
									public childrenNamesSpi(): native.Array<string>;
									public putSpi(param0: string, param1: string): void;
									public removeSpi(param0: string): void;
									public getSpi(param0: string): string;
									public removeNodeSpi(): void;
									public keysSpi(): native.Array<string>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module websocket {
							export class HandshakeFailedException {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.websocket.HandshakeFailedException>;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module websocket {
							export class WebSocketFrame {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.websocket.WebSocketFrame>;
								public static frameLengthOverhead: number;
								public static appendFinAndOpCode(param0: java.nio.ByteBuffer, param1: number, param2: boolean): void;
								public static appendLengthAndMask(param0: java.nio.ByteBuffer, param1: number, param2: native.Array<number>): void;
								public getOpcode(): number;
								public constructor(param0: java.io.InputStream);
								public encodeFrame(): native.Array<number>;
								public isCloseFlag(): boolean;
								public constructor(param0: number, param1: boolean, param2: native.Array<number>);
								public static generateMaskingKey(): native.Array<number>;
								public getPayload(): native.Array<number>;
								public constructor(param0: native.Array<number>);
								public isFin(): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module websocket {
							export class WebSocketHandshake {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.websocket.WebSocketHandshake>;
								public constructor(param0: java.io.InputStream, param1: java.io.OutputStream, param2: string, param3: string, param4: number);
								public execute(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module websocket {
							export class WebSocketNetworkModule extends me.pushy.sdk.lib.paho.internal.TCPNetworkModule {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.websocket.WebSocketNetworkModule>;
								public constructor(param0: javax.net.SocketFactory, param1: string, param2: number, param3: string);
								public getOutputStream(): java.io.OutputStream;
								public constructor(param0: javax.net.SocketFactory, param1: string, param2: string, param3: number, param4: string);
								public stop(): void;
								public getServerURI(): string;
								public start(): void;
								public getInputStream(): java.io.InputStream;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module websocket {
							export class WebSocketReceiver {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.websocket.WebSocketReceiver>;
								public isReceiving(): boolean;
								public isRunning(): boolean;
								public stop(): void;
								public run(): void;
								public constructor(param0: java.io.InputStream, param1: java.io.PipedInputStream);
								public start(param0: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module websocket {
							export class WebSocketSecureNetworkModule extends me.pushy.sdk.lib.paho.internal.SSLNetworkModule {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.websocket.WebSocketSecureNetworkModule>;
								public constructor(param0: javax.net.ssl.SSLSocketFactory, param1: string, param2: number, param3: string);
								public constructor(param0: javax.net.SocketFactory, param1: string, param2: number, param3: string);
								public getOutputStream(): java.io.OutputStream;
								public stop(): void;
								public getServerURI(): string;
								public constructor(param0: javax.net.ssl.SSLSocketFactory, param1: string, param2: string, param3: number, param4: string);
								public start(): void;
								public getInputStream(): java.io.InputStream;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export class CountingInputStream {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.CountingInputStream>;
								public getCounter(): number;
								public constructor(param0: java.io.InputStream);
								public resetCounter(): void;
								public read(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export abstract class MqttAck extends me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MqttAck>;
								public toString(): string;
								public constructor(param0: number);
								public getMessageInfo(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export class MqttConnack extends me.pushy.sdk.lib.paho.internal.wire.MqttAck {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MqttConnack>;
								public static KEY: string;
								public toString(): string;
								public constructor(param0: number);
								public getSessionPresent(): boolean;
								public constructor(param0: number, param1: native.Array<number>);
								public getReturnCode(): number;
								public isMessageIdRequired(): boolean;
								public getVariableHeader(): native.Array<number>;
								public getKey(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export class MqttConnect extends me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MqttConnect>;
								public static KEY: string;
								public toString(): string;
								public constructor(param0: number);
								public constructor(param0: number, param1: native.Array<number>);
								public isMessageIdRequired(): boolean;
								public constructor(param0: string, param1: number, param2: boolean, param3: number, param4: string, param5: native.Array<string>, param6: me.pushy.sdk.lib.paho.MqttMessage, param7: string);
								public getMessageInfo(): number;
								public getVariableHeader(): native.Array<number>;
								public getKey(): string;
								public getPayload(): native.Array<number>;
								public isCleanSession(): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export class MqttDisconnect extends me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MqttDisconnect>;
								public static KEY: string;
								public constructor(param0: number);
								public constructor(param0: number, param1: native.Array<number>);
								public isMessageIdRequired(): boolean;
								public constructor();
								public getMessageInfo(): number;
								public getVariableHeader(): native.Array<number>;
								public getKey(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export class MqttInputStream {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MqttInputStream>;
								public readMqttWireMessage(): me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage;
								public constructor(param0: me.pushy.sdk.lib.paho.internal.ClientState, param1: java.io.InputStream);
								public available(): number;
								public close(): void;
								public read(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export class MqttOutputStream {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MqttOutputStream>;
								public flush(): void;
								public write(param0: number): void;
								public constructor(param0: me.pushy.sdk.lib.paho.internal.ClientState, param1: java.io.OutputStream);
								public write(param0: native.Array<number>, param1: number, param2: number): void;
								public write(param0: native.Array<number>): void;
								public close(): void;
								public write(param0: me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export abstract class MqttPersistableWireMessage extends me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage implements me.pushy.sdk.lib.paho.MqttPersistable {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MqttPersistableWireMessage>;
								public getHeaderBytes(): native.Array<number>;
								public constructor(param0: number);
								public getPayloadOffset(): number;
								public getPayloadBytes(): native.Array<number>;
								public getHeaderLength(): number;
								public getPayloadLength(): number;
								public getHeaderOffset(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export class MqttPingReq extends me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MqttPingReq>;
								public static KEY: string;
								public constructor(param0: number);
								public constructor(param0: number, param1: native.Array<number>);
								public isMessageIdRequired(): boolean;
								public constructor();
								public getVariableHeader(): native.Array<number>;
								public getMessageInfo(): number;
								public getKey(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export class MqttPingResp extends me.pushy.sdk.lib.paho.internal.wire.MqttAck {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MqttPingResp>;
								public static KEY: string;
								public constructor(param0: number);
								public constructor(param0: number, param1: native.Array<number>);
								public isMessageIdRequired(): boolean;
								public getVariableHeader(): native.Array<number>;
								public getKey(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export class MqttPubAck extends me.pushy.sdk.lib.paho.internal.wire.MqttAck {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MqttPubAck>;
								public constructor(param0: number);
								public constructor(param0: number, param1: native.Array<number>);
								public constructor(param0: me.pushy.sdk.lib.paho.internal.wire.MqttPublish);
								public getVariableHeader(): native.Array<number>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export class MqttPubComp extends me.pushy.sdk.lib.paho.internal.wire.MqttAck {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MqttPubComp>;
								public constructor(param0: number);
								public constructor(param0: number, param1: native.Array<number>);
								public constructor(param0: me.pushy.sdk.lib.paho.internal.wire.MqttPublish);
								public getVariableHeader(): native.Array<number>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export class MqttPubRec extends me.pushy.sdk.lib.paho.internal.wire.MqttAck {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MqttPubRec>;
								public constructor(param0: number);
								public constructor(param0: number, param1: native.Array<number>);
								public constructor(param0: me.pushy.sdk.lib.paho.internal.wire.MqttPublish);
								public getVariableHeader(): native.Array<number>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export class MqttPubRel extends me.pushy.sdk.lib.paho.internal.wire.MqttPersistableWireMessage {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MqttPubRel>;
								public toString(): string;
								public getHeaderBytes(): native.Array<number>;
								public constructor(param0: number);
								public getPayloadOffset(): number;
								public constructor(param0: number, param1: native.Array<number>);
								public getPayloadBytes(): native.Array<number>;
								public getVariableHeader(): native.Array<number>;
								public getMessageInfo(): number;
								public getHeaderLength(): number;
								public getPayloadLength(): number;
								public getHeaderOffset(): number;
								public constructor(param0: me.pushy.sdk.lib.paho.internal.wire.MqttPubRec);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export class MqttPublish extends me.pushy.sdk.lib.paho.internal.wire.MqttPersistableWireMessage {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MqttPublish>;
								public toString(): string;
								public getHeaderBytes(): native.Array<number>;
								public getTopicName(): string;
								public constructor(param0: string, param1: me.pushy.sdk.lib.paho.MqttMessage);
								public getPayloadBytes(): native.Array<number>;
								public getMessageInfo(): number;
								public getVariableHeader(): native.Array<number>;
								public getHeaderLength(): number;
								public getPayload(): native.Array<number>;
								public getPayloadLength(): number;
								public static encodePayload(param0: me.pushy.sdk.lib.paho.MqttMessage): native.Array<number>;
								public constructor(param0: number);
								public getMessage(): me.pushy.sdk.lib.paho.MqttMessage;
								public getPayloadOffset(): number;
								public constructor(param0: number, param1: native.Array<number>);
								public isMessageIdRequired(): boolean;
								public setMessageId(param0: number): void;
								public getHeaderOffset(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export class MqttReceivedMessage extends me.pushy.sdk.lib.paho.MqttMessage {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MqttReceivedMessage>;
								public getMessageId(): number;
								public constructor();
								public setMessageId(param0: number): void;
								public setDuplicate(param0: boolean): void;
								public constructor(param0: native.Array<number>);
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export class MqttSuback extends me.pushy.sdk.lib.paho.internal.wire.MqttAck {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MqttSuback>;
								public toString(): string;
								public constructor(param0: number);
								public constructor(param0: number, param1: native.Array<number>);
								public getGrantedQos(): native.Array<number>;
								public getVariableHeader(): native.Array<number>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export class MqttSubscribe extends me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MqttSubscribe>;
								public toString(): string;
								public constructor(param0: number);
								public constructor(param0: number, param1: native.Array<number>);
								public getMessageInfo(): number;
								public getVariableHeader(): native.Array<number>;
								public isRetryable(): boolean;
								public constructor(param0: native.Array<string>, param1: native.Array<number>);
								public getPayload(): native.Array<number>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export class MqttUnsubAck extends me.pushy.sdk.lib.paho.internal.wire.MqttAck {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MqttUnsubAck>;
								public constructor(param0: number);
								public constructor(param0: number, param1: native.Array<number>);
								public getVariableHeader(): native.Array<number>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export class MqttUnsubscribe extends me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MqttUnsubscribe>;
								public toString(): string;
								public constructor(param0: number);
								public constructor(param0: native.Array<string>);
								public constructor(param0: number, param1: native.Array<number>);
								public getMessageInfo(): number;
								public getVariableHeader(): native.Array<number>;
								public isRetryable(): boolean;
								public getPayload(): native.Array<number>;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export abstract class MqttWireMessage {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage>;
								public static MESSAGE_TYPE_CONNECT: number;
								public static MESSAGE_TYPE_CONNACK: number;
								public static MESSAGE_TYPE_PUBLISH: number;
								public static MESSAGE_TYPE_PUBACK: number;
								public static MESSAGE_TYPE_PUBREC: number;
								public static MESSAGE_TYPE_PUBREL: number;
								public static MESSAGE_TYPE_PUBCOMP: number;
								public static MESSAGE_TYPE_SUBSCRIBE: number;
								public static MESSAGE_TYPE_SUBACK: number;
								public static MESSAGE_TYPE_UNSUBSCRIBE: number;
								public static MESSAGE_TYPE_UNSUBACK: number;
								public static MESSAGE_TYPE_PINGREQ: number;
								public static MESSAGE_TYPE_PINGRESP: number;
								public static MESSAGE_TYPE_DISCONNECT: number;
								public static STRING_ENCODING: string;
								public msgId: number;
								public duplicate: boolean;
								public static readMBI(param0: java.io.DataInputStream): me.pushy.sdk.lib.paho.internal.wire.MultiByteInteger;
								public toString(): string;
								public static createWireMessage(param0: native.Array<number>): me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage;
								public decodeUTF8(param0: java.io.DataInputStream): string;
								public getMessageInfo(): number;
								public getVariableHeader(): native.Array<number>;
								public getKey(): string;
								public getPayload(): native.Array<number>;
								public static encodeMBI(param0: number): native.Array<number>;
								public getHeader(): native.Array<number>;
								public encodeUTF8(param0: java.io.DataOutputStream, param1: string): void;
								public constructor(param0: number);
								public getType(): number;
								public getMessageId(): number;
								public encodeMessageId(): native.Array<number>;
								public isMessageIdRequired(): boolean;
								public setMessageId(param0: number): void;
								public setDuplicate(param0: boolean): void;
								public static createWireMessage(param0: me.pushy.sdk.lib.paho.MqttPersistable): me.pushy.sdk.lib.paho.internal.wire.MqttWireMessage;
								public isRetryable(): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export class MultiByteArrayInputStream {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MultiByteArrayInputStream>;
								public constructor(param0: native.Array<number>, param1: number, param2: number, param3: native.Array<number>, param4: number, param5: number);
								public read(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module internal {
						export module wire {
							export class MultiByteInteger {
								public static class: java.lang.Class<me.pushy.sdk.lib.paho.internal.wire.MultiByteInteger>;
								public constructor(param0: number);
								public getValue(): number;
								public constructor(param0: number, param1: number);
								public getEncodedLength(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module logging {
						export class DummyLogger extends me.pushy.sdk.lib.paho.logging.Logger {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.logging.DummyLogger>;
							public config(param0: string, param1: string, param2: string): void;
							public initialise(param0: java.util.ResourceBundle, param1: string, param2: string): void;
							public warning(param0: string, param1: string, param2: string, param3: native.Array<any>): void;
							public log(param0: number, param1: string, param2: string, param3: string, param4: native.Array<any>, param5: java.lang.Throwable): void;
							public severe(param0: string, param1: string, param2: string): void;
							public finer(param0: string, param1: string, param2: string, param3: native.Array<any>): void;
							public finer(param0: string, param1: string, param2: string): void;
							public formatMessage(param0: string, param1: native.Array<any>): string;
							public info(param0: string, param1: string, param2: string, param3: native.Array<any>, param4: java.lang.Throwable): void;
							public fine(param0: string, param1: string, param2: string, param3: native.Array<any>, param4: java.lang.Throwable): void;
							public finest(param0: string, param1: string, param2: string, param3: native.Array<any>): void;
							public dumpTrace(): void;
							public constructor();
							public info(param0: string, param1: string, param2: string): void;
							public finest(param0: string, param1: string, param2: string, param3: native.Array<any>, param4: java.lang.Throwable): void;
							public isLoggable(param0: number): boolean;
							public config(param0: string, param1: string, param2: string, param3: native.Array<any>): void;
							public setResourceName(param0: string): void;
							public info(param0: string, param1: string, param2: string, param3: native.Array<any>): void;
							public fine(param0: string, param1: string, param2: string): void;
							public trace(param0: number, param1: string, param2: string, param3: string, param4: native.Array<any>, param5: java.lang.Throwable): void;
							public warning(param0: string, param1: string, param2: string, param3: native.Array<any>, param4: java.lang.Throwable): void;
							public warning(param0: string, param1: string, param2: string): void;
							public severe(param0: string, param1: string, param2: string, param3: native.Array<any>, param4: java.lang.Throwable): void;
							public severe(param0: string, param1: string, param2: string, param3: native.Array<any>): void;
							public finer(param0: string, param1: string, param2: string, param3: native.Array<any>, param4: java.lang.Throwable): void;
							public fine(param0: string, param1: string, param2: string, param3: native.Array<any>): void;
							public config(param0: string, param1: string, param2: string, param3: native.Array<any>, param4: java.lang.Throwable): void;
							public finest(param0: string, param1: string, param2: string): void;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module logging {
						export class Logger {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.logging.Logger>;
							/**
							 * Constructs a new instance of the me.pushy.sdk.lib.paho.logging.Logger interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								initialise(param0: java.util.ResourceBundle, param1: string, param2: string): void;
								setResourceName(param0: string): void;
								isLoggable(param0: number): boolean;
								severe(param0: string, param1: string, param2: string): void;
								severe(param0: string, param1: string, param2: string, param3: native.Array<any>): void;
								severe(param0: string, param1: string, param2: string, param3: native.Array<any>, param4: java.lang.Throwable): void;
								warning(param0: string, param1: string, param2: string): void;
								warning(param0: string, param1: string, param2: string, param3: native.Array<any>): void;
								warning(param0: string, param1: string, param2: string, param3: native.Array<any>, param4: java.lang.Throwable): void;
								info(param0: string, param1: string, param2: string): void;
								info(param0: string, param1: string, param2: string, param3: native.Array<any>): void;
								info(param0: string, param1: string, param2: string, param3: native.Array<any>, param4: java.lang.Throwable): void;
								config(param0: string, param1: string, param2: string): void;
								config(param0: string, param1: string, param2: string, param3: native.Array<any>): void;
								config(param0: string, param1: string, param2: string, param3: native.Array<any>, param4: java.lang.Throwable): void;
								fine(param0: string, param1: string, param2: string): void;
								fine(param0: string, param1: string, param2: string, param3: native.Array<any>): void;
								fine(param0: string, param1: string, param2: string, param3: native.Array<any>, param4: java.lang.Throwable): void;
								finer(param0: string, param1: string, param2: string): void;
								finer(param0: string, param1: string, param2: string, param3: native.Array<any>): void;
								finer(param0: string, param1: string, param2: string, param3: native.Array<any>, param4: java.lang.Throwable): void;
								finest(param0: string, param1: string, param2: string): void;
								finest(param0: string, param1: string, param2: string, param3: native.Array<any>): void;
								finest(param0: string, param1: string, param2: string, param3: native.Array<any>, param4: java.lang.Throwable): void;
								log(param0: number, param1: string, param2: string, param3: string, param4: native.Array<any>, param5: java.lang.Throwable): void;
								trace(param0: number, param1: string, param2: string, param3: string, param4: native.Array<any>, param5: java.lang.Throwable): void;
								formatMessage(param0: string, param1: native.Array<any>): string;
								dumpTrace(): void;
							});
							public constructor();
							public static FINE: number;
							public static WARNING: number;
							public static INFO: number;
							public static CONFIG: number;
							public static SEVERE: number;
							public static FINER: number;
							public static FINEST: number;
							public config(param0: string, param1: string, param2: string): void;
							public initialise(param0: java.util.ResourceBundle, param1: string, param2: string): void;
							public warning(param0: string, param1: string, param2: string, param3: native.Array<any>): void;
							public log(param0: number, param1: string, param2: string, param3: string, param4: native.Array<any>, param5: java.lang.Throwable): void;
							public severe(param0: string, param1: string, param2: string): void;
							public finer(param0: string, param1: string, param2: string, param3: native.Array<any>): void;
							public finer(param0: string, param1: string, param2: string): void;
							public formatMessage(param0: string, param1: native.Array<any>): string;
							public info(param0: string, param1: string, param2: string, param3: native.Array<any>, param4: java.lang.Throwable): void;
							public fine(param0: string, param1: string, param2: string, param3: native.Array<any>, param4: java.lang.Throwable): void;
							public finest(param0: string, param1: string, param2: string, param3: native.Array<any>): void;
							public dumpTrace(): void;
							public info(param0: string, param1: string, param2: string): void;
							public finest(param0: string, param1: string, param2: string, param3: native.Array<any>, param4: java.lang.Throwable): void;
							public isLoggable(param0: number): boolean;
							public config(param0: string, param1: string, param2: string, param3: native.Array<any>): void;
							public setResourceName(param0: string): void;
							public info(param0: string, param1: string, param2: string, param3: native.Array<any>): void;
							public fine(param0: string, param1: string, param2: string): void;
							public trace(param0: number, param1: string, param2: string, param3: string, param4: native.Array<any>, param5: java.lang.Throwable): void;
							public warning(param0: string, param1: string, param2: string, param3: native.Array<any>, param4: java.lang.Throwable): void;
							public warning(param0: string, param1: string, param2: string): void;
							public severe(param0: string, param1: string, param2: string, param3: native.Array<any>, param4: java.lang.Throwable): void;
							public severe(param0: string, param1: string, param2: string, param3: native.Array<any>): void;
							public finer(param0: string, param1: string, param2: string, param3: native.Array<any>, param4: java.lang.Throwable): void;
							public fine(param0: string, param1: string, param2: string, param3: native.Array<any>): void;
							public config(param0: string, param1: string, param2: string, param3: native.Array<any>, param4: java.lang.Throwable): void;
							public finest(param0: string, param1: string, param2: string): void;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module logging {
						export class LoggerFactory {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.logging.LoggerFactory>;
							public static MQTT_CLIENT_MSG_CAT: string;
							public constructor();
							public static getLogger(param0: string, param1: string): me.pushy.sdk.lib.paho.logging.Logger;
							public static setLogger(param0: string): void;
							public static getLoggingProperty(param0: string): string;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module logging {
						export class SimpleLogFormatter {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.logging.SimpleLogFormatter>;
							public constructor();
							public static left(param0: string, param1: number, param2: string): string;
							public format(param0: java.util.logging.LogRecord): string;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module persist {
						export class MemoryPersistence extends me.pushy.sdk.lib.paho.MqttClientPersistence {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.persist.MemoryPersistence>;
							public constructor();
							public open(param0: string, param1: string): void;
							public put(param0: string, param1: me.pushy.sdk.lib.paho.MqttPersistable): void;
							public close(): void;
							public get(param0: string): me.pushy.sdk.lib.paho.MqttPersistable;
							public keys(): java.util.Enumeration;
							public clear(): void;
							public remove(param0: string): void;
							public containsKey(param0: string): boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module persist {
						export class MqttDefaultFilePersistence extends me.pushy.sdk.lib.paho.MqttClientPersistence {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.persist.MqttDefaultFilePersistence>;
							public constructor();
							public open(param0: string, param1: string): void;
							public put(param0: string, param1: me.pushy.sdk.lib.paho.MqttPersistable): void;
							public close(): void;
							public get(param0: string): me.pushy.sdk.lib.paho.MqttPersistable;
							public constructor(param0: string);
							public keys(): java.util.Enumeration;
							public clear(): void;
							public remove(param0: string): void;
							public containsKey(param0: string): boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module util {
						export class Debug {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.util.Debug>;
							public dumpBaseDebug(): void;
							public static left(param0: string, param1: number, param2: string): string;
							public dumpClientState(): void;
							public dumpClientComms(): void;
							public static dumpProperties(param0: java.util.Properties, param1: string): string;
							public dumpVersion(): void;
							public dumpClientDebug(): void;
							public dumpSystemProperties(): void;
							public dumpConOptions(): void;
							public constructor(param0: string, param1: me.pushy.sdk.lib.paho.internal.ClientComms);
							public dumpMemoryTrace(): void;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module lib {
				export module paho {
					export module util {
						export class Strings {
							public static class: java.lang.Class<me.pushy.sdk.lib.paho.util.Strings>;
							public static isEmpty(param0: string): boolean;
							public static containsAny(param0: string, param1: native.Array<string>): boolean;
							public static countMatches(param0: string, param1: string): number;
							public static equalsAny(param0: string, param1: native.Array<string>): boolean;
							public static containsAny(param0: string, param1: string): boolean;
						}
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module model {
				export class PushyBroadcastReceiver {
					public static class: java.lang.Class<me.pushy.sdk.model.PushyBroadcastReceiver>;
					public getReceiver(): globalAndroid.content.BroadcastReceiver;
					public constructor(param0: globalAndroid.content.BroadcastReceiver, param1: java.lang.reflect.Method);
					public execute(param0: globalAndroid.content.Context, param1: globalAndroid.content.Intent): void;
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module model {
				export class PushyDeviceCredentials {
					public static class: java.lang.Class<me.pushy.sdk.model.PushyDeviceCredentials>;
					public token: string;
					public authKey: string;
					public constructor(param0: string, param1: string);
					public constructor();
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module model {
				export module api {
					export class PushyAuthRequest {
						public static class: java.lang.Class<me.pushy.sdk.model.api.PushyAuthRequest>;
						public sdk: number;
						public auth: string;
						public token: string;
						public constructor(param0: me.pushy.sdk.model.PushyDeviceCredentials);
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module model {
				export module api {
					export class PushyAuthResponse {
						public static class: java.lang.Class<me.pushy.sdk.model.api.PushyAuthResponse>;
						public success: boolean;
						public error: string;
						public constructor();
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module model {
				export module api {
					export class PushyPubSubRequest {
						public static class: java.lang.Class<me.pushy.sdk.model.api.PushyPubSubRequest>;
						public auth: string;
						public token: string;
						public topics: native.Array<string>;
						public constructor(param0: native.Array<string>, param1: me.pushy.sdk.model.PushyDeviceCredentials);
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module model {
				export module api {
					export class PushyPubSubResponse {
						public static class: java.lang.Class<me.pushy.sdk.model.api.PushyPubSubResponse>;
						public success: boolean;
						public error: string;
						public constructor();
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module model {
				export module api {
					export class PushyRegistrationRequest {
						public static class: java.lang.Class<me.pushy.sdk.model.api.PushyRegistrationRequest>;
						public sdk: number;
						public app: string;
						public appId: string;
						public platform: string;
						public constructor();
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module model {
				export module api {
					export class PushyRegistrationResponse {
						public static class: java.lang.Class<me.pushy.sdk.model.api.PushyRegistrationResponse>;
						public token: string;
						public auth: string;
						public error: string;
						public constructor();
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module receivers {
				export class PushyBootReceiver {
					public static class: java.lang.Class<me.pushy.sdk.receivers.PushyBootReceiver>;
					public constructor();
					public onReceive(param0: globalAndroid.content.Context, param1: globalAndroid.content.Intent): void;
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module receivers {
				export class PushyPushReceiver {
					public static class: java.lang.Class<me.pushy.sdk.receivers.PushyPushReceiver>;
					public constructor();
					public onReceive(param0: globalAndroid.content.Context, param1: globalAndroid.content.Intent): void;
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module receivers {
				export class PushyUpdateReceiver {
					public static class: java.lang.Class<me.pushy.sdk.receivers.PushyUpdateReceiver>;
					public constructor();
					public onReceive(param0: globalAndroid.content.Context, param1: globalAndroid.content.Intent): void;
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module services {
				export class PushyJobService {
					public static class: java.lang.Class<me.pushy.sdk.services.PushyJobService>;
					public static isConnected(): boolean;
					public onStopJob(param0: any): boolean;
					public constructor();
					public onStartJob(param0: any): boolean;
					public scheduleReconnect(): void;
				}
				export module PushyJobService {
					export class ConnectAsync extends globalAndroid.os.AsyncTask<java.lang.Integer,string,java.lang.Integer> {
						public static class: java.lang.Class<me.pushy.sdk.services.PushyJobService.ConnectAsync>;
						public doInBackground(param0: native.Array<java.lang.Integer>): java.lang.Integer;
						public constructor(param0: me.pushy.sdk.services.PushyJobService);
					}
					export class ConnectionLostRunnable {
						public static class: java.lang.Class<me.pushy.sdk.services.PushyJobService.ConnectionLostRunnable>;
						public run(): void;
						public constructor(param0: me.pushy.sdk.services.PushyJobService);
					}
					export class SendKeepAliveAsync extends globalAndroid.os.AsyncTask<java.lang.Integer,string,java.lang.Integer> {
						public static class: java.lang.Class<me.pushy.sdk.services.PushyJobService.SendKeepAliveAsync>;
						public doInBackground(param0: native.Array<java.lang.Integer>): java.lang.Integer;
						public constructor(param0: me.pushy.sdk.services.PushyJobService);
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module services {
				export class PushySocketService {
					public static class: java.lang.Class<me.pushy.sdk.services.PushySocketService>;
					public static ACTION_START: string;
					public static ACTION_RECONNECT: string;
					public static ACTION_KEEP_ALIVE: string;
					public cancelReconnect(): void;
					public onCreate(): void;
					public onBind(param0: globalAndroid.content.Intent): globalAndroid.os.IBinder;
					public static isConnected(): boolean;
					public constructor();
					public onStartCommand(param0: globalAndroid.content.Intent, param1: number, param2: number): number;
					public scheduleReconnect(): void;
					public onTaskRemoved(param0: globalAndroid.content.Intent): void;
					public onDestroy(): void;
				}
				export module PushySocketService {
					export class ConnectAsync extends globalAndroid.os.AsyncTask<java.lang.Integer,string,java.lang.Integer> {
						public static class: java.lang.Class<me.pushy.sdk.services.PushySocketService.ConnectAsync>;
						public constructor(param0: me.pushy.sdk.services.PushySocketService);
						public doInBackground(param0: native.Array<java.lang.Integer>): java.lang.Integer;
					}
					export class ConnectionLostRunnable {
						public static class: java.lang.Class<me.pushy.sdk.services.PushySocketService.ConnectionLostRunnable>;
						public run(): void;
						public constructor(param0: me.pushy.sdk.services.PushySocketService);
					}
					export class SendKeepAliveAsync extends globalAndroid.os.AsyncTask<java.lang.Integer,string,java.lang.Integer> {
						public static class: java.lang.Class<me.pushy.sdk.services.PushySocketService.SendKeepAliveAsync>;
						public constructor(param0: me.pushy.sdk.services.PushySocketService);
						public doInBackground(param0: native.Array<java.lang.Integer>): java.lang.Integer;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export abstract class PushyAsyncTask<Params, Progress, Result>  extends java.lang.Object {
					public static class: java.lang.Class<me.pushy.sdk.util.PushyAsyncTask<any,any,any>>;
					public static THREAD_POOL_EXECUTOR: java.util.concurrent.Executor;
					public doInBackground(param0: native.Array<Params>): Result;
					public onCancelled(param0: Result): void;
					public onPreExecute(): void;
					public isCancelled(): boolean;
					public publishProgress(param0: native.Array<Progress>): void;
					public static setDefaultExecutor(param0: java.util.concurrent.Executor): void;
					public static init(): void;
					public cancel(param0: boolean): boolean;
					public executeOnExecutor(param0: java.util.concurrent.Executor, param1: native.Array<Params>): me.pushy.sdk.util.PushyAsyncTask<Params,Progress,Result>;
					public getStatus(): me.pushy.sdk.util.PushyAsyncTask.Status;
					public static execute(param0: java.lang.Runnable): void;
					public constructor();
					public onCancelled(): void;
					public onProgressUpdate(param0: native.Array<Progress>): void;
					public get(param0: number, param1: java.util.concurrent.TimeUnit): Result;
					public get(): Result;
					public onPostExecute(param0: Result): void;
					public execute(param0: native.Array<Params>): me.pushy.sdk.util.PushyAsyncTask<Params,Progress,Result>;
				}
				export module PushyAsyncTask {
					export class AsyncTaskAdapterResult<Data>  extends java.lang.Object {
						public static class: java.lang.Class<me.pushy.sdk.util.PushyAsyncTask.AsyncTaskAdapterResult<any>>;
					}
					export class InternalHandler {
						public static class: java.lang.Class<me.pushy.sdk.util.PushyAsyncTask.InternalHandler>;
						public handleMessage(param0: globalAndroid.os.Message): void;
					}
					export class Status {
						public static class: java.lang.Class<me.pushy.sdk.util.PushyAsyncTask.Status>;
						public static PENDING: me.pushy.sdk.util.PushyAsyncTask.Status;
						public static RUNNING: me.pushy.sdk.util.PushyAsyncTask.Status;
						public static FINISHED: me.pushy.sdk.util.PushyAsyncTask.Status;
						public static values(): native.Array<me.pushy.sdk.util.PushyAsyncTask.Status>;
						public static valueOf(param0: string): me.pushy.sdk.util.PushyAsyncTask.Status;
					}
					export abstract class WorkerRunnable<Params, Result>  extends java.util.concurrent.Callable<any> {
						public static class: java.lang.Class<me.pushy.sdk.util.PushyAsyncTask.WorkerRunnable<any,any>>;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export class PushyAuthentication {
					public static class: java.lang.Class<me.pushy.sdk.util.PushyAuthentication>;
					public static saveDeviceCredentials(param0: me.pushy.sdk.model.PushyDeviceCredentials, param1: globalAndroid.content.Context): void;
					public static validateCredentials(param0: me.pushy.sdk.model.PushyDeviceCredentials, param1: globalAndroid.content.Context): boolean;
					public constructor();
					public static getDeviceCredentials(param0: globalAndroid.content.Context): me.pushy.sdk.model.PushyDeviceCredentials;
					public static clearDeviceCredentials(param0: globalAndroid.content.Context): void;
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export class PushyBroadcastManager {
					public static class: java.lang.Class<me.pushy.sdk.util.PushyBroadcastManager>;
					public constructor();
					public static sendBroadcast(param0: globalAndroid.content.Context, param1: globalAndroid.content.Intent): void;
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export class PushyCertificateManager {
					public static class: java.lang.Class<me.pushy.sdk.util.PushyCertificateManager>;
					public static mSocketFactory: javax.net.SocketFactory;
					public constructor();
					public static getEnterpriseCertificateName(param0: globalAndroid.content.Context): string;
					public static isConfigured(param0: globalAndroid.content.Context): boolean;
					public static getEnterpriseSslSocketFactory(param0: globalAndroid.content.Context): javax.net.SocketFactory;
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export class PushyEndpoints {
					public static class: java.lang.Class<me.pushy.sdk.util.PushyEndpoints>;
					public constructor();
					public static getMQTTEndpoint(param0: globalAndroid.content.Context): string;
					public static getAPIEndpoint(param0: globalAndroid.content.Context): string;
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export class PushyEnterprise {
					public static class: java.lang.Class<me.pushy.sdk.util.PushyEnterprise>;
					public constructor();
					public static isConfigured(param0: globalAndroid.content.Context): boolean;
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export class PushyHTTP {
					public static class: java.lang.Class<me.pushy.sdk.util.PushyHTTP>;
					public constructor();
					public static get(param0: string, param1: globalAndroid.content.Context): string;
					public static post(param0: string, param1: string, param2: globalAndroid.content.Context): string;
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export class PushyIO {
					public static class: java.lang.Class<me.pushy.sdk.util.PushyIO>;
					public static fileExists(param0: string): boolean;
					public constructor();
					public static deleteFile(param0: string): void;
					public static writeToFile(param0: string, param1: string, param2: globalAndroid.content.Context): void;
					public static readFromFile(param0: string, param1: globalAndroid.content.Context): string;
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export class PushyLogger {
					public static class: java.lang.Class<me.pushy.sdk.util.PushyLogger>;
					public static d(param0: string): void;
					public static e(param0: string): void;
					public static setLogListener(param0: me.pushy.sdk.util.PushyLogger.PushyLogListener): void;
					public constructor();
					public static e(param0: string, param1: java.lang.Exception): void;
					public static d(param0: string, param1: java.lang.Exception): void;
				}
				export module PushyLogger {
					export class PushyLogListener {
						public static class: java.lang.Class<me.pushy.sdk.util.PushyLogger.PushyLogListener>;
						/**
						 * Constructs a new instance of the me.pushy.sdk.util.PushyLogger$PushyLogListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onDebugLog(param0: string): void;
							onErrorLog(param0: string): void;
						});
						public constructor();
						public onDebugLog(param0: string): void;
						public onErrorLog(param0: string): void;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export class PushyMqttConnection extends me.pushy.sdk.lib.paho.MqttCallback {
					public static class: java.lang.Class<me.pushy.sdk.util.PushyMqttConnection>;
					public releaseWifiLock(): void;
					public disconnectExistingClient(param0: boolean): void;
					public connectionLost(param0: java.lang.Throwable): void;
					public messageArrived(param0: string, param1: me.pushy.sdk.lib.paho.MqttMessage): void;
					public getNetwork(): number;
					public isConnected(): boolean;
					public acquireWifiLock(): void;
					public connect(): void;
					public sendKeepAlive(): void;
					public deliveryComplete(param0: me.pushy.sdk.lib.paho.IMqttDeliveryToken): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.net.wifi.WifiManager, param2: globalAndroid.net.ConnectivityManager, param3: number, param4: java.lang.Runnable);
					public isConnecting(): boolean;
					public setConnecting(param0: boolean): void;
					public static getKeepAliveInterval(param0: globalAndroid.content.Context): number;
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export class PushyNetworking {
					public static class: java.lang.Class<me.pushy.sdk.util.PushyNetworking>;
					public constructor();
					public static isNetworkAvailable(param0: globalAndroid.net.ConnectivityManager): boolean;
					public static getConnectedNetwork(param0: globalAndroid.net.ConnectivityManager): number;
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export class PushyNotifications {
					public static class: java.lang.Class<me.pushy.sdk.util.PushyNotifications>;
					public static setNotificationChannel(param0: any, param1: globalAndroid.content.Context): void;
					public constructor();
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export class PushyPermissionVerification {
					public static class: java.lang.Class<me.pushy.sdk.util.PushyPermissionVerification>;
					public constructor();
					public static verifyManifestPermissions(param0: globalAndroid.content.Context): void;
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export class PushyPersistence {
					public static class: java.lang.Class<me.pushy.sdk.util.PushyPersistence>;
					public constructor();
					public static getEnvironmentExternalStoragePath(param0: string, param1: globalAndroid.content.Context): string;
					public static getEnvironmentPreferenceKey(param0: string, param1: globalAndroid.content.Context): string;
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export class PushyPreferences {
					public static class: java.lang.Class<me.pushy.sdk.util.PushyPreferences>;
					public static saveString(param0: string, param1: string, param2: globalAndroid.content.Context): void;
					public constructor();
					public static remove(param0: string, param1: globalAndroid.content.Context): void;
					public static getInt(param0: string, param1: number, param2: globalAndroid.content.Context): number;
					public static getString(param0: string, param1: string, param2: globalAndroid.content.Context): string;
					public static getBoolean(param0: string, param1: boolean, param2: globalAndroid.content.Context): boolean;
					public static saveInt(param0: string, param1: number, param2: globalAndroid.content.Context): void;
					public static saveBoolean(param0: string, param1: boolean, param2: globalAndroid.content.Context): void;
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export class PushyPubSub {
					public static class: java.lang.Class<me.pushy.sdk.util.PushyPubSub>;
					public static unsubscribe(param0: native.Array<string>, param1: globalAndroid.content.Context): void;
					public static subscribe(param0: native.Array<string>, param1: globalAndroid.content.Context): void;
					public constructor();
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export class PushyServiceManager {
					public static class: java.lang.Class<me.pushy.sdk.util.PushyServiceManager>;
					public static stop(param0: globalAndroid.content.Context): void;
					public constructor();
					public static start(param0: globalAndroid.content.Context): void;
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export class PushySingleton {
					public static class: java.lang.Class<me.pushy.sdk.util.PushySingleton>;
					public static getSettings(param0: globalAndroid.content.Context): globalAndroid.content.SharedPreferences;
					public constructor();
					public static getJackson(): me.pushy.sdk.lib.jackson.databind.ObjectMapper;
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export class PushyStringUtils {
					public static class: java.lang.Class<me.pushy.sdk.util.PushyStringUtils>;
					public constructor();
					public static stringIsNullOrEmpty(param0: string): boolean;
					public static equals(param0: string, param1: string): boolean;
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export module exceptions {
					export class PushyDateTime {
						public static class: java.lang.Class<me.pushy.sdk.util.exceptions.PushyDateTime>;
						public constructor();
						public static getCurrentTimestamp(): number;
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export module exceptions {
					export class PushyException {
						public static class: java.lang.Class<me.pushy.sdk.util.exceptions.PushyException>;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export module exceptions {
					export class PushyFatalException extends me.pushy.sdk.util.exceptions.PushyException {
						public static class: java.lang.Class<me.pushy.sdk.util.exceptions.PushyFatalException>;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export module exceptions {
					export class PushyJsonParseException extends me.pushy.sdk.util.exceptions.PushyException {
						public static class: java.lang.Class<me.pushy.sdk.util.exceptions.PushyJsonParseException>;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export module exceptions {
					export class PushyNetworkException extends me.pushy.sdk.util.exceptions.PushyException {
						public static class: java.lang.Class<me.pushy.sdk.util.exceptions.PushyNetworkException>;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export module exceptions {
					export class PushyPermissionException extends me.pushy.sdk.util.exceptions.PushyException {
						public static class: java.lang.Class<me.pushy.sdk.util.exceptions.PushyPermissionException>;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export module exceptions {
					export class PushyPubSubException extends me.pushy.sdk.util.exceptions.PushyException {
						public static class: java.lang.Class<me.pushy.sdk.util.exceptions.PushyPubSubException>;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module me {
	export module pushy {
		export module sdk {
			export module util {
				export module exceptions {
					export class PushyRegistrationException extends me.pushy.sdk.util.exceptions.PushyException {
						public static class: java.lang.Class<me.pushy.sdk.util.exceptions.PushyRegistrationException>;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

//Generics information:
//me.pushy.sdk.lib.jackson.annotation.JacksonAnnotationValue:1
//me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerator:1
//me.pushy.sdk.lib.jackson.annotation.ObjectIdGenerators.Base:1
//me.pushy.sdk.lib.jackson.core.type.TypeReference:1
//me.pushy.sdk.lib.jackson.core.util.Instantiatable:1
//me.pushy.sdk.lib.jackson.databind.JsonDeserializer:1
//me.pushy.sdk.lib.jackson.databind.JsonSerializer:1
//me.pushy.sdk.lib.jackson.databind.MappingIterator:1
//me.pushy.sdk.lib.jackson.databind.cfg.MapperConfig:1
//me.pushy.sdk.lib.jackson.databind.cfg.MapperConfigBase:2
//me.pushy.sdk.lib.jackson.databind.deser.std.BaseNodeDeserializer:1
//me.pushy.sdk.lib.jackson.databind.deser.std.ContainerDeserializerBase:1
//me.pushy.sdk.lib.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer:1
//me.pushy.sdk.lib.jackson.databind.deser.std.FromStringDeserializer:1
//me.pushy.sdk.lib.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer:1
//me.pushy.sdk.lib.jackson.databind.deser.std.PrimitiveArrayDeserializers:1
//me.pushy.sdk.lib.jackson.databind.deser.std.ReferenceTypeDeserializer:1
//me.pushy.sdk.lib.jackson.databind.deser.std.StdDelegatingDeserializer:1
//me.pushy.sdk.lib.jackson.databind.deser.std.StdDeserializer:1
//me.pushy.sdk.lib.jackson.databind.deser.std.StdNodeBasedDeserializer:1
//me.pushy.sdk.lib.jackson.databind.deser.std.StdScalarDeserializer:1
//me.pushy.sdk.lib.jackson.databind.ext.DOMDeserializer:1
//me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.Linked:1
//me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.MemberIterator:1
//me.pushy.sdk.lib.jackson.databind.introspect.POJOPropertyBuilder.WithMember:1
//me.pushy.sdk.lib.jackson.databind.introspect.VisibilityChecker:1
//me.pushy.sdk.lib.jackson.databind.introspect.WithMember:1
//me.pushy.sdk.lib.jackson.databind.jsontype.TypeResolverBuilder:1
//me.pushy.sdk.lib.jackson.databind.node.ContainerNode:1
//me.pushy.sdk.lib.jackson.databind.ser.ContainerSerializer:1
//me.pushy.sdk.lib.jackson.databind.ser.std.ArraySerializerBase:1
//me.pushy.sdk.lib.jackson.databind.ser.std.AsArraySerializerBase:1
//me.pushy.sdk.lib.jackson.databind.ser.std.DateTimeSerializerBase:1
//me.pushy.sdk.lib.jackson.databind.ser.std.NonTypedScalarSerializerBase:1
//me.pushy.sdk.lib.jackson.databind.ser.std.NumberSerializers.Base:1
//me.pushy.sdk.lib.jackson.databind.ser.std.RawSerializer:1
//me.pushy.sdk.lib.jackson.databind.ser.std.ReferenceTypeSerializer:1
//me.pushy.sdk.lib.jackson.databind.ser.std.StaticListSerializerBase:1
//me.pushy.sdk.lib.jackson.databind.ser.std.StdArraySerializers.TypedPrimitiveArraySerializer:1
//me.pushy.sdk.lib.jackson.databind.ser.std.StdScalarSerializer:1
//me.pushy.sdk.lib.jackson.databind.ser.std.StdSerializer:1
//me.pushy.sdk.lib.jackson.databind.util.ArrayIterator:1
//me.pushy.sdk.lib.jackson.databind.util.Converter:2
//me.pushy.sdk.lib.jackson.databind.util.LRUMap:2
//me.pushy.sdk.lib.jackson.databind.util.LinkedNode:1
//me.pushy.sdk.lib.jackson.databind.util.PrimitiveArrayBuilder:1
//me.pushy.sdk.lib.jackson.databind.util.PrimitiveArrayBuilder.Node:1
//me.pushy.sdk.lib.jackson.databind.util.StdConverter:2
//me.pushy.sdk.util.PushyAsyncTask:3
//me.pushy.sdk.util.PushyAsyncTask.AsyncTaskAdapterResult:1
//me.pushy.sdk.util.PushyAsyncTask.WorkerRunnable:2

